button_card_templates:
  police:
    styles:
      card:
        - font-family: Avenir
  style:
    styles:
      card:
        - border-color: rgba(12, 12, 14, 0.2)
        - border-style: outset
        - border-width: 1px
        - box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3)
  style_off:
    styles:
      card:
        - '--ha-card-border-width': 0px
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)
        - '--ha-card-box-shadow': none
  sidebar:
    entity: weather.ta_ville
    show_entity_picture: false
    show_icon: false
    show_name: false
    show_state: false
    show_label: false
    template:
      - police
      - style
    styles:
      grid:
        - grid-template-areas: |
            "temp"
            "heure" 
            "date"
            "titre_avertissement"
            "device_hs"
            "titre_programme"
            "alerte"            
            "anniv"
            "calendrier"
            "poubelle"
            "titre_activite"
            "reveil"
            "serrure"
            "courrier"
            "rappel"
            "mouvement"
            "porte"
            "lumiere"
            "appareil"
            "aspi_mode_vacances"
            "modes"
            "air"
            "enedis"
            "gaz"
            "appareils_charges"
            "app_connectes"
            "titre_info"
            "info"

            "titre_maj"
            "maj"
            "meteo"
            "boutons"
        - grid-template-columns: 1fr
        - grid-template-rows: >-
            min-content min-content min-content min-content  min-content 
            min-content  min-content  min-content  min-content  min-content 
            min-content  min-content   min-content  min-content  min-content
            min-content  min-content  min-content  min-content  min-content 
            min-content 1fr
        - gap: 0%
        - overflow: hidden
      card:
        - '-webkit-tap-highlight-color': rgba(0,0,0,0)
        - padding: 2% 4% 2% 4%
        - line-height: 125%
        - font-size: 13px
      img_cell:
        - border-radius: 01%
        - width: 60px
        - height: 60px
        - position: absolute
        - top: 9%
        - left: 75%
        - background-color: transparent
        - color: transparent
        - border-color: transparent
        - box-shadow: transparent
      entity_picture:
        - width: 75%
      custom_fields:
        heure:
          - text-align: center
          - padding: 45px 0px 05px 0px
          - color: lightgrey
          - font-size: 40px
        date:
          - text-align: center
          - padding: 03px 0px 0px 05px
          - color: lightgrey
          - font-size: 13px
        temp:
          - padding: 0px 0px 0px 0px
          - position: absolute
          - left: 68%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--ha-card-border-width': 0px
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
        titre_programme:
          - padding: 15px 0px 01px 0px
          - font-size: 90%
          - font-weight: bold
          - font-style: null
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_sidebar)
          - white-space: normal
        alerte:
          - color: |
              [[[
                if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Jaune')
                  return 'yellow'
                if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Orange')
                  return 'orange'
                if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Rouge')
                  return 'red'
                return ''
              ]]]
          - border-left: |
              [[[
                if (states['sensor.weather_alerte_couleur_v2'].state == "Aucune vigilance en cours")
                  return '';
                return '2px rgb(180, 70, 70) solid';
              ]]]
          - padding: 0px 0px 0px 0px
          - padding-left: 8px
          - justifiy-self: start
          - text-align: left
          - white-space: normal
        anniv:
          - border-left: |
              [[[
                if (states['sensor.anniversaire'].state == 'Aucun')
                  return '';
                return '2px rgb(180, 70, 70) solid';
              ]]]
          - padding: 0px 0px 0px 0px
          - padding-left: 8px
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_info_sidebar)
          - white-space: normal
        calendrier:
          - border-left: 2px rgb(180, 70, 70) solid
          - padding: 0px 0px 0px 0px
          - padding-left: 8px
          - color: |
              [[[
                if (states['sensor.calendar_famille'].state == 'Aucun évènement')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
          - justifiy-self: start
          - text-align: left
          - white-space: normal
        poubelle:
          - border-left: 2px rgb(180, 70, 70) solid
          - padding: 0px 0px 0px 0px
          - padding-left: 8px
          - color: |
              [[[
                if (states['sensor.calendar_poubelles'].state == 'Aucun rappel')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
          - justifiy-self: start
          - text-align: left
          - white-space: normal
        titre_avertissement:
          - font-style: null
          - padding: |
              [[[
                if (states['sensor.systeme_avertissement'].state == '' )
                  return "0px 0px 0px 0px" ;
                return "15px 0px 01px 0px" ;
              ]]]
          - font-size: 90%
          - font-weight: bold
          - justifiy-self: start
          - text-align: left
          - color: red
          - white-space: normal
        device_hs:
          - border-left: 2px rgb(180, 70, 70) solid
          - padding: |
              [[[
                if (states['sensor.systeme_avertissement'].state == '')
                  return "0px 0px 0px 0px" ;
                return "0px 0px 0px 08px" ;
              ]]]
          - justifiy-self: start
          - color: red
          - white-space: normal
          - text-align: left
        titre_activite:
          - font-style: null
          - padding: 15px 0px 01px 0px
          - font-size: 90%
          - font-weight: bold
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_sidebar)
          - white-space: normal
        serrure:
          - border-left: 2px grey solid
          - white-space: normal
          - text-align: left
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - color: var(--text_on_info_sidebar)
        aspi_mode_vacances:
          - border-left: 2px grey solid
          - white-space: normal
          - text-align: left
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - color: var(--text_on_info_sidebar)
        appareil:
          - border-left: 2px grey solid
          - white-space: normal
          - text-align: left
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - color: |
              [[[
                if (states['sensor.compteur_autre'].state == '0')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
        reveil:
          - border-left: 2px grey solid
          - white-space: normal
          - text-align: left
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - color: |
              [[[
                if (states['input_boolean.nilemato'].state == "on" && states['sensor.tom_reveil'].state == "unknown")
                  return 'red';
                return 'var(--text_on_info_sidebar)';
              ]]]
        courrier:
          - border-left: 2px grey solid
          - white-space: normal
          - text-align: left
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - color: var(--text_on_info_sidebar)
        air:
          - border-left: 2px grey solid
          - white-space: normal
          - text-align: left
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - color: var(--text_on_info_sidebar)
        lumiere:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - color: |
              [[[
                if (states['light.tout'].state == 'off')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
          - white-space: normal
          - text-align: left
        mouvement:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: |
              [[[
                if (states['binary_sensor.mouvements'].state == 'off')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
          - white-space: normal
        porte:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: |
              [[[
                if (states['binary_sensor.portes'].state == 'off')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
          - white-space: normal
        rappel:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - white-space: normal
          - color: |
              [[[
                if (states['sensor.rappel'].state == 'Aucun')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
        enedis:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_info_sidebar)
          - white-space: normal
        gaz:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_info_sidebar)
          - white-space: normal
        modes:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_info_sidebar)
          - white-space: normal
        app_connectes:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_info_sidebar)
          - white-space: normal
        appareils_charges:
          - border-left: 2px dodgerblue solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_info_sidebar)
          - white-space: normal
        titre_info:
          - padding: |
              [[[
                if (states['input_boolean.sidecar_show_info'].state == 'off')
                  return "0px" ;
                return "15px 0px 01px 0px" 
              ]]]
          - font-size: 90%
          - font-weight: bold
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_sidebar)
          - white-space: normal
        info:
          - border-left: 2px darkslategrey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_info_sidebar)
          - white-space: normal
        meteo:
          - padding: |
              [[[
                if (states['input_boolean.sidebar_show_meteo'].state == 'off')
                  return "0px" ;
                return "25px 0px 01px 0px" 
              ]]]
          - align-self: middle
          - white-space: normal
          - width: calc(100% + 0px)
          - '--ha-card-border-width': 0px
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
        boutons:
          - padding: 15px 0px 0px 0px
          - align-self: middle
          - white-space: normal
          - width: calc(100% + 0px)
          - '--ha-card-border-width': 0px
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
        titre_maj:
          - padding: |
              [[[
                if (states['sensor.maj'].state == 'Aucune mise à jour' || states['input_boolean.sidecar_show_maj'].state == 'off')
                  return "0px" ;
                return "15px 0px 01px 0px" 
              ]]]
          - font-size: 90%
          - font-weight: bold
          - font-style: null
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_sidebar)
          - white-space: normal
        maj:
          - border-left: 2px dodgerblue solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: |
              [[[
                if (states['sensor.maj'].state == 'Aucune mise à jour')
                  return "var(--text_off)" ;
                return "var(--text_on_info_sidebar)" 
              ]]]
          - white-space: normal
    custom_fields:
      heure: |
        [[[return states['sensor.time'].state ]]]
      date: >
        [[[return states['sensor.date_jour'].state+"
        "+states['sensor.date_numero'].state + " " +

        states['sensor.date_mois'].state]]]
      alerte: |
        [[[
          if (states['sensor.weather_alerte_couleur_v2'].state == "Aucune vigilance en cours" ) 
            return ""
          return "Vigilance "+states['sensor.weather_alerte'].state
        ]]]
      titre_programme: |
        [[[return "Aujourd'hui " ]]]
      anniv: |
        [[[
          if (states['sensor.anniversaire'].state == 'Aucun')
            return "" 
          return "🎉 " + states['sensor.anniversaire'].state
        ]]]
      calendrier: |
        [[[ return  states['sensor.calendar_famille'].state
        ]]]
      poubelle: |
        [[[ return  states['sensor.calendar_poubelles'].state
        ]]]
      titre_avertissement: |
        [[[
          if (states['sensor.systeme_avertissement'].state == '')
            return "" 
          return "Avertissement" 
        ]]]
      device_hs: |
        [[[
          if (states['sensor.systeme_avertissement'].state == '')
            return "" 
          return states['sensor.systeme_avertissement'].state ;
        ]]]
      titre_activite: |
        [[[ return "Maison" 
        ]]]
      serrure: |
        [[[
          if (states['group.serrures'].state == 'locked' || states['input_boolean.sidebar_show_serrures'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:lock-open"
            style="width: 16px; color: red; height: 16px; margin-right: 2px;">
            </ha-icon><span><font color= darkgrey>Serrure déverrouilée : ${states['sensor.serrure_ouverte'].state}</span>`
          if (states['lock.garage'].state == 'jammed' || states['input_boolean.sidebar_show_serrures'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:lock-alert"
            style="width: 16px; color: red; height: 16px; margin-right: 2px;">
            </ha-icon><span><font color= darkgrey>Serrure coincée : Garage</span>`
        ]]]
      aspi_mode_vacances: |
        [[[
          if (states['input_boolean.vacances'].state == 'off')
            return ""
          return `<ha-icon
            icon="phu:roborock"
            style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
            </ha-icon><span>Prochain nettoyage : ${states['sensor.aspi_mode_vacances'].state}</span>`
        ]]]
      appareil: |
        [[[
          if (states['sensor.compteur_autre'].state == 0 || states['input_boolean.sidecar_show_autre'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:power"
            style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.autres_appareils'].state}</span>`
        ]]]
      courrier: |
        [[[
          if (states['input_boolean.sidecar_show_courrier'].state == 'off' )
            return ""
          if (states['input_boolean.sidecar_show_courrier'].state == 'on' && states['input_boolean.courrier_releve'].state == 'off' && states['input_boolean.boite_aux_lettres_ouverte'].state == 'off')
            return ""
          if (states['input_boolean.sidecar_show_courrier'].state == 'on' && states['input_boolean.courrier_releve'].state == 'on')
            return `<ha-icon
              icon="mdi:email"
              style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
              </ha-icon><span>Courrier relevé à ${states['sensor.courrier_releve'].state}</span>`
          if (states['input_boolean.sidecar_show_courrier'].state == 'on' && states['input_boolean.boite_aux_lettres_ouverte'].state == 'on')
            return `<ha-icon
              icon="mdi:email"
              style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
              </ha-icon><span>Boîte aux lettres ouverte à ${states['sensor.boite_aux_lettres_ouvertee'].state}</span>`
        ]]]
      air: |
        [[[
          if (states['input_boolean.sidecar_show_air'].state == 'off' )
            return ""
          if (states['sensor.moniteur_qualite_air'].state < 65 )
            return ""
          if (states['sensor.moniteur_qualite_air'].state >= 65 && states['sensor.moniteur_qualite_air'].state < 220 )
            return `<ha-icon
              icon="mdi:blur"
              style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
              </ha-icon><span>Air : correct, aération recommandée</span>`
          if (states['sensor.moniteur_qualite_air'].state >= 220 && states['sensor.moniteur_qualite_air'].state < 660 )
            return `<ha-icon
              icon="mdi:blur"
              style="width: 16px; color: orange; height: 16px; margin-right: 2px;">
              </ha-icon><span><font color= orange>Air : moyen, aération intense recommandée</span>`
          if (states['sensor.moniteur_qualite_air'].state >= 660 && states['sensor.moniteur_qualite_air'].state < 2200 )
            return `<ha-icon
              icon="mdi:blur"
              style="width: 16px; color: orange; height: 16px; margin-right: 2px;">
              </ha-icon><span><font color= orange>Air : mauvais, aération intense nécessaire </span>`
          if (states['sensor.moniteur_qualite_air'].state >= 2200 )
            return `<ha-icon
              icon="mdi:blur"
              style="width: 16px; color: red; height: 16px; margin-right: 2px;">
              </ha-icon><span><font color= red>Air : Danger ! Aération intense nécessaire </span>`
        ]]]
      lumiere: |
        [[[
          if (states['sensor.lumiere_etat'].state == 'Aucune' || states['input_boolean.sidecar_show_lumiere'].state == 'off')
            return ""
          return `<ha-icon
            icon="phu:bulb-group-filament-candle"
            style="width: 16px; color: gold; height: 16px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.lumiere_etat'].state}</span>`
        ]]]
      mouvement: |
        [[[
          if (states['sensor.mouv_on'].state == 'Aucun' || states['input_boolean.sidecar_show_mouvement'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:run"
            style="width: 16px; color: red; height: 16px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.mouv_on'].state}</span>`
        ]]]
      porte: |
        [[[
          if (states['sensor.porte_on'].state == 'Aucune'|| states['input_boolean.sidecar_show_porte'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:door-open"
            style="width: 16px; color: red; height: 16px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.porte_on'].state}</span>`
        ]]]
      rappel: |
        [[[
          if (states['sensor.rappel'].state == "unavailable")
            return `<ha-icon
              icon="mdi:reminder"
              style="width: 16px; color: red; height: 16px; margin-right: 2px;">
              </ha-icon><span><font color= red>Indisponible</span>`
          if (states['sensor.rappel'].state == "")
            return ""
          return `<ha-icon
            icon="mdi:reminder"
            style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.rappel'].state}</span>`
        ]]]
      reveil: |
        [[[
          if (states['input_boolean.nilemato'].state == "on" && states['sensor.tom_reveil'].state == "unavailable")
            return `<ha-icon
              icon="mdi:alarm"
              style="width: 16px; color: red; height: 16px; margin-right: 2px;">
              </ha-icon><span><font color= red>Indisponible</span>`
          if (states['input_boolean.nilemato'].state == "off" && states['sensor.reveil'].state == "")
            return ""
          if (states['input_boolean.nilemato'].state == "off" && states['sensor.reveil'].state != "")
          return `<ha-icon
            icon="mdi:alarm"
            style="width: 16px; color: red; height: 16px; margin-right: 2px;">
            </ha-icon><span><font color= red> Réveils enfants programmés</span>`
          if (states['input_boolean.nilemato'].state == "on" && states['sensor.reveil'].state == "" )
          return `<ha-icon
            icon="mdi:alarm"
            style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
            </ha-icon><span> Aucun réveil</span>`
          if (states['input_boolean.nilemato'].state == "on" && states['sensor.reveil'].state != "" )
          return `<ha-icon
            icon="mdi:alarm"
            style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.reveil'].state}</span>`

        ]]]
      appareils_charges: |
        [[[
          if (states['sensor.appareils_charges'].state == '' || states['input_boolean.sidecar_show_appareils_charges'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:battery-charging-100"
            style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.appareils_charges'].state}</span>`
        ]]]
      app_connectes: |
        [[[
          if (states['sensor.app_connectes'].state == 'Aucun' || states['input_boolean.sidecar_show_connecte'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:access-point-network"
            style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.app_connectes2'].state}</span>`
        ]]]
      enedis: |
        [[[
          if (states['input_boolean.sidecar_show_electricite'].state == 'off')
            return ""
          if (states['sensor.myenedis_cost_yesterday_09397539765420'].state == '-1.0')
          return `<ha-icon
            icon="mdi:flash-alert"
            style="width: 16px; color: var(--text_on_sidebar); height: 16px; margin-right: 2px;">
            </ha-icon><span>Enedis: en attente</span>`
          if (states['sensor.myenedis_cost_yesterday_09397539765420'].state == 'unavailable')
          return `<ha-icon
            icon="mdi:flash-off"
            style="width: 16px; color: var(--text_on_sidebar); height: 16px; margin-right: 2px;">
            </ha-icon><span>Enedis : en attente</span>`
          if (states['sensor.myenedis_cost_yesterday_09397539765420'].state != '-1.0')
          return `<ha-icon
            icon="mdi:flash"
            style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
            </ha-icon><span>Électricité : ${states['sensor.electricite_conso_kwh_arrondie'].state}kWh / ${states['sensor.electricite_cout_jour_avec_abo'].state}€</span>`
        ]]]
      gaz: |
        [[[
          if (states['input_boolean.sidecar_show_gaz'].state == 'off')
            return ""
          if (states['sensor.grdf_consommation_gaz'].state == 'unavailable')
          return `<ha-icon
            icon="mdi:gas-burner"
            style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
            </ha-icon><span>Gaz : en attente</span>`
          if (states['sensor.grdf_consommation_gaz'].state != '-1.0')
          return `<ha-icon
            icon="mdi:gas-burner"
            style="width: 16px; color: '#6aa17f'; height: 16px; margin-right: 2px;">
            </ha-icon><span>Gaz : ${states['sensor.grdf_consommation_gaz'].state}kWh / ${states['sensor.gaz_cout_jour_avec_abo'].state}€</span>`
        ]]]
      modes: |
        [[[
          if (states['sensor.modes'].state == 'Aucun'|| states['input_boolean.sidecar_show_mode'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:order-bool-descending-variant"
            style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
            </ha-icon><span>Mode : ${states['sensor.modes'].state}</span>`
        ]]]
      titre_info: |
        [[[  if (states['input_boolean.sidecar_show_info'].state == 'on')
               return "Savoir Inutile" 
             return ""
        ]]]
      info: |
        [[[ if (states['input_boolean.sidecar_show_info'].state == 'on')
              return states['sensor.web_scrape'].state 
             return ""
        ]]]
      titre_maj: |
        [[[ 
          if (states['sensor.maj'].state == 'Aucune mise à jour' || states['input_boolean.sidecar_show_maj'].state == 'off')
            return "" 
          return "Mise à jour"
        ]]]
      maj: |
        [[[ 
          if (states['sensor.maj'].state == 'Aucune mise à jour' || states['input_boolean.sidecar_show_maj'].state == 'off')
            return "" 
          return states['sensor.maj'].state  
         ]]] 
      temp:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              tap_action:
                action: navigate
                navigation_path: /lovelace/Agenda
              entity: weather.maison
              template: badge
              show_entity_picture: true
              icon: mdi:thermometer
              entity_picture: |
                [[[
                  if ((entity.state == 'sunny') && (states['sun.sun'].state == 'above_horizon'))
                    return "/local/weather/icones animes/clear-day.svg"
                  if ((entity.state == 'sunny') || (entity.state == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
                    return "/local/weather/icones animes/clear-night.svg"  

                  if ((entity.state == 'lightning-rainy') && (states['sun.sun'].state == 'above_horizon'))
                    return "/local/weather/icones animes/thunderstorms-day-rain.svg"
                  if ((entity.state == 'lightning-rainy') || (entity.state == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
                    return "/local/weather/icones animes/thunderstorms-night-rain.svg"

                  if ((entity.state == 'fog') && (states['sun.sun'].state == 'above_horizon'))
                    return "/local/weather/icones animes/fog-day.svg"             
                  if ((entity.state == 'fog') && (states['sun.sun'].state == 'below_horizon'))
                    return "/local/weather/icones animes/fog-night.svg"

                  if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'above_horizon'))
                    return "/local/weather/icones animes/partly-cloudy-day.svg"                    
                  if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'below_horizon'))
                    return "/local/weather/icones animes/partly-cloudy-night.svg"  

                  if ((entity.state == 'rainy') && (states['sun.sun'].state == 'above_horizon'))
                    return "/local/weather/icones animes/partly-cloudy-day-rain.svg"                      
                  if ((entity.state == 'rainy') && (states['sun.sun'].state == 'below_horizon'))
                    return "/local/weather/icones animes/partly-cloudy-night-rain.svg" 

                  if ((entity.state == 'lightning') && (states['sun.sun'].state == 'above_horizon'))
                    return "/local/weather/icones animes/thunderstorms-day.svg"                      
                  if ((entity.state == 'lightning') && (states['sun.sun'].state == 'below_horizon'))
                    return "/local/weather/icones animes/thunderstorms-night.svg" 

                  if (entity.state == 'clear-night')
                    return "/local/weather/icones animes/clear-night.svg";

                  if (entity.state == 'sleet')
                    return "/local/weather/icones animes/sleet.svg";  

                  if (entity.state == 'pouring')
                    return "/local/weather/icones animes/umbrella.svg"; 

                  if (entity.state == 'snowy-rainy')
                    return "/local/weather/icones animes/sleet.svg";  

                  if (entity.state == 'snow')
                    return "/local/weather/icones animes/snow.svg"; 

                  if (entity.state == 'snowy')
                    return "/local/weather/icones animes/snow.svg"; 

                  if (entity.state == 'cloudy')
                    return "/local/weather/icones animes/cloudy.svg"; 

                  if (entity.state == 'wind')
                    return "/local/weather/icones animes/wind.svg"; 

                  if (entity.state == 'hail')
                    return "/local/weather/icones animes/hail.svg"; 
                ]]]
              label: |
                [[[
                  return states['sensor.weather_temperature_v2'].state+"°"
                ]]]
              styles:
                label:
                  - font-size: 13px
                entity_picture:
                  - width: 120%
                icon:
                  - width: 22px
                  - color: |
                      [[[
                        if (states['sensor.weather_temperature_v2'].state > 26)
                          return 'var(--custom-icon-color-red)'
                        if (states['sensor.weather_temperature_v2'].state < 10)
                          return 'var(--custom-icon-color-blue)'
                        return ''
                      ]]]
            - type: custom:button-card
              entity: sensor.temp_moyenne_rdc
              icon: mdi:home-thermometer
              template: badge
              label: |
                [[[
                  return states['sensor.temp_moyenne_rdc'].state+"°"
                ]]]
              styles:
                label:
                  - font-size: 13px
                icon:
                  - width: 21px
                  - color: |
                      [[[
                        if (states['sensor.temp_moyenne_rdc'].state > 26)
                          return 'var(--custom-icon-color-red)'
                        if (states['sensor.temp_moyenne_rdc'].state < 18)
                          return 'var(--custom-icon-color-blue)'
                        return ''
                      ]]]
              tap_action:
                action: navigate
                navigation_path: /lovelace/Temp
            - type: custom:button-card
              entity: sensor.qualite_air_pourcentage
              icon: mdi:blur
              template: badge
              label: |
                [[[
                  return states['sensor.qualite_air_pourcentage'].state+"%"
                ]]]
              styles:
                label:
                  - font-size: 13px
                icon:
                  - width: 21px
                  - color: |
                      [[[
                        if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96)
                          return 'var(--custom-icon-color-blue)'
                        if (states['sensor.qualite_air_pourcentage'].state < 96 && states['sensor.qualite_air_pourcentage'].state > 88)
                          return 'yellow'
                        if (states['sensor.qualite_air_pourcentage'].state < 88 && states['sensor.qualite_air_pourcentage'].state > 60)
                          return 'orange'
                        if (states['sensor.qualite_air_pourcentage'].state < 60)
                          return 'red'                          
                        return ''
                      ]]]
              tap_action:
                action: navigate
                navigation_path: /lovelace/air
      meteo:
        card:
          type: conditional
          conditions:
            - entity: input_boolean.sidebar_show_meteo
              state: 'on'
          card:
            type: custom:meteofrance-weather-card
            entity: weather.maison
            icons: /local/weather/weather_icons/animated/
            number_of_forecasts: '3'
            current: false
            details: false
            style: |
              ha-card { 
                #margin: 12% 0 2% !important;
                background: rgba(0,0,0,0);
                box-shadow: none;
                padding: 0 !important;
                font-size: 12px;

              }
              li.precipitation {
                display: none;
              }
              li.precipitation_probability {
                display: none;
              }
              li.icon {
                margin-top: -10px;
              }

              li{
                margin-top: 0px
              }
              li.highTemp {
                margin-top: -8px
              }
              div.day {
                border-right: 0.6em solid rgb(26,137,245,0.0);
              }
              li.lowTemp {
                display: none;;
              }
            forecast: true
            hourly_forecast: false
            alert_forecast: false
            one_hour_forecast: false
      boutons:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: switch.adguard_protection
              show_name: false
              show_label: false
              template:
                - carte_badge
                - state_bleu_rouge
            - type: custom:button-card
              entity: binary_sensor.home_assistant_versions_update_available
              icon: mdi:home-assistant
              show_name: false
              show_label: false
              template:
                - carte_badge
              styles:
                img_cell:
                  - background-color: |
                      [[[
                        if (states['binary_sensor.home_assistant_versions_update_available'].state == "on" || states['update.home_assistant_supervisor_update'].state == "on" || states['update.home_assistant_operating_system_update'].state == "on")
                          return 'var(--custom-img-cell-color-blue)'
                        return 'var(--pastille_off)'
                      ]]]
                icon:
                  - color: |
                      [[[
                        if (states['binary_sensor.home_assistant_versions_update_available'].state == "on" || states['update.home_assistant_supervisor_update'].state == "on" || states['update.home_assistant_operating_system_update'].state == "on")
                          return 'var(--custom-icon-color-blue)'
                        return 'var(--icon_off)'
                      ]]]
              tap_action:
                action: navigate
                navigation_path: /lovelace/systeme
              double_tap_action:
                action: call-service
                service: input_boolean.toggle
                service_data:
                  entity_id: input_boolean.sidecar_show_maj
            - type: custom:button-card
              entity: sensor.hacs
              icon: mdi:package-variant
              show_name: false
              show_label: false
              template:
                - carte_badge
              styles:
                img_cell:
                  - background-color: |
                      [[[
                        if (states['sensor.hacs'].state > 1)
                         return 'var(--custom-img-cell-color-blue)'
                        return 'var(--pastille_off)'
                      ]]]
                icon:
                  - color: |
                      [[[
                        if (states['sensor.hacs'].state > 1)
                         return 'var(--custom-icon-color-blue)'
                        return 'var(--icon_off)'
                      ]]]
              tap_action:
                action: navigate
                navigation_path: /lovelace/systeme
              double_tap_action:
                action: call-service
                service: input_boolean.toggle
                service_data:
                  entity_id: input_boolean.sidecar_show_maj
            - type: custom:button-card
              icon: mdi:wifi
              show_name: false
              show_label: false
              template:
                - carte_badge
              styles:
                img_cell:
                  - background-color: var(--pastille_off)
                icon:
                  - color: var(--icon_off)
              tap_action:
                action: navigate
                navigation_path: /lovelace/invités
            - type: custom:button-card
              icon: mdi:cog
              show_name: false
              show_label: false
              template:
                - carte_badge
              styles:
                img_cell:
                  - background-color: var(--pastille_off)
                icon:
                  - color: var(--icon_off)
              tap_action:
                action: navigate
                navigation_path: /lovelace/reglages
  last_changed:
    label: |
      [[[
        var last_changed = states[entity.entity_id].last_changed;
        
        var now = new Date();
        var date = new Date(last_changed);
        date.toLocaleString();
        
        var diff = (now - date) / 1000;
        var days = Math.floor(diff / 86400);
        diff = diff % 86400;
        var hours = Math.floor(diff / 3600);
        diff = diff % 3600;
        var minutes = Math.floor(diff / 60);
        var seconds = Math.floor(diff % 60);
        
        
        if (days > 0) {
           return days + "j " + hours + "h ";
        }else{
           if (hours > 0) {
              return hours + "h " + "et " + minutes + "min";
           } else {
              if (minutes > 0) {
                 return minutes + "min et " + seconds + "s";
              } else {
                 return seconds + "s";
              }
           }
        }
      ]]]
  base:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
    styles:
      grid:
        - grid-template-areas: '"i n" "i s" "i l" '
        - grid-template-columns: min-content auto
        - grid-template-rows: min-content min-content min-content
      img_cell:
        - background-color: var(--pastille_off)
        - border-radius: 50%
        - place-self: start
        - text-align: start
        - width: 35px
        - height: 35px
      icon:
        - width: 55%
        - color: var(--icon_off)
      name:
        - color: rgba(232,233,242,1)
        - align-self: end
        - justify-self: start
        - text-align: left
        - font-weight: null
        - font-size: 13px
        - margin-left: 9px
      state:
        - white-space: normal
        - color: lightgrey
        - justify-self: start
        - align-self: end
        - font-weight: bold
        - text-align: left
        - font-size: 12px
        - filter: opacity(90%)
        - margin-left: 9px
        - line-height: 110%
        - margin-top: 0px
      label:
        - white-space: normal
        - color: lightgrey
        - justify-self: start
        - align-self: start
        - text-align: left
        - font-weight: bold
        - font-size: 12px
        - filter: opacity(90%)
        - margin-left: 9px
        - margin-bottom: 2px
        - line-height: 110%
      card:
        - padding: 8px 5px 8px 5px
        - font-size: 100%
        - white-space: normal
      custom_fields:
        bouton:
          - position: absolute
          - top: 72%
          - left: 50%
          - width: calc(90% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--ha-card-border-width': 0px
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
        bouton2:
          - position: absolute
          - top: 48%
          - left: 50%
          - width: calc(90% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--ha-card-border-width': 0px
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
        jauge-cercle:
          - top: '-03%'
          - left: 75%
          - width: 25%
          - position: absolute
          - opacity: 80%
          - z-index: 2
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        graph_temp:
          - position: absolute
          - top: 80%
          - left: 50%
          - width: calc(100% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        temp:
          - position: absolute
          - left: 8%
          - top: 60px
          - font-size: 20px
          - font-weight: bold
        hum:
          - position: absolute
          - left: 60%
          - top: 60px
          - font-size: 20px
          - font-weight: bold
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  graph_temp:
    custom_fields:
      graph_temp:
        card:
          type: custom:mini-graph-card
          height: 250
          line_width: 4
          lower_bound: 10
          points_per_hour: 1
          hours_to_show: 24
          show:
            fill: fade
            icon: false
            name: false
            state: false
            legend: false
            points: false
            labels: false
  carte_bouton:
    show_name: false
    show_state: false
    show_label: false
    show_icon: true
    styles:
      card:
        - border-radius: 20%
        - height: 27px
        - padding: 02px
        - line-height: 77%
        - background: transparent
      icon:
        - color: dimgrey
        - width: 16px
        - padding-bottom: 0px
      name:
        - font-size: 9px
      label:
        - font-size: 11px
      state:
        - font-size: 11px
    double_tap_action:
      action: more-info
    tap_action:
      action: toggle
  carte_bouton_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "heat" || entity.state == "Run" || entity.state ==
          "armed_away" || entity.state == "playing" || entity.state == "veille"
          ]]]
        styles:
          icon:
            - color: lightgrey
      - operator: template
        value: >-
          [[[ return entity.state == "off" || entity.state == "not_home" ||
          entity.state == "disarmed" || entity.state == "standby" ||
          entity.state == "idle" || entity.state == "paused" || entity.state ==
          "locked"]]]
        styles:
          icon:
            - color: dimgrey
      - operator: template
        value: '[[[ return entity.state == "unlocked"  ]]]'
        styles:
          icon:
            - color: red
      - value: unavailable
        styles:
          icon:
            - color: red
            - animation: blink 0.8s ease infinite
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  carte_bouton_state_tv_salon:
    styles:
      icon:
        - color: |
            [[[
              if (states['media_player.tv_salon'].state == "on")
                return 'lightgrey';
              return "dimgrey"
            ]]]
  carte_bouton_state_tv_parents:
    styles:
      icon:
        - color: |
            [[[
              if (states['switch.tele_des_parents'].state == "on")
                return 'lightgrey';
              return "dimgrey"
            ]]]
  base_petite:
    styles:
      card:
        - height: 50px
  base_moyenne:
    styles:
      card:
        - height: 80px
  base_large:
    styles:
      card:
        - height: 100px
  base_tres_large:
    styles:
      card:
        - height: 147px
  base_extra_large:
    styles:
      card:
        - height: 235px
  carte_piece:
    template:
      - style
    label: |
      [[[
        if( entity.state == "unavailable")
          return "Indisponible"
        if( entity.state == "off")
          return variables.var_label
        var lum = states[entity.entity_id].attributes.brightness/2.54;
        var roundLum = Math.round(lum * 1) / 1;
        return variables.var_label + " - " + roundLum + "%"
      ]]]
    styles:
      label:
        - color: |
            [[[
              if (variables.var_temp < 18.5)
                return 'var(--custom-icon-color-blue)'
              if (variables.var_temp > 26.9)
                return 'var(--custom-icon-color-red)'
              return ""
            ]]]
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 28px
          - top: 6%
          - height: 15px
          - width: 15px
          - font-size: 85%
          - line-height: 17px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,191,205,0)';
               return 'var(--pastille_off)';
              ]]]
          - color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,191,205,0)';
               return 'lightgrey';
              ]]]
    state:
      - value: 'on'
        styles:
          card:
            - background-color: |-
                [[[ 
                    var color = '255,215,0'; // Default Color
                    if( states[entity.entity_id].attributes.rgb_color != undefined)
                      color = states[entity.entity_id].attributes.rgb_color;               
                    return 'rgb(' + color + ',0.3)';
                ]]]
          img_cell:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.4)';
                ]]]
          icon:
            - color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',1)';
                ]]]
      - value: 'off'
        color: grey
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
  carte_piece_graph:
    styles:
      custom_fields:
        graph:
          - position: absolute
          - top: 40%
          - left: 50%
          - width: calc(100% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
    custom_fields:
      graph:
        card:
          type: custom:mini-graph-card
          height: 50
          line_width: 2
          points_per_hour: 1
          hours_to_show: 24
          show:
            fill: fade
            icon: false
            name: false
            state: false
            legend: false
            points: false
            labels: false
          color_thresholds:
            - value: 0
              color: rgba(200,200,200,0.3)
  carte_piece_jauge_hum:
    custom_fields:
      jauge-cercle:
        card:
          type: custom:hatc-gauge-card
          title:
            name: false
            icon: false
          gauge:
            icon: mdi:water
            state: false
            icon-size: 14px
            icon-color: severity
            max_value: 100
            friendly_name: false
            severity:
              - color: darkgrey
              - color: rgb(0, 160, 214)
                icon: mdi:water-alert
                from: 0
                to: 39.9
              - color: rgb(180, 70, 70)
                icon: mdi:water-alert
                from: 70.1
                to: 100
  carte_lumiere:
    template:
      - style_off
      - last_changed
      - state_lumiere
      - state_unavailable
    show_name: true
    show_label: true
    styles:
      img_cell:
        - border-radius: 50%
        - width: 35px
        - height: 35px
        - background-color: var(--pastille_off)
        - margin-top: 2px
      label:
        - font-size: 10px
      name:
        - font-size: 11px
        - font-weight: bold
        - margin-top: 4px
      icon:
        - width: 22px
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  carte_badge:
    variables:
      var_name_temp: Temp
      var_name_hum: Hum
      var_name_lum: Lum
      var_name_mouv: Mouv
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
      - style_off
      - last_changed
      - state_unavailable
    styles:
      img_cell:
        - border-radius: 50%
        - width: 35px
        - height: 35px
        - background-color: var(--pastille_off)
        - color: var(--text_systeme_info)
        - margin-top: 2px
      icon:
        - width: 55%
        - color: var(--icon_off)
      label:
        - font-weight: null
        - font-size: 11px
        - color: var(--text_on)
      state:
        - font-weight: bold
        - font-size: 11px
        - color: var(--text_on)
      name:
        - font-weight: bold
        - font-size: 11px
        - padding-top: 5%
        - color: rgba(232,233,242,1)
      card:
        - border-radius: 15px
        - height: auto
        - padding-left: 3px
        - padding-right: 3px
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 65%
          - top: 10%
          - height: 15px
          - width: 15px
          - font-size: 11px
          - line-height: 17px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,191,205,0)';
               return 'var(--pastille_off)';
              ]]]
          - color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,191,205,0)';
               return 'lightgrey';
              ]]]
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  carte_scene:
    show_icon: true
    show_name: true
    show_state: false
    show_label: false
    template:
      - police
      - style_off
      - last_changed
      - state_unavailable
    styles:
      img_cell:
        - border-radius: 10px
        - width: 50px
        - height: 40px
        - background-color: var(--pastille_off)
        - color: var(--text_systeme_info)
        - margin-top: 0px
      icon:
        - width: 50%
        - color: var(--icon_off)
      name:
        - font-size: 10px
        - color: rgba(232,233,242,1)
        - padding-top: 2%
      card:
        - border-radius: 10px
        - height: auto
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  carte_ronde:
    show_icon: true
    show_name: false
    show_state: false
    show_label: false
    aspect_ratio: 1/1
    template:
      - police
      - style
    styles:
      img_cell:
        - border-radius: 100%
        - width: 35px
        - height: 35px
        - background-color: var(--pastille_off)
        - color: var(--text_systeme_info)
      icon:
        - width: 55%
        - color: var(--icon_off)
      card:
        - border-radius: 50%
        - padding: 0px
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 63%
          - top: 15%
          - height: 14px
          - width: 14px
          - font-size: 10px
          - line-height: 17px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,191,205,0)';
               return 'var(--pastille_off)';
              ]]]
          - color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,191,205,0)';
               return 'lightgrey';
              ]]]
    double_tap_action:
      action: more-info
  carte_thermo:
    template:
      - carte_ronde
      - state_unavailable
    show_icon: false
    show_state: true
    show_name: true
    show_label: true
    label: |
      [[[ return variables.var_label +"%"]]]
    state:
      - value: 18.5
        operator: <
        styles:
          card:
            - background-color: var(--custom-card-color-blue)
          state:
            - color: var(--custom-icon-color-blue)
      - value: 26.9
        operator: '>'
        styles:
          card:
            - background-color: var(--custom-card-color-red)
          state:
            - color: var(--custom-icon-color-red)
    styles:
      name:
        - font-size: 80%
      state:
        - font-size: 100%
        - font-weight: bold
      label:
        - font-size: 85%
        - font-weight: bold
        - color: |
            [[[
              if (variables.var_label < 40)
                return 'var(--custom-icon-color-blue)'
              if (variables.var_label > 70)
                return 'var(--custom-icon-color-red)'
              return "grey"
            ]]]
      custom_fields:
        gauge:
          - z-index: 1
          - position: absolute
          - top: 50.5%
          - left: 50%
          - opacity: 100%
          - width: calc(115% + 0px)
          - transform: translate(-50%, calc(-50% + 0px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        gauge_hum:
          - z-index: 1
          - position: absolute
          - top: 50.5%
          - left: 50%
          - opacity: 100%
          - width: calc(93% + 0px)
          - transform: translate(-50%, calc(-50% + 0px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
    custom_fields:
      gauge:
        card:
          type: custom:hatc-gauge-card
          title:
            name: false
            icon: false
          gauge:
            icon: false
            icon-size: 20px
            state: false
            text-color: lightgrey
            font-size: 20px
            max_value: 50
            friendly_name: true
            severity:
              - color: grey
              - color: var(--custom-icon-color-blue)
                from: 0
                to: 18.4
              - color: var(--custom-icon-color-red)
                from: 26.9
                to: 50
      gauge_hum:
        card:
          type: custom:hatc-gauge-card
          title:
            name: false
            icon: false
          gauge:
            icon: false
            icon-size: 20px
            state: false
            text-color: lightgrey
            font-size: 20px
            max_value: 100
            friendly_name: true
            severity:
              - color: grey
              - color: var(--custom-icon-color-blue)
                from: 0
                to: 39.9
              - color: var(--custom-icon-color-red)
                from: 69.9
                to: 100
  carte_jauge:
    template:
      - carte_ronde
      - state_unavailable
    show_icon: false
    show_state: true
    show_name: true
    show_label: true
    styles:
      name:
        - font-size: 90%
      state:
        - font-size: 130%
        - font-weight: bold
      label:
        - font-size: 90%
      custom_fields:
        gauge:
          - position: absolute
          - top: 50.5%
          - left: 50%
          - opacity: 90%
          - width: calc(115% + 0px)
          - transform: translate(-50%, calc(-50% + 0px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
    custom_fields:
      gauge:
        card:
          type: custom:hatc-gauge-card
          title:
            name: false
            icon: false
          gauge:
            unit_of_measurement: false
            icon: false
            icon-size: 20px
            state: false
            text-color: lightgrey
            font-size: 20px
            friendly_name: true
  state_jauge_air:
    state:
      - value: 65
        operator: <
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
      - value: 220
        operator: <=
        styles:
          img_cell:
            - background-color: var(--custom-img-cell-color-blue)
          state:
            - color: var(--custom-icon-color-blue)
          icon:
            - color: var(--custom-icon-color-blue)
      - value: 660
        operator: <=
        styles:
          img_cell:
            - background-color: var(--custom-img-cell-color-orange)
          state:
            - color: var(--custom-icon-color-orange)
          icon:
            - color: var(--custom-icon-color-orange)
      - value: 2200
        operator: <=
        styles:
          img_cell:
            - background-color: var(--custom-img-cell-color-orange)
          state:
            - color: var(--custom-icon-color-orange)
          icon:
            - color: var(--custom-icon-color-orange)
      - value: 2200
        operator: ''
        styles:
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
          state:
            - color: var(--custom-icon-color-red)
          icon:
            - color: var(--custom-icon-color-red)
  state_jauge_air_pourcentage:
    styles:
      state:
        - color: |
            [[[
              if (states['sensor.qualite_air_pourcentage'].state >= 96.1 && states['sensor.qualite_air_pourcentage'].state <= 98.7)
                return "var(--custom-icon-color-blue)" 
              if (states['sensor.qualite_air_pourcentage'].state >= 88.1 && states['sensor.qualite_air_pourcentage'].state <= 96)
                return "var(--custom-icon-color-orange)" 
              if (states['sensor.qualite_air_pourcentage'].state >= 60.1 && states['sensor.qualite_air_pourcentage'].state <= 88)
                return "var(--custom-icon-color-orange)" 
              if (states['sensor.qualite_air_pourcentage'].state >= 0 && states['sensor.qualite_air_pourcentage'].state <= 60)
                return "var(--custom-icon-color-red)" 
              return "" 
            ]]]
  state_lumiere:
    state:
      - value: 'on'
        styles:
          img_cell:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.3)';
                ]]]
          icon:
            - color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',1)';
                ]]]
      - value: 'off'
        color: grey
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
  state_person:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "Atoll" || entity.state == "Travail" ||
          entity.state == "Collège" || entity.state == "Lycée" || entity.state
          != "home" || entity.state == "off" ]]]
        styles:
          label:
            - color: var(--custom-icon-color-red)
          state:
            - color: var(--custom-icon-color-red)
  state_alarme:
    state:
      - value: disarmed
        color: grey
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
      - value: 'off'
        color: grey
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
      - value: locked
        color: grey
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
      - operator: template
        value: >-
          [[[ return entity.state == "armed_away" || entity.state ==
          "armed_night" || entity.state == "on" || entity.state == "Lycée" ||
          entity.state != "home" || entity.state == "unlocked" ]]]
        color: red
        styles:
          card:
            - background-color: var(--custom-card-color-red)
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
          icon:
            - color: var(--custom-icon-color-red)
      - value: arming
        color: gold
        styles:
          card:
            - background-color: var(--custom-card-color-red)
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
          icon:
            - color: var(--custom-icon-color-red)
      - operator: template
        value: >-
          [[[ return entity.state == "pending" || entity.state == "triggered"
          ]]]
        color: red
        styles:
          card:
            - background-color: var(--custom-card-color-red)
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
          icon:
            - color: var(--custom-icon-color-red)
            - animation: blink 1s ease infinite
  state_temp:
    state:
      - value: 25.9
        operator: '>'
        icon: mdi:thermometer-chevron-up
        styles:
          icon:
            - color: var(--custom-icon-color-red)
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
      - value: 18.5
        operator: <
        icon: mdi:thermometer-chevron-down
        styles:
          icon:
            - color: var(--custom-icon-color-blue)
          img_cell:
            - background-color: var(--custom-img-cell-color-blue)
      - value: 25.9
        operator: <
        styles: null
  state_temp_exterieur:
    state:
      - value: 25
        operator: '>'
        icon: mdi:thermometer-chevron-up
        styles:
          icon:
            - color: var(--custom-icon-color-red)
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
          state:
            - font-weight: bold
      - value: 10
        operator: <
        styles:
          icon:
            - color: rgba(30,144,255,1)
          img_cell:
            - background-color: var(--custom-img-cell-color-blue)
          state:
            - font-weight: bold
  state_humidite:
    state:
      - value: 70
        operator: '>'
        styles:
          icon:
            - color: var(--custom-icon-color-red)
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
      - value: 40
        operator: <
        styles:
          icon:
            - color: var(--custom-icon-color-blue)
          img_cell:
            - background-color: var(--custom-img-cell-color-blue)
  state_luminosite:
    state:
      - value: 500
        operator: '>'
        styles:
          icon:
            - color: var(--custom-icon-color-red)
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
      - value: 150
        operator: <
        icon: mdi:brightness-4
        styles:
          icon:
            - color: var(--custom-icon-color-blue)
          img_cell:
            - background-color: var(--custom-img-cell-color-blue)
  state_bleu:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "cleaning" || entity.state == "returning" ||
          entity.state == "idle" || entity.state == "paused" || entity.state ==
          "veille" || entity.state == "idle"  || entity.state == "playing" ||
          entity.state == "printing" || entity.state == "stopped" ]]]
        styles:
          img_cell:
            - background-color: var(--custom-img-cell-color-blue)
          icon:
            - color: var(--custom-icon-color-blue)
      - operator: template
        value: '[[[ return entity.state == "docked" || entity.state == "off" ]]]'
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
  state_rouge:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "cleaning" || entity.state == "returning" ||
          entity.state == "idle" || entity.state == "paused" || entity.state ==
          "veille" || entity.state == "idle"  || entity.state == "playing" ||
          entity.state == "printing" || entity.state == "stopped" ||
          entity.state == "unlocked" || entity.state == "0" || entity.state ==
          "armed_away" || entity.state == "armed_night" || entity.state ==
          "pending" || entity.state == "triggered" ]]]
        styles:
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
          icon:
            - color: var(--custom-icon-color-red)
      - operator: template
        value: '[[[ return entity.state == "docked" || entity.state == "off" ]]]'
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
  state_carte:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "cleaning" || entity.state == "returning" ||
          entity.state == "idle" || entity.state == "paused" || entity.state ==
          "veille" || entity.state == "idle"  || entity.state == "playing" ||
          entity.state == "printing" || entity.state == "stopped" ]]]
        styles:
          card:
            - background-color: var(--custom-card-color-blue)
          img_cell:
            - background-color: var(--custom-img-cell-color-blue)
          icon:
            - color: var(--custom-icon-color-blue)
      - operator: template
        value: '[[[ return entity.state == "docked" || entity.state == "off" ]]]'
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
  state_batterie:
    show_state: true
    styles:
      name:
        - font-size: 12px
      state:
        - font-size: 12px
        - font-weight: bold
      label:
        - font-size: 9px
    units: '%'
    state:
      - value: 40
        operator: '>'
      - value: 20
        operator: '>'
        styles:
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
          icon:
            - color: var(--custom-icon-color-red)
          state:
            - color: var(--custom-icon-color-red)
      - value: 0
        operator: '>'
        styles:
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
          name:
            - color: var(--custom-icon-color-red)
          icon:
            - color: var(--custom-icon-color-red)
          state:
            - color: var(--custom-icon-color-red)
      - value: 0
        styles:
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
          icon:
            - color: var(--custom-icon-color-red)
            - animation: blink 1s ease infinite
          state:
            - color: var(--custom-icon-color-red)
      - value: unavailable
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - opacity: 100%
          img_cell:
            - background-color: black
          icon:
            - color: red
          name:
            - color: red
          label:
            - color: red
            - font-size: 65%
          state:
            - color: red
            - font-weight: bold
  state_bleu_rouge:
    state:
      - operator: template
        value: >-
          [[[ return entity.state > 70 || entity.state == "off" || entity.state
          == "not_home" || entity.state == "unlocked" ]]]
        styles:
          icon:
            - color: var(--custom-icon-color-red)
          img_cell:
            - background-color: var(--custom-img-cell-color-red)
      - value: 60
        operator: '>'
        styles:
          icon:
            - color: var(--custom-icon-color-gold)
          img_cell:
            - background-color: var(--custom-img-cell-color-gold)
      - operator: template
        value: >-
          [[[ return entity.state < 60 || entity.state == "on" || entity.state
          == "home"  || entity.state == "locked" ]]]
        styles:
          icon:
            - color: var(--custom-icon-color-blue)
          img_cell:
            - background-color: var(--custom-img-cell-color-blue)
  state_unavailable:
    state:
      - value: unavailable
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - opacity: 100%
          icon:
            - color: var(--custom-icon-color-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: red
          label:
            - color: red
          state:
            - color: red
  carte_personne:
    show_entity_picture: true
    show_state: false
    template:
      - base
      - base_large
      - style
      - state_person
    styles:
      entity_picture:
        - width: 100%
      custom_fields:
        jauge-cercle:
          - width: 27%
        notification:
          - border-radius: 100%
          - position: absolute
          - left: 28px
          - top: 5%
          - width: 17.5px
          - height: 17.5px
          - line-height: 16px
          - background-color: |
              [[[
                if (entity.state == 'home') 
                  return "var(--custom-badge-color-blue)"
                if (entity.state == 'not_home') 
                  return "var(--custom-badge-color-red)"
                return "rgb(103,173,91)"
              ]]]
    custom_fields:
      notification: |
        [[[
              var f_n_zone = states[entity.entity_id].state;

              // supprime les accents
              var b="áàâäãåçéèêëíïîìñóòôöõúùûüýÁÀÂÄÃÅÇÉÈÊËÍÏÎÌÑÓÒÔÖÕÚÙÛÜÝ",
              c="aaaaaaceeeeiiiinooooouuuuyAAAAAACEEEEIIIINOOOOOUUUUY",
              d="";
              for(var i = 0, j = f_n_zone.length; i < j; i++) {
                var e = f_n_zone.substr(i, 1);
                d += (b.indexOf(e) !== -1) ? c.substr(b.indexOf(e), 1) : e;
              }
              // remplace " - " par "_"
              var id_zone = d.replaceAll(' - ', '_');
              // remplace les espaces restants par "_"
              id_zone = id_zone.replaceAll(' ', '_');
              // transforme le texte en minuscule 
              id_zone = id_zone.toLowerCase();

              if(states["zone." + id_zone] == undefined){
                return `<ha-icon icon="mdi:home-export-outline" style="width: 13px; height: 13px; color: white;"></ha-icon>`;
              }else{
                return `<ha-icon icon="${states["zone." + id_zone].attributes.icon}" style="width: 13px; height: 13px; color: white;"></ha-icon>`;
              }
            ]]]
    tap_action:
      action: navigate
      navigation_path: /lovelace/Personnes
    double_tap_action:
      action: more-info
  carte_personne_var_activity:
    icon: |
      [[[
        if (variables.var_activity == 'Mouvement')
          return "mdi:human-handsdown"
        if (variables.var_activity == 'Stationnaire')
          return "mdi:human-male"
        if (variables.var_activity == 'Conduite')
          return "mdi:car"
        if (variables.var_activity == 'Marche')
          return "mdi:walk"
        if (variables.var_activity == 'Course')
          return "mdi:run-fast"
        if (variables.var_activity == 'Vélo')
          return "mdi:bike"
        return ""
      ]]]
    styles:
      icon:
        - color: |
            [[[
              if (variables.var_activity == 'Stationnaire')
                return "grey"
              if (variables.var_activity == 'Conduite')
                return "red"
              return 'lightgrey'
            ]]]
  carte_personne_var_device:
    styles:
      img_cell:
        - height: 25px
        - width: 25px
        - border-radius: 100%
        - background-color: |
            [[[
                if (variables.var_state == "Charging" && variables.var_level != 100 )
                  return "var(--custom-img-cell-color-yellow)"
                if (variables.var_state == "Charging" && variables.var_level  == 100)
                  return "var(--custom-img-cell-color-blue)"
                if (variables.var_state == "Full" )
                  return "var(--custom-img-cell-color-blue)"
                return "var(--background-button-in-card)"
            ]]]
      icon:
        - color: |
            [[[
              if (variables.var_level  < 50)
                return "tomato"
              if (variables.var_level  < 30)
                return "rgb(180, 70, 70)"
              if (variables.var_ping == "home")
                return 'lightgrey'
              if (variables.var_ping == "not_home")
                return 'grey'
            ]]]
    tap_action:
      action: navigate
      navigation_path: /lovelace/batteries
  carte_personne_aurel:
    entity: person.herve
    template:
      - carte_personne
    label: |
      [[[return states["sensor.aurel_gps"].state]]]
    styles:
      label:
        - white-space: normal
    custom_fields:
      jauge-cercle:
        card:
          type: horizontal-stack
          cards:
            - type: conditional
              conditions:
                - entity: sensor.iphone_aurel_battery_state
                  state: Not Charging
              card:
                type: custom:hatc-gauge-card
                entity: sensor.iphone_aurel_battery_level
                title:
                  name: false
                  icon: false
                gauge:
                  icon: false
                  font-size: 11px
                  text-color: severity
                  max_value: 100
                  friendly_name: false
                  unit_of_measurement: false
                  severity:
                    - color: darkgrey
                    - color: rgb(70, 130, 180)
                      from: 100
                      to: 100
                    - color: rgb(255,215,0)
                      from: 31
                      to: 50
                    - color: rgb(180, 70, 70)
                      from: 0
                      to: 30
            - type: conditional
              conditions:
                - entity: sensor.iphone_aurel_battery_state
                  state_not: Not Charging
              card:
                type: custom:hatc-gauge-card
                entity: sensor.iphone_aurel_battery_level
                title:
                  name: false
                  icon: false
                gauge:
                  state: false
                  font-size: 11px
                  icon-size: 13px
                  icon-color: severity
                  max_value: 100
                  friendly_name: false
                  unit_of_measurement: false
                  severity:
                    - color: darkgrey
                    - color: rgb(70, 130, 180)
                      from: 100
                      to: 100
                    - color: rgb(255,215,0)
                      from: 31
                      to: 50
                    - color: rgb(180, 70, 70)
                      from: 0
                      to: 30
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: sensor.iphone_activity
              variables:
                var_activity: |
                  [[[ 
                    return states['sensor.aurel_activite'].state 
                  ]]]
              template:
                - carte_bouton
                - carte_personne_var_activity
            - type: custom:button-card
              entity: device_tracker.aurel_mac_ping
              template:
                - carte_bouton
                - carte_personne_var_device
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.macbook_aurel_internal_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.macbook_aurel_internal_battery_level'].state 
                  ]]]
                var_ping: |
                  [[[ 
                    return states['device_tracker.aurel_mac_ping'].state 
                  ]]]
              icon: mdi:laptop
            - type: custom:button-card
              entity: device_tracker.aurel_ipad_ping
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.ipad_aurel_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.ipad_aurel_battery_level'].state 
                  ]]]
                var_ping: |
                  [[[ 
                    return states['device_tracker.aurel_ipad_ping'].state 
                  ]]]
              icon: mdi:tablet
              template:
                - carte_bouton
                - carte_personne_var_device
  carte_personne_alex:
    entity: person.alex
    label: |
      [[[return states["sensor.alex_gps"].state]]]
    template:
      - carte_personne
    styles:
      label:
        - white-space: normal
    custom_fields:
      jauge-cercle:
        card:
          type: horizontal-stack
          cards:
            - type: conditional
              conditions:
                - entity: sensor.alex_iphone_battery_state_ha
                  state: Not Charging
              card:
                type: custom:hatc-gauge-card
                entity: sensor.alex_iphone_battery_level_ha
                title:
                  name: false
                  icon: false
                gauge:
                  icon: false
                  font-size: 11px
                  text-color: severity
                  max_value: 100
                  friendly_name: false
                  unit_of_measurement: false
                  severity:
                    - color: darkgrey
                    - color: rgb(70, 130, 180)
                      from: 100
                      to: 100
                    - color: rgb(255,215,0)
                      from: 31
                      to: 50
                    - color: rgb(180, 70, 70)
                      from: 0
                      to: 30
            - type: conditional
              conditions:
                - entity: sensor.alex_iphone_battery_state_ha
                  state_not: Not Charging
              card:
                type: custom:hatc-gauge-card
                entity: sensor.alex_iphone_battery_level_ha
                title:
                  name: false
                  icon: false
                gauge:
                  state: false
                  font-size: 11px
                  icon-size: 13px
                  icon-color: severity
                  max_value: 100
                  friendly_name: false
                  unit_of_measurement: false
                  severity:
                    - color: darkgrey
                    - color: rgb(70, 130, 180)
                      from: 100
                      to: 100
                    - color: rgb(255,215,0)
                      from: 31
                      to: 50
                    - color: rgb(180, 70, 70)
                      from: 0
                      to: 30
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: sensor.alex_iphone_activity_2
              variables:
                var_activity: |
                  [[[ 
                    return states['sensor.alex_activite'].state 
                  ]]]
              template:
                - carte_bouton
                - carte_personne_var_activity
            - type: custom:button-card
              entity: device_tracker.macbook_alex
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.macbook_alex_internal_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.macbook_alex_internal_battery_level'].state 
                  ]]]
                var_ping: |
                  [[[ 
                    return states['device_tracker.alex_macbook'].state 
                  ]]]
              icon: mdi:laptop
              template:
                - carte_bouton
                - carte_personne_var_device
            - type: custom:button-card
              entity: device_tracker.liseuse_alex
              icon: |
                [[[
                  if (states['device_tracker.liseuse_alex'].state == "home")
                    return 'mdi:book-open'
                  if (states['device_tracker.liseuse_alex'].state == "not_home")
                    return 'mdi:book-open'
                ]]]
              template:
                - carte_bouton
                - carte_bouton_state
  carte_personne_tom:
    entity: person.tom
    label: |
      [[[return states["sensor.tom_gps"].state]]]
    template:
      - carte_personne
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.iphone_tom_box
              variables:
                var_ping: |
                  [[[ 
                    return states['device_tracker.iphone_tom_box'].state 
                  ]]]
              icon: mdi:cellphone
              template:
                - carte_bouton
                - carte_personne_var_device
            - type: custom:button-card
              entity: device_tracker.tom_mac_ping
              icon: mdi:laptop
              template:
                - carte_bouton
                - carte_bouton_state
  carte_personne_manon:
    entity: person.manon
    label: |
      [[[
        if (states['device_tracker.tablette_manon'].state == 'home')
          return "Présent"
        return "Absent"
      ]]]
    template:
      - carte_personne
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.tablette_manon
              icon: mdi:tablet
              template:
                - carte_bouton
                - carte_bouton_state
  carte_personne_leane:
    entity: person.leane
    label: |
      [[[
        if (states['device_tracker.leane_tab_ping'].state == 'home')
          return "Présent"
        return "Absent"
      ]]]
    template:
      - carte_personne
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.leane_tab_ping
              icon: mdi:tablet
              template:
                - carte_bouton
                - carte_bouton_state
  carte_personne_nina:
    entity: person.nina
    label: |
      [[[
        if (states['device_tracker.nina_tab_ping'].state == 'home')
          return "Présent"
        return "Absent"
      ]]]
    template:
      - carte_personne
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.nina_tab_ping
              icon: mdi:tablet
              template:
                - carte_bouton
                - carte_bouton_state
  carte_appareil_vaisselle:
    entity: switch.lave_vaisselle_power
    name: Vaisselle
    icon: phu:rooms-dining
    template:
      - base
      - base_large
      - style
      - state_carte
      - state_unavailable
    label: |
      [[[
        if (states['switch.lave_vaisselle_power'].state == "on" &&states['switch.lave_vaisselle_program_machinecare'].state == "on")
          return "Entretien"+"<br>"+states['sensor.lave_vaisselle'].state
        if (states['switch.lave_vaisselle_power'].state == "on" &&states['switch.lave_vaisselle_program_machinecare'].state == "off")
          return states['sensor.lave_vaisselle'].state
        if (states['switch.lave_vaisselle_power'].state == "off")
          return "Éteint "
        return "" 
      ]]]
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
    custom_fields:
      jauge-cercle:
        card:
          type: conditional
          conditions:
            - entity: switch.lave_vaisselle_power
              state: 'on'
          card:
            type: custom:hatc-gauge-card
            entity: sensor.lave_vaisselle_program_progress
            title:
              name: false
              icon: false
              text-align: center
              text-color: red
              font-size: 28px
            gauge:
              icon: false
              font-size: 11px
              text-color: severity
              max_value: 100
              friendly_name: false
              unit_of_measurement: false
              severity:
                - color: darkgrey
                - color: rgb(70, 130, 180)
                  from: 95
                  to: 100
                - color: rgb(180, 70, 70)
                  from: 0
                  to: 1
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: switch.lave_vaisselle_power
              icon: mdi:power
              template:
                - carte_bouton
                - carte_bouton_state
              tap_action:
                confirmation:
                  text: >-
                    [[[ return `${entity.attributes.friendly_name} : confirmer
                    la bascule ON / OFF ?` ]]]
            - type: custom:button-card
              entity: switch.lave_vaisselle_program_auto2
              icon: mdi:flag-checkered
              template:
                - carte_bouton
                - carte_bouton_state
              tap_action:
                confirmation:
                  text: >-
                    [[[ return `${entity.attributes.friendly_name} : confirmer
                    la bascule du programme ?` ]]]
            - type: custom:button-card
              entity: binary_sensor.lave_vaisselle_door
              template:
                - carte_bouton
                - carte_bouton_state
              tap_action:
                action: more-info
  carte_appareil_linge:
    entity: input_select.lave_linge
    name: Lave-linge
    icon: mdi:tshirt-crew
    template:
      - base
      - base_large
      - style
      - state_carte
      - state_unavailable
    label: |
      [[[
        if (states['input_select.lave_linge'].state == "off")
          return "Éteint"
        if (states['input_select.lave_linge'].state == "veille")
          return "Veille : "+ states['sensor.lave_linge_duree'].state
        if (states['input_select.lave_linge'].state == "on")
          return "Dépuis : "+ states['sensor.lave_linge_duree'].state
      ]]]
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  carte_appareil_imprimante:
    type: custom:button-card
    entity: sensor.canon_mg4100_series
    name: Imprimante
    icon: mdi:printer
    label: |
      [[[
        if (states['sensor.canon_mg4100_series'].state == "unavailable")
          return "Éteint"
        if (states['sensor.canon_mg4100_series'].state == "printing")
          return "Impression"
        if (states['sensor.canon_mg4100_series'].state == "stopped")
          return "Arrêt"
        if (states['sensor.canon_mg4100_series'].state == "idle")
          return "Veille"
        return states['sensor.canon_mg4100_series'].state
      ]]]
    template:
      - base
      - base_large
      - style
      - state_carte
    custom_fields:
      barre_imprimante_noire:
        card:
          type: conditional
          conditions:
            - entity: sensor.canon_mg4100_series
              state_not: unavailable
          card:
            type: custom:bar-card
            name: Batterie
            entities:
              - entity: sensor.canon_mg4100_series_black
                color: rgb(30,30,30)
            entity_row: true
            direction: null
            unit_of_measurement: '%'
            max: 100
            positions:
              value: inside
              name: 'off'
              indicator: 'off'
            height: 17px
            width: 100%
            icon: 'off'
            style: |-
              bar-card-value {
                font-size: 11px;
                font-weight: bold;
                color: var(--text_on);
              }
      barre_imprimante_couleur:
        card:
          type: conditional
          conditions:
            - entity: sensor.canon_mg4100_series
              state_not: unavailable
          card:
            type: custom:bar-card
            name: Batterie
            entities:
              - entity: sensor.canon_mg4100_series_color
                color: rgb(70, 130, 180)
            entity_row: true
            direction: null
            unit_of_measurement: '%'
            max: 100
            positions:
              value: inside
              name: 'off'
              indicator: 'off'
            height: 17px
            width: 100%
            icon: 'off'
            style: |-
              bar-card-value {

                font-size: 11px;
                font-weight: bold;
                color: var(--text_on);
              }
    styles:
      custom_fields:
        barre_imprimante_noire:
          - opacity: 90%
          - position: absolute
          - top: 50%
          - left: 0%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
        barre_imprimante_couleur:
          - opacity: 90%
          - position: absolute
          - top: 75%
          - left: 0%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  carte_tv:
    template:
      - style
    icon: |
      [[[
        if( entity.state == "off")
          return "mdi:television"
        if( variables.var_source == "Netflix")
          return "phu:netflix"
        if( variables.var_source == "Plex")
          return "mdi:plex"
        if( variables.var_source == "Prime Video")
          return "phu:amazon-logo"
        if( variables.var_source == "Disque Dur")
          return "mdi:movie-open"
        if( variables.var_source == "YouTube")
          return "mdi:youtube"
        if( variables.var_source == "Wii")
          return "phu:rooms-mancave"
        if( variables.var_source == "Switch")
          return "mdi:nintendo-switch"
        if( variables.var_source == "YouTube (FireTV)")
          return "mdi:youtube"
        if( variables.var_source == "DD Externe")
          return "movie-open"
        return "mdi:television"
      ]]]
    label: |
      [[[
        if ( entity.state  == 'on')
          return variables.var_source
        if ( entity.state  == 'off')
          return 'Éteint'
        return ''
      ]]]
    styles:
      card:
        - height: 147px
      custom_fields:
        bouton2:
          - position: absolute
          - top: 57%
          - left: 50%
          - width: calc(90% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--ha-card-border-width': 0px
        bouton:
          - top: 81%
        barre_volume:
          - position: absolute
          - opacity: 100%
          - top: 40%
          - left: '-06%'
          - width: calc(100% + 020px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
  carte_securite:
    template:
      - style
    label: |-
      [[[ 
         if( states[entity.entity_id].state == "disarmed" )
          return "Désarmée"
         if( states[entity.entity_id].state == "armed_away" )
          return "Absent"
         if( states[entity.entity_id].state == "armed_night" )
          return "Nuit"
         if( states[entity.entity_id].state == "arming" )
          return "Armement"
         if( states[entity.entity_id].state == "triggered" )
          return "Déclenchée"]]]
    styles:
      custom_fields:
        bouton:
          - top: 70%
  carte_multimedia:
    template:
      - style
    aspect_ratio: 1/1
    show_entity_picture: true
    icon: |-
      [[[
        if (entity.state == 'playing' )
          return ""
        if (entity.state != 'playing' )
          return "mdi:speaker"
      ]]]
    styles:
      entity_picture:
        - width: 100%
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 21%
          - top: 03%
          - height: 10%
          - width: 10%
          - font-size: 85%
          - line-height: 137%
          - font-weight: null
        cartes:
          - position: absolute
          - border-radius: 50%
          - top: 44.5%
          - left: 50%
          - width: calc(100% + 03px)
          - transform: translate(-50%, calc(-50% + 10px))
  horodatage:
    show_icon: false
    show_name: false
    show_state: true
    show_label: true
    template:
      - police
    styles:
      state:
        - font-size: 11px
        - color: lightgrey
        - justify-self: center
      card:
        - height: 12px
        - padding: 0%
        - border-radius: 0px
        - line-height: 100%
        - '--ha-card-border-width': 0px
    tap_action:
      action: more-info
    double-tap_action:
      action: none
    style:
      .: |
        ha-card {
            --ha-card-background: none !important;
            box-shadow: none !important;
            font-family: Avenir
            border-width: 0px
  titre_section:
    show_icon: false
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
    styles:
      name:
        - font-size: 14px
        - font-weight: bold
        - color: var(--text_on)
        - justify-self: start
      label:
        - font-size: 14px
        - font-weight: bold
        - color: var(--text_on)
        - justify-self: start
      card:
        - height: auto
        - padding: 01%
        - border-radius: 0px
        - line-height: 100%
        - '--ha-card-border-width': 0px
    tap_action:
      action: toggle
    double-tap_action:
      action: more-info
    style:
      .: |
        ha-card {
            --ha-card-background: none !important;
            box-shadow: none !important;
            font-family: Avenir
            border-width: 0px
  badge:
    template:
      - police
    show_name: false
    show_label: true
    show_icon: true
    styles:
      grid:
        - grid-template-areas: '"i n l" '
      card:
        - height: 32px
        - width: auto
        - padding-right: 07px
        - padding-left: 03px
        - border-radius: 13px
      img_cell:
        - background-color: transparent
        - border-radius: 50%
        - width: 25px
        - height: 25px
      icon:
        - width: 18px
        - margin-bottom: 1px
      entity_picture:
        - width: 90%
      label:
        - font-size: 11px
        - font-weight: bold
        - margin-left: 1px
        - padding-top: 0px
      name:
        - font-size: 11px
        - font-weight: bold
        - margin-left: 1px
    double_tap_action:
      action: more-info
  carte_systeme:
    template:
      - style
    styles:
      card:
        - height: 155px
      custom_fields:
        reload:
          - position: absolute
          - top: 3%
          - left: 112%
          - width: calc(60% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
          - opacity: 100%
          - '--ha-card-border-width': 0px
        graph:
          - position: absolute
          - top: 60%
          - left: 50%
          - width: calc(100% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        graph_bar:
          - position: absolute
          - top: 69%
          - left: 51%
          - width: calc(100% + 35px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        info:
          - top: 60%
          - z-index: 2
          - position: absolute
          - left: 50%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--ha-card-border-width': 0px
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
  carte_systeme_info:
    layout: icon_name_state
    show_state: true
    styles:
      card:
        - height: 13px
        - padding: 0px
        - background: transparent
      icon:
        - width: 20px
        - margin-left: '-30px'
        - padding-bottom: 15px
      name:
        - font-size: 12px
        - margin-left: '-30px'
        - justify-self: left
  carte_systeme_info_systeme_state:
    state:
      - value: 70
        operator: '>'
        styles:
          icon:
            - color: red
          name:
            - color: red
          state:
            - color: red
  carte_systeme_info_plante_state:
    state:
      - value: 5
        operator: <
        styles:
          icon:
            - color: red
          name:
            - color: red
          state:
            - color: red
title: Chez On
views:
  - theme: Backend-selected
    icon: mdi:home
    visible:
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: 2f0040afe95a4514ade3c049a0b5d479
      - user: d8316597eafd4333b737464a5b4c62d0
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - cards:
              - type: vertical-stack
                cards:
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return states['sensor.bonjour'].state]]]
                  - type: horizontal-stack
                    cards:
                      - type: custom:button-card
                        entity: sensor.compteur_home
                        name: Personnes
                        icon: |
                          [[[
                            if (states['sensor.compteur_home'].state == 0)
                              return "mdi:home-off" 
                            return "mdi:home"
                          ]]]
                        template:
                          - badge
                          - style
                        label: |
                          [[[
                            return states['sensor.compteur_home'].state
                          ]]]
                        styles:
                          card:
                            - background-color: |
                                [[[
                                  if (states['sensor.compteur_home'].state == 0)
                                    return "var(--custom-card-color-red)" ;
                                  return "";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (states['sensor.compteur_home'].state == 0)
                                    return "var(--custom-icon-color-red)" ;
                                  return "darkgrey";
                                ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Personnes
                      - type: custom:button-card
                        entity: group.serrures
                        name: Serrures
                        icon: |
                          [[[
                            if (states['sensor.compteur_serrures'].state > 0)
                              return "mdi:lock-open" 
                            return "mdi:lock"
                          ]]]
                        template:
                          - badge
                          - style
                        label: |
                          [[[
                            return states['sensor.compteur_serrures'].state
                          ]]]
                        styles:
                          card:
                            - background-color: |
                                [[[
                                  if (states['sensor.compteur_serrures'].state > 0)
                                    return "var(--custom-card-color-red)" ;
                                  return "";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (states['sensor.compteur_serrures'].state > 0)
                                    return "var(--custom-icon-color-red)" ;
                                  return "darkgrey";
                                ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/porte_mouv_serrure
                        double_tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: binary_sensor.portes
                        name: Portes
                        template:
                          - badge
                          - style
                        label: |
                          [[[return states['sensor.compteur_portes'].state]]]
                        styles:
                          card:
                            - background-color: |
                                [[[
                                  if (states['binary_sensor.portes'].state == "on")
                                    return "var(--custom-card-color-red)" ;
                                  return "";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (states['binary_sensor.portes'].state == "on")
                                    return "var(--custom-icon-color-red)" ;
                                  return "darkgrey";
                                ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/porte_mouv_serrure
                      - type: custom:button-card
                        entity: binary_sensor.mouvements
                        name: Mouvements
                        template:
                          - badge
                          - style
                        label: |
                          [[[return states['sensor.compteur_mouvement'].state]]]
                        styles:
                          card:
                            - background-color: |
                                [[[
                                  if (states['binary_sensor.mouvements'].state == "on")
                                    return "var(--custom-card-color-red)" ;
                                  return "";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (states['binary_sensor.mouvements'].state == "on")
                                    return "var(--custom-icon-color-red)" ;
                                  return "darkgrey";
                                ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/porte_mouv_serrure
                      - type: custom:button-card
                        entity: light.tout
                        name: Lumières
                        template:
                          - badge
                          - style
                        label: |
                          [[[return states['sensor.compteur_lumiere'].state]]]
                        styles:
                          card:
                            - background-color: |
                                [[[
                                  if (states['light.tout'].state == "on")
                                    return "var(--button-card-light-color-no-temperature)" ;
                                  return "";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (states['light.tout'].state == "on")
                                    return "var(--button-card-light-color-no-temperature)" ;
                                  return "darkgrey";
                                ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Lumières
                      - type: conditional
                        conditions:
                          - entity: input_boolean.noel
                            state: 'on'
                        card:
                          type: custom:button-card
                          entity: group.noel
                          icon: phu:christmas-tree
                          name: Noel
                          template:
                            - badge
                            - style
                          label: |
                            [[[
                              return states['sensor.compteur_noel'].state
                            ]]]
                          styles:
                            card:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_noel'].state == 0)
                                      return "" ;
                                    return "green";
                                  ]]]
                            icon:
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_noel'].state == 0)
                                      return "darkgrey" ;
                                    return "green";
                                  ]]]
                          tap_action:
                            action: more-info
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: alarm_control_panel.alarme
                        name: Alarme
                        icon: |
                          [[[
                            if (entity.state == "disarmed" )
                              return "mdi:shield-off";
                            if (entity.state == "armed_away" )
                              return "mdi:shield-lock";
                            if (entity.state == "armed_home" )
                              return "mdi:shield-home";
                            if (entity.state == "armed_night" )
                              return "mdi:shield-moon";
                            if (entity.state == "arming" )
                              return "mdi:shield-half-full";
                            if (entity.state == "triggered" )
                              return "mdi:shield-alert";
                            return "mdi:shield-off";
                          ]]]
                        template:
                          - base
                          - base_moyenne
                          - carte_securite
                          - state_alarme
                          - state_unavailable
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: script.alarme_disarmed
                                  template:
                                    - carte_bouton
                                  tap_action:
                                    confirmation:
                                      text: >-
                                        [[[ return
                                        `${entity.attributes.friendly_name} :
                                        confirmer la désactivation ?` ]]]
                                - type: custom:button-card
                                  entity: script.alarme_armed_away
                                  template:
                                    - carte_bouton
                                  tap_action:
                                    confirmation:
                                      text: >-
                                        [[[ return
                                        `${entity.attributes.friendly_name} :
                                        confirmer le mode Absent ?` ]]]
                                - type: custom:button-card
                                  entity: script.alarme_armed_night
                                  template:
                                    - carte_bouton
                                  tap_action:
                                    confirmation:
                                      text: >-
                                        [[[ return
                                        `${entity.attributes.friendly_name} :
                                        confirmer le mode Nuit ?` ]]]
                        double_tap_action:
                          action: call-service
                          service: script.alarme_on_off
                          service_data: null
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Alarmes
                      - type: custom:button-card
                        entity: alarm_control_panel.aarlo_sonnette
                        template:
                          - base
                          - base_moyenne
                          - carte_securite
                          - state_alarme
                          - state_unavailable
                        name: |
                          [[[ return "Sonnette "]]]
                        icon: phu:arlo-video-doorbell
                        custom_fields:
                          jauge-cercle:
                            card:
                              type: custom:hatc-gauge-card
                              entity: sensor.aarlo_battery_level_sonnette
                              title:
                                name: false
                                icon: false
                              gauge:
                                icon: false
                                font-size: 11px
                                text-color: severity
                                max_value: 100
                                friendly_name: false
                                unit_of_measurement: false
                                severity:
                                  - color: darkgrey
                                  - color: rgb(180, 70, 70)
                                    from: 0
                                    to: 30
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: script.alarme_sonnette_disarmed
                                  template:
                                    - carte_bouton
                                  tap_action:
                                    confirmation:
                                      text: >-
                                        [[[ return
                                        `${entity.attributes.friendly_name} :
                                        confirmer la désactivation ?` ]]]
                                - type: custom:button-card
                                  entity: script.alarme_sonnette_armee
                                  template:
                                    - carte_bouton
                                  tap_action:
                                    confirmation:
                                      text: >-
                                        [[[ return
                                        `${entity.attributes.friendly_name} :
                                        confirmer le mode Absent ?` ]]]
                                - type: custom:button-card
                                  entity: switch.aarlo_snapshot_sonnette
                                  template:
                                    - carte_bouton
                        double_tap_action:
                          action: call-service
                          service: script.alarme_sonnette_on_off
                          service_data: null
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Alarmes
                  - type: conditional
                    conditions:
                      - entity: alarm_control_panel.alarme
                        state_not: disarmed
                    card:
                      square: false
                      columns: 2
                      type: grid
                      cards:
                        - type: picture-glance
                          aspect_ratio: 60%
                          camera_image: camera.aarlo_sonnette
                          camera_view: auto
                          entities: []
                          style: |
                            ha-card { 
                              margin: 0px 3px;
                              overflow: hidden !important;
                              border-radius: 15px !important;
                            }
                            ha-card > div.box {
                              display: none;
                            }
                        - type: picture-glance
                          camera_image: camera.camera_entree
                          camera_view: live
                          entities: []
                          style: |
                            ha-card { 
                              margin: 0px 3px;
                              overflow: hidden !important;
                              border-radius: 15px !important;
                            }
                            ha-card > div.box {
                              display: none;
                            }
                        - type: picture-glance
                          camera_image: camera.camera_sejour
                          camera_view: live
                          entities: []
                          style: |
                            ha-card { 
                              margin: 0px 3px;
                              overflow: hidden !important;
                              border-radius: 15px !important;
                            }
                            ha-card > div.box {
                              display: none;
                            }
                        - type: picture-glance
                          camera_image: camera.camera_g2hpro
                          camera_view: live
                          entities: []
                          style: |
                            ha-card { 
                              margin: 0px 3px;
                              overflow: hidden !important;
                              border-radius: 15px !important;
                            }
                            ha-card > div.box {
                              display: none;
                            }
                  - type: conditional
                    conditions:
                      - entity: alarm_control_panel.alarme
                        state: disarmed
                      - entity: alarm_control_panel.aarlo_sonnette
                        state_not: disarmed
                    card:
                      entity: camera.aarlo_sonnette
                      title: Sonnette
                      hide:
                        - date
                      global: small
                      image_click: play
                      image_view: arlo-stream
                      show:
                        - motion
                        - sound
                        - image_date
                        - signal_strength
                        - captured_today
                        - image_date
                        - on_off
                        - snapshot
                        - battery_level
                      top_date: true
                      top_status: false
                      top_title: false
                      type: custom:aarlo-glance
                  - type: horizontal-stack
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.le_bureau_next_timer
                            state_not: unavailable
                          - entity: sensor.le_bureau_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_bureau
                          name: Bureau
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.la_cuisine_next_timer
                            state_not: unavailable
                          - entity: sensor.la_cuisine_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_cuisine
                          name: Cuisine
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.le_salon_next_timer
                            state_not: unavailable
                          - entity: sensor.le_salon_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_salon
                          name: Salon
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.aurel_s_fire_tv_cube_next_timer
                            state_not: unavailable
                          - entity: sensor.aurel_s_fire_tv_cube_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_fire_tv
                          name: Fire TV
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.la_salle_de_bain_next_timer
                            state_not: unavailable
                          - entity: sensor.la_salle_de_bain_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_sdb
                          name: SDB
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.papa_next_timer
                            state_not: unavailable
                          - entity: sensor.papa_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_aurel
                          name: Aurel
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.maman_next_timer
                            state_not: unavailable
                          - entity: sensor.maman_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_alex
                          name: Alex
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.tom_next_timer
                            state_not: unavailable
                          - entity: sensor.tom_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_tom
                          name: Tom
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.nina_next_timer
                            state_not: unavailable
                          - entity: sensor.nina_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_nina
                          name: Nina
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.leane_next_timer
                            state_not: unavailable
                          - entity: sensor.leane_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_leane
                          name: Léane
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.manon_next_timer
                            state_not: unavailable
                          - entity: sensor.manon_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_manon
                          name: Manon
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        padding: 3px;
                        border-color: rgba(12, 12, 14, 0.2);
                        border-style: outset;
                        border-width: 1px;
                        box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3);
                      }
                    cards:
                      - type: grid
                        columns: 5
                        square: false
                        cards:
                          - type: custom:button-card
                            entity: group.mode
                            template:
                              - carte_badge
                              - state_bleu
                            show_label: false
                            show_name: false
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/reglages
                          - type: custom:button-card
                            entity: group.aspis
                            icon: phu:roborock
                            template:
                              - carte_badge
                              - state_bleu
                            show_label: false
                            show_name: false
                            styles:
                              icon:
                                - animation: |
                                    [[[
                                      if (states['vacuum.wall_e'].state == "cleaning" || states['vacuum.r2d2'].state == "cleaning")
                                      return 'rotating 4s ease infinite'
                                    ]]]
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/Aspis
                          - type: custom:button-card
                            entity: input_boolean.musique
                            icon: mdi:speaker
                            template:
                              - carte_badge
                              - state_bleu
                            show_label: false
                            show_name: false
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/Musique
                          - type: custom:button-card
                            entity: group.tv
                            template:
                              - carte_badge
                              - state_bleu
                            show_label: false
                            show_name: false
                            tap_action:
                              action: more-info
                          - type: custom:button-card
                            entity: group.machines
                            icon: mdi:dishwasher
                            template:
                              - carte_badge
                              - state_bleu
                            show_label: false
                            show_name: false
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/Autres
                          - type: custom:button-card
                            entity: input_boolean.courrier_releve
                            name: Courrier
                            template:
                              - carte_badge
                              - state_bleu
                            show_label: false
                            show_name: false
                          - type: custom:button-card
                            entity: input_boolean.imprimante
                            template:
                              - carte_badge
                              - state_bleu
                            show_label: false
                            show_name: false
                          - type: custom:button-card
                            entity: switch.radiateur
                            template:
                              - carte_badge
                              - state_bleu
                            show_label: false
                            show_name: false
                          - type: custom:button-card
                            entity: switch.moustiques
                            template:
                              - carte_badge
                              - state_bleu
                            show_label: false
                            show_name: false
                          - type: custom:button-card
                            entity: group.annonces
                            icon: mdi:message
                            template:
                              - carte_badge
                              - state_bleu
                            show_label: false
                            show_name: false
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/Annonces
                  - type: custom:button-card
                    template:
                      - sidebar
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Agenda
            type: vertical-stack
        layout:
          width: 350
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: vertical-stack
            cards:
              - cards:
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Rez-de-chaussée" ]]]
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.sejour
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.temp_sejour'].state == 'unavailable')
                                return "?"
                              return states['sensor.temp_sejour'].state +"°"
                            ]]]
                          var_temp: |
                            [[[ 
                              return states['sensor.temp_sejour'].state
                            ]]]
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - carte_piece_graph
                          - state_unavailable
                        name: Séjour
                        icon: mdi:sofa
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_sejour'].state )
                            ]]]
                          graph:
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - sensor.temp_sejour
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: >-
                                    alarm_control_panel.camera_sejour_security_system
                                  icon: mdi:cctv
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: media_player.tv_salon
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: media_player.sejour
                                  icon: mdi:speaker
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouvements_sejour
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: binary_sensor.porte_salle_a_manger
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Séjour
                      - type: custom:button-card
                        entity: light.entree_et_couloir
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.moniteur_qualite_air_temperature'].state == 'unavailable')
                                return "?"
                              return states['sensor.moniteur_qualite_air_temperature'].state+"°"
                            ]]]
                          var_temp: |
                            [[[ 
                              return states['sensor.moniteur_qualite_air_temperature'].state
                            ]]]
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - carte_piece_graph
                          - state_unavailable
                        name: Entrée
                        icon: |
                          [[[
                              if (states['sensor.compteur_entree'].state == 1 && states['light.aqara_hub_54e1'].state == 'on' )
                              return 'mdi:alarm-light';
                              if (states['sensor.compteur_entree'].state == 1 && states['light.veranda'].state == 'on' )
                              return 'mdi:outdoor-lamp';
                            return 'phu:rooms-hallway';
                          ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_entree'].state )
                            ]]]
                          graph:
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - sensor.temp_couloir_rdc
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: alarm_control_panel.aarlo_sonnette
                                  icon: phu:arlo-video-doorbell
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: camera.camera_entree
                                  icon: mdi:cctv
                                  template:
                                    - carte_bouton
                                  styles:
                                    icon:
                                      - color: grey
                                - type: custom:button-card
                                  entity: lock.serrure_entree
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                  tap_action:
                                    action: more-info
                                  double_tap_action:
                                    action: call-service
                                    service: script.entree_serrure_toggle
                                    service_data: null
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_couloir
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: binary_sensor.porte_entree
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Entrée
                      - type: custom:button-card
                        label: |
                          [[[ 
                            if (states['sensor.temp_cuisine'].state == 'unavailable')
                              return "?"
                            return states['sensor.temp_cuisine'].state+"°"
                          ]]]
                        variables:
                          var_temp: |
                            [[[ 
                              return states['sensor.temp_cuisine'].state
                            ]]]
                        template:
                          - base
                          - base_large
                          - carte_piece_graph
                          - carte_piece
                          - state_unavailable
                        icon: phu:rooms-kitchen
                        name: Cuisine
                        tap_action:
                          action: more-info
                        custom_fields:
                          graph:
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - sensor.temp_cuisine
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: media_player.la_cuisine
                                  icon: mdi:speaker
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: switch.lave_vaisselle_power
                                  icon: phu:rooms-dining
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: binary_sensor.porte_cuisine
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                      - type: custom:button-card
                        variables:
                          var_label: |
                            [[[
                              if (entity.state == "on")
                                return 'Allumé'
                              return 'Éteint '
                            ]]]
                          var_temp: |
                            [[[ 
                              return "null"
                            ]]]
                        entity: light.lavabo
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - state_unavailable
                        name: Lavabo
                        icon: phu:rooms-toilet
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_wc'].state ) ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_salle_d_eau
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Lavabo
                      - type: custom:button-card
                        entity: light.parents
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.temp_parents'].state == 'unavailable')
                                return "?"
                              return states['sensor.temp_parents'].state+"°"
                            ]]]
                          var_temp: |
                            [[[ 
                              return states['sensor.temp_parents'].state
                            ]]]
                        name: Parents
                        icon: phu:rooms-bedroom
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - carte_piece_graph
                          - state_unavailable
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_parents'].state )
                            ]]]
                          graph:
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - sensor.temp_parents
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.moustique_parents
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: media_player.chambre_des_parents
                                  icon: mdi:speaker
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: switch.tele_des_parents
                                  icon: mdi:television
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: binary_sensor.porte_chambre_parents
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Parents
                      - type: custom:button-card
                        entity: light.cagibi
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.sonde_garage_temperature'].state == 'unavailable')
                                return "?"
                              return states['sensor.sonde_garage_temperature'].state+"°"
                            ]]]
                          var_temp: |
                            [[[ 
                              return states['sensor.sonde_garage_temperature'].state
                            ]]]
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - carte_piece_graph
                          - state_unavailable
                        name: Garage
                        icon: mdi:car
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Garage
                        custom_fields:
                          graph:
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - sensor.sonde_garage_temperature
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: alarm_control_panel.camera_g2hpro
                                  icon: mdi:cctv
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: lock.garage
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                  tap_action:
                                    action: more-info
                                  double_tap_action:
                                    action: call-service
                                    service: script.garage_serrure_toggle
                                    service_data: null
                                - type: custom:button-card
                                  entity: group.portes_garage
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_garage
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: media_player.le_garage
                                  icon: mdi:speaker
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                    columns: 2
                    square: false
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Etage" ]]]
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.tom
                        name: Tom
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.temp_tom'].state == 'unavailable')
                                return "?"
                              return states['sensor.temp_tom'].state+"°"
                            ]]]
                          var_temp: |
                            [[[ 
                              return states['sensor.temp_tom'].state
                            ]]]
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - carte_piece_graph
                          - state_unavailable
                        icon: |
                          [[[
                            if (states['sensor.compteur_tom'].state == 1 && states['light.lampe_de_bureau_tom'].state == 'on' )
                              return 'mdi:desk-lamp';
                            return 'mdi:bat';
                          ]]] 
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_tom'].state ) ]]]
                          graph:
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - sensor.temp_tom
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.moustique_tom
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: media_player.tom
                                  icon: mdi:speaker
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_tom
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Tom
                      - type: custom:button-card
                        entity: light.manon_et_leane
                        name: Manon Lélé
                        icon: mdi:death-star-variant
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.temp_manon'].state == 'unavailable')
                                return "?"
                              return states['sensor.temp_manon'].state+"°"
                            ]]]
                          var_temp: |
                            [[[ 
                              return states['sensor.temp_manon'].state
                            ]]]
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - carte_piece_graph
                          - state_unavailable
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_manon'].state )
                            ]]]
                          graph:
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - sensor.temp_manon
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.moustique_manon
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: media_player.chambre_de_manon_et_leane
                                  icon: mdi:speaker
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_manon
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_leane
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Manon Léane
                      - type: custom:button-card
                        entity: light.nina
                        name: Nina
                        icon: |
                          [[[
                            if (states['sensor.compteur_nina'].state == 1 && states['light.lampe_de_bureau_nina'].state == 'on' )
                              return 'mdi:desk-lamp';
                            return 'mdi:owl';
                          ]]]
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.temp_nina'].state == 'unavailable')
                                return "?"
                              return states['sensor.temp_nina'].state+"°"
                            ]]]
                          var_temp: |
                            [[[ 
                              return states['sensor.temp_nina'].state
                            ]]]
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - carte_piece_graph
                          - state_unavailable
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_nina'].state )
                            ]]]
                          graph:
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - sensor.temp_nina
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.moustique_nina
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: media_player.nina
                                  icon: mdi:speaker
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_nina
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Nina
                      - type: custom:button-card
                        entity: switch.radiateur
                        name: S. de bain
                        icon: phu:rooms-bathroom
                        label: |
                          [[[
                              if (states['sensor.temp_sejour'].state == 'unavailable')
                                return "?"
                              return states['sensor.temp_salle_de_bain'].state+"°"
                          ]]]
                        variables:
                          var_temp: |
                            [[[ 
                              return states['sensor.temp_salle_de_bain'].state
                            ]]]
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - carte_piece_graph
                          - state_unavailable
                        custom_fields:
                          graph:
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - sensor.temp_salle_de_bain
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: media_player.la_salle_de_bain
                                  icon: mdi:speaker
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/SDB
                      - type: custom:button-card
                        entity: light.escalier
                        name: Escalier
                        icon: mdi:stairs
                        variables:
                          var_label: |
                            [[[
                              if (entity.state == "on")
                                return states['sensor.mouv_palier_lum'].state+"lx"
                              return 'Éteint '
                            ]]]
                          var_temp: |
                            [[[ 
                              return "null"
                            ]]]
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - state_unavailable
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_escalier
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Escalier
                      - type: custom:button-card
                        entity: light.palier
                        name: Palier
                        icon: phu:rooms-attic
                        variables:
                          var_label: |
                            [[[
                              if (entity.state == "on")
                                return states['sensor.mouv_palier_lum'].state+"lx"
                              return 'Éteint '
                            ]]]
                          var_temp: |
                            [[[ 
                              return "null"
                            ]]]
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - state_unavailable
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_palier
                                  template:
                                    - carte_bouton
                                    - carte_bouton_state
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Escalier
                    columns: 2
                    square: false
                type: vertical-stack
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Multimédia" ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: media_player.tv_salon
                    name: TV Salon
                    variables:
                      var_source: |
                        [[[ 
                          return states['sensor.tv_salon_source'].state 
                        ]]]
                    template:
                      - base
                      - carte_tv
                      - state_carte
                      - state_unavailable
                    custom_fields:
                      jauge-cercle:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.tv_salon
                              state: 'on'
                          card:
                            type: custom:hatc-gauge-card
                            entity: sensor.tv_salon_vol
                            title:
                              name: false
                              icon: false
                              text-align: center
                              text-color: red
                              font-size: 28px
                            gauge:
                              icon: false
                              font-size: 11px
                              text-color: severity
                              max_value: 100
                              friendly_name: false
                              unit_of_measurement: false
                              severity:
                                - color: darkgrey
                                - color: rgb(180, 70, 70)
                                  from: 30
                                  to: 100
                      bouton2:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              template:
                                - carte_bouton
                                - carte_bouton_state_tv_salon
                              icon: |
                                [[[
                                  if (states['media_player.tv_salon'].state == 'on' && states['sensor.tv_salon_sortie_audio'].state == 'Casque')
                                  return "mdi-headphones"
                                  if (states['media_player.tv_salon'].state == 'on' && states['sensor.tv_salon_sortie_audio'].state == 'TV')
                                  return "mdi:television"
                                  if (states['media_player.tv_salon'].state == 'on' && states['sensor.tv_salon_sortie_audio'].state == 'Barre de son')
                                    return "mdi:speaker-bluetooth"
                                  return "mdi:television"
                                ]]]
                            - type: custom:button-card
                              entity: script.tv_salon_chaine_bas
                              template:
                                - carte_bouton
                                - carte_bouton_state_tv_salon
                            - type: custom:button-card
                              entity: script.tv_salon_chaine_haut
                              template:
                                - carte_bouton
                                - carte_bouton_state_tv_salon
                      bouton:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              entity: script.tv_salon_volume_mute
                              template: carte_bouton
                              styles:
                                card:
                                  - background-color: |
                                      [[[
                                        if (states['media_player.tv_salon'].attributes.is_volume_muted == true)
                                          return 'var(--custom-img-cell-color-red)';
                                        return "var(--background-button-in-card)"
                                      ]]]
                                icon:
                                  - color: |
                                      [[[
                                        if (states['media_player.tv_salon'].attributes.is_volume_muted == true)
                                          return 'red';
                                        return "grey"
                                      ]]]
                            - type: custom:button-card
                              entity: script.tv_salon_volume_bas
                              template:
                                - carte_bouton
                                - carte_bouton_state_tv_salon
                            - type: custom:button-card
                              entity: script.tv_salon_volume_haut
                              template:
                                - carte_bouton
                                - carte_bouton_state_tv_salon
                    double_tap_action:
                      action: call-service
                      service: script.tv_salon_on_off
                      service_data: null
                  - type: custom:button-card
                    entity: switch.tele_des_parents
                    name: TV Parents
                    variables:
                      var_source: |
                        [[[ 
                          return states['sensor.tv_parents_source'].state 
                        ]]]
                    template:
                      - base
                      - carte_tv
                      - state_carte
                      - state_unavailable
                    custom_fields:
                      jauge-cercle:
                        card:
                          type: conditional
                          conditions:
                            - entity: switch.tele_des_parents
                              state: 'on'
                          card:
                            type: custom:hatc-gauge-card
                            entity: sensor.tv_parents_vol
                            title:
                              name: false
                              icon: false
                              text-align: center
                              text-color: red
                              font-size: 28px
                            gauge:
                              icon: false
                              font-size: 11px
                              text-color: darkgrey
                              max_value: 100
                              friendly_name: false
                              unit_of_measurement: false
                              severity:
                                - color: darkgrey
                                - color: rgb(180, 70, 70)
                                  from: 100
                                  to: 100
                      bouton2:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              template:
                                - carte_bouton
                                - carte_bouton_state_tv_parents
                              icon: |
                                [[[
                                  if (states['switch.tele_des_parents'].state == 'on')
                                    return "mdi:television"
                                  return "mdi:speaker-bluetooth"
                                ]]]
                            - type: custom:button-card
                              entity: script.tv_parents_menu
                              template:
                                - carte_bouton
                                - carte_bouton_state_tv_parents
                            - type: custom:button-card
                              entity: script.tv_parents_gauche
                              template:
                                - carte_bouton
                                - carte_bouton_state_tv_parents
                      bouton:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              entity: script.tv_parents_droite
                              template:
                                - carte_bouton
                                - carte_bouton_state_tv_parents
                            - type: custom:button-card
                              entity: script.tv_parents_bas
                              template:
                                - carte_bouton
                                - carte_bouton_state_tv_parents
                            - type: custom:button-card
                              entity: script.tv_parents_haut
                              template:
                                - carte_bouton
                                - carte_bouton_state_tv_parents
                    double_tap_action:
                      action: toggle
                    tap_action:
                      action: more-info
                columns: 2
                square: false
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.musique_rdc_on
                    name: RDC
                    icon: mdi:speaker
                    template:
                      - base
                      - carte_multimedia
                    custom_fields:
                      cartes:
                        card:
                          type: custom:swipe-card
                          parameters:
                            fadeEffect:
                              crossFade: true
                            autoplay:
                              delay: 3000
                            speed: 2000
                          cards:
                            - type: conditional
                              conditions:
                                - entity: media_player.partout
                                  state: playing
                              card:
                                type: custom:mini-media-player
                                entity: media_player.partout
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                            - type: conditional
                              conditions:
                                - entity: media_player.sejour
                                  state: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.sejour
                            - type: conditional
                              conditions:
                                - entity: media_player.la_cuisine
                                  state: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.la_cuisine
                            - type: conditional
                              conditions:
                                - entity: media_player.le_garage
                                  state: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.le_garage
                            - type: conditional
                              conditions:
                                - entity: media_player.chambre_des_parents
                                  state: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.chambre_des_parents
                            - type: conditional
                              conditions:
                                - entity: media_player.en_bas
                                  state: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.en_bas
                          columns: 2
                  - type: custom:button-card
                    entity: sensor.musique_etage_on
                    name: Etage
                    icon: mdi:speaker
                    template:
                      - base
                      - carte_multimedia
                    styles:
                      custom_fields:
                        notification:
                          - background-color: |
                              [[[
                                if (states['sensor.compteur_musique_etage'].state == 0)
                                  return 'rgba(0,191,205,0)';
                               return 'rgba(0,0,0,0.4)';
                              ]]]
                          - color: |
                              [[[
                                if (states['sensor.compteur_musique_etage'].state == 0)
                                  return 'transparent';
                               return 'var(--text_on)';
                              ]]]
                      notification: >
                        [[[ return
                        Math.floor(states['sensor.compteur_musique_etage'].state
                        ) ]]]
                    custom_fields:
                      cartes:
                        card:
                          type: custom:swipe-card
                          parameters:
                            fadeEffect:
                              crossFade: true
                            autoplay:
                              delay: 3000
                            speed: 2000
                          cards:
                            - type: conditional
                              conditions:
                                - entity: media_player.la_salle_de_bain
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.la_salle_de_bain
                            - type: conditional
                              conditions:
                                - entity: media_player.leane
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                                - entity: media_player.chambre_de_manon_et_leane
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.leane
                            - type: conditional
                              conditions:
                                - entity: media_player.tom
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.tom
                            - type: conditional
                              conditions:
                                - entity: media_player.nina
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.nina
                            - type: conditional
                              conditions:
                                - entity: media_player.manon
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                                - entity: media_player.chambre_de_manon_et_leane
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.manon
                            - type: conditional
                              conditions:
                                - entity: media_player.etage
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.etage
                            - type: conditional
                              conditions:
                                - entity: media_player.chambre_de_manon_et_leane
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: true
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.chambre_de_manon_et_leane
                          columns: 2
                columns: 2
                square: false
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Appareils" ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: vacuum.wall_e
                    icon: phu:roborock
                    show_state: false
                    show_label: true
                    template:
                      - base
                      - base_large
                      - style
                      - state_carte
                      - state_unavailable
                    name: Wall-E
                    label: |
                      [[[ return states['sensor.walle_state'].state   ]]]
                    styles:
                      icon:
                        - animation: |
                            [[[
                              if (entity.state == 'cleaning')
                              return 'rotating 4s ease infinite'
                            ]]]
                    custom_fields:
                      jauge-cercle:
                        card:
                          type: custom:hatc-gauge-card
                          entity: sensor.walle_batterie
                          title:
                            name: false
                            icon: false
                            text-align: center
                            text-color: red
                            font-size: 28px
                          gauge:
                            icon: false
                            font-size: 11px
                            text-color: severity
                            max_value: 100
                            friendly_name: false
                            unit_of_measurement: false
                            severity:
                              - color: darkgrey
                              - color: rgb(180, 70, 70)
                                from: 0
                                to: 40
                      bouton:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              entity: script.aspi_walle_demarrage
                              template:
                                - carte_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.walle_state'].state == "Nettoyage")
                                          return 'lightgrey';
                                        return "dimgrey"
                                      ]]]
                            - type: custom:button-card
                              entity: script.aspi_pause
                              template:
                                - carte_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.walle_state'].state == "Pause")
                                          return 'lightgrey';
                                        return "dimgrey"
                                      ]]]
                            - type: custom:button-card
                              entity: script.sortir_l_aspi
                              template:
                                - carte_bouton
                            - type: custom:button-card
                              entity: vacuum.wall_e
                              icon: mdi:map-marker
                              template:
                                - carte_bouton
                              tap_action:
                                action: call-service
                                service: vacuum.locate
                                service_data:
                                  entity_id: vacuum.wall_e
                            - type: custom:button-card
                              entity: script.aspi_retour_base
                              template:
                                - carte_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.walle_state'].state == "Base")
                                          return 'lightgrey';
                                        return "dimgrey"
                                      ]]]
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Aspis
                  - type: custom:button-card
                    entity: vacuum.r2d2
                    icon: phu:roborock
                    show_state: false
                    show_label: true
                    template:
                      - base
                      - base_large
                      - state_carte
                      - style
                      - state_unavailable
                    name: R2D2
                    label: |
                      [[[ return states['sensor.r2d2_state'].state  ]]]
                    styles:
                      icon:
                        - animation: |
                            [[[
                              if (entity.state == 'cleaning')
                              return 'rotating 4s ease infinite'
                            ]]]
                    custom_fields:
                      jauge-cercle:
                        card:
                          type: custom:hatc-gauge-card
                          entity: sensor.r2d2_batterie
                          title:
                            name: false
                            icon: false
                            text-align: center
                            text-color: red
                            font-size: 28px
                          gauge:
                            icon: false
                            font-size: 11px
                            text-color: severity
                            max_value: 100
                            friendly_name: false
                            unit_of_measurement: false
                            severity:
                              - color: darkgrey
                              - color: rgb(180, 70, 70)
                                from: 0
                                to: 40
                      bouton:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              entity: script.aspi_r2d2_demarrage
                              template:
                                - carte_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.r2d2_state'].state == "Nettoyage")
                                          return 'lightgrey';
                                        if (states['sensor.r2d2_state'].state == "Retour")
                                          return "lightgrey"
                                        return "dimgrey"
                                      ]]]
                            - type: custom:button-card
                              entity: script.aspi_pause
                              template:
                                - carte_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.r2d2_state'].state == "Pause")
                                          return 'lightgrey';
                                        return "dimgrey"
                                      ]]]
                            - type: custom:button-card
                              entity: vacuum.r2d2
                              icon: mdi:map-marker
                              template:
                                - carte_bouton
                              tap_action:
                                action: call-service
                                service: vacuum.locate
                                service_data:
                                  entity_id: vacuum.r2d2
                            - type: custom:button-card
                              entity: script.aspi_retour_base
                              template:
                                - carte_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.r2d2_state'].state == "Base")
                                          return 'lightgrey';
                                        return "dimgrey"
                                      ]]]
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Aspis
                  - type: custom:button-card
                    template:
                      - carte_appareil_vaisselle
                  - type: custom:button-card
                    template:
                      - carte_appareil_linge
                  - type: custom:button-card
                    entity: input_boolean.boite_aux_lettres_ouverte
                    name: Courrier
                    icon: mdi:email
                    label: |
                      [[[
                        if( states['input_boolean.boite_aux_lettres_ouverte'].state == "on" && states['input_boolean.courrier_releve'].state == "on")
                          return "Relevé à "+states['sensor.courrier_releve'].state
                        if( states['input_boolean.boite_aux_lettres_ouverte'].state == "off" && states['input_boolean.courrier_releve'].state == "on")
                          return "Relevé à "+states['sensor.courrier_releve'].state
                        if( states['input_boolean.boite_aux_lettres_ouverte'].state == "on" && states['input_boolean.courrier_releve'].state == "off")
                          return "Ouvert à "+states['sensor.boite_aux_lettres_ouvertee'].state
                        return "Non relevé"
                      ]]]
                    template:
                      - base
                      - base_large
                      - style
                      - state_carte
                      - state_unavailable
                    custom_fields:
                      bouton:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              entity: input_boolean.courrier_releve
                              template:
                                - carte_bouton
                                - carte_bouton_state
                              icon: |
                                [[[
                                  if( states['input_boolean.courrier_releve'].state == "on")
                                    return "mdi:check"
                                  return "mdi:toggle-switch-off"
                                ]]]
                              styles:
                                icon:
                                  - width: 20px
                              tap_action:
                                action: toggle
                            - type: custom:button-card
                              template:
                                - carte_bouton
                              icon: mdi:door-closed
                              tap_action:
                                action: more-info
                  - type: custom:button-card
                    template:
                      - carte_appareil_imprimante
                columns: 2
                square: false
            type: vertical-stack
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Personnes" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    template:
                      - carte_personne_aurel
                  - type: custom:button-card
                    template:
                      - carte_personne_alex
                  - type: custom:button-card
                    template:
                      - carte_personne_tom
                  - type: custom:button-card
                    template:
                      - carte_personne_manon
                  - type: custom:button-card
                    template:
                      - carte_personne_leane
                  - type: custom:button-card
                    template:
                      - carte_personne_nina
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Relevés" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.maj
                    name: Système
                    icon: mdi:raspberry-pi
                    template:
                      - base
                      - base_tres_large
                      - carte_systeme
                    label: |
                      [[[
                        if (states["sensor.maj"].state == "Aucune mise à jour") 
                          return 'A jour'
                        return 'Mettre à jour'
                      ]]]
                    styles:
                      label:
                        - color: |
                            [[[
                              if (states["sensor.maj"].state == "Aucune mise à jour") 
                                return ''
                              return 'var(--custom-icon-color-blue)'
                            ]]]
                      img_cell:
                        - background-color: |
                            [[[
                              if (states["sensor.maj"].state == "Aucune mise à jour") 
                                return 'var(--pastille_off)'
                              return 'var(--custom-img-cell-color-blue)'
                            ]]]
                      icon:
                        - color: |
                            [[[
                              if (states["sensor.maj"].state == "Aucune mise à jour") 
                                return 'var(--icon_off)'
                              return 'var(--custom-icon-color-blue)'
                            ]]]
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.cpu_temperature
                              name: temp
                              template:
                                - carte_systeme_info
                                - carte_systeme_info_systeme_state
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states["sensor.cpu_temperature"].state < 70) 
                                          return 'lightgrey'
                                        return 'var(--custom-icon-color-red)'
                                      ]]]
                            - type: custom:button-card
                              entity: sensor.memory_use_percent
                              name: ram
                              template:
                                - carte_systeme_info
                                - carte_systeme_info_systeme_state
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states["sensor.memory_use_percent"].state < 70) 
                                          return 'lightgrey'
                                        return 'var(--custom-icon-color-red)'
                                      ]]]
                            - type: custom:button-card
                              entity: sensor.processor_use_percent
                              name: cpu
                              template:
                                - carte_systeme_info
                                - carte_systeme_info_systeme_state
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states["sensor.processor_use_percent"].state < 70) 
                                          return 'lightgrey'
                                        return 'var(--custom-icon-color-red)'
                                      ]]]              
                            - type: custom:button-card
                              entity: sensor.disk_use_percent_home
                              name: ssd
                              template:
                                - carte_systeme_info
                                - carte_systeme_info_systeme_state
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states["sensor.disk_use_percent_home"].state < 70) 
                                          return 'lightgrey'
                                        return 'var(--custom-icon-color-red)'
                                      ]]]              
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(100,100,100,0.5)
                              entity: sensor.cpu_temperature
                          height: 300
                          line_width: 4
                          lower_bound: 18
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                      reload:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: script.redemarrer_le_pont_tenda_nova
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon_off)
                                  - width: 70%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                              tap_action:
                                confirmation:
                                  text: '[[[ return `Redémarrer le pont ? ` ]]]'
                                action: call-service
                                service: script.redemarrer_le_pont_tenda_nova
                                service_data: null
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/systeme
                  - type: custom:button-card
                    entity: sensor.myenedis_09397539765420
                    name: Électricité
                    icon: mdi:flash
                    template:
                      - base
                      - base_tres_large
                      - carte_systeme
                    show_state: false
                    label: |
                      [[[
                        if (states["sensor.electricite_conso_veille"].state == "-1.0" ) 
                          return 'En attente'
                        if (states["sensor.electricite_conso_veille"].state == "unavailable" ) 
                          return 'En attente'
                        return states["sensor.electricite_conso_kwh_arrondie"].state +" kWh"
                      ]]]
                    styles:
                      label:
                        - color: |
                            [[[
                              if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'var(--custom-icon-color-red)'
                              else return ''
                            ]]]
                      img_cell:
                        - background-color: |
                            [[[
                              if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'var(--pastille_off)'
                              if (states["sensor.electricite_cout_jour_avec_abo"].state < 3) return 'var(--custom-img-cell-color-blue)';
                              if (states["sensor.electricite_cout_jour_avec_abo"].state >= 3 && states["sensor.electricite_cout_jour_avec_abo"].state < 4) return 'var(--custom-img-cell-color-red)';
                              else return 'var(--custom-img-cell-color-red)';
                            ]]]
                      icon:
                        - color: |
                            [[[
                              if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'var(--icon_off)'
                              if (states["sensor.electricite_cout_jour_avec_abo"].state < 3) return 'var(--custom-icon-color-blue)';
                              if (states["sensor.electricite_cout_jour_avec_abo"].state >= 3 && states["sensor.electricite_cout_jour_avec_abo"].state < 4) return 'var(--custom-icon-color-red)';
                              else return 'var(--custom-icon-color-red)';
                            ]]]
                    state:
                      - value: unavailable
                        styles:
                          label:
                            - color: red
                          state:
                            - color: red
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.electricite_cout_jour_avec_abo
                              name: Jour
                              units: €
                              template:
                                - carte_systeme_info
                              icon: mdi:view-day
                            - type: custom:button-card
                              entity: sensor.electricite_cout_semaine_avec_abo
                              name: Semaine
                              units: €
                              template:
                                - carte_systeme_info
                              icon: mdi:view-week
                            - type: custom:button-card
                              entity: sensor.electricite_cout_mois_avec_abo
                              name: Mois
                              units: €
                              template:
                                - carte_systeme_info
                              icon: mdi:calendar-month
                            - type: custom:button-card
                              entity: sensor.electricite_cout_annee_avec_abo
                              name: Année
                              units: €
                              template:
                                - carte_systeme_info
                              icon: mdi:calendar
                      reload:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: script.rechargement_integration_myenedis
                              icon: mdi:reload-alert
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon_off)
                                  - width: 70%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                      graph_bar:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - entity: sensor.myenedis_09397539765420
                              color: rgba(0,191,255,0.2)
                          group_by: date
                          height: 250
                          hours_to_show: 240
                          points_per_hour: 1
                          min_bound_range: 10
                          font_size: 40
                          align_state: center
                          show:
                            graph: bar
                            fill: false
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: true
                            labels: false
                          style:
                            .: |
                              ha-card {
                                  font-family: Avenir
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Conso
                  - type: custom:button-card
                    entity: sensor.plante_citro_temp
                    name: Plantes
                    icon: mdi:flower-tulip
                    template:
                      - base
                      - base_tres_large
                      - carte_systeme
                    label: |
                      [[[
                        if (states['sensor.plante_citro_humidite'].state < 1 || states['sensor.plante_hum_pied_elephant'].state < 1 || states['sensor.plante_hum_dracaena'].state < 1)  
                          return "Besoin d'eau !"
                        return ""
                      ]]]
                    styles:
                      img_cell:
                        - background-color: |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state < 1 || states['sensor.plante_hum_pied_elephant'].state < 1 || states['sensor.plante_hum_dracaena'].state < 1) return 'var(--custom-img-cell-color-red)'
                              else return 'var(--pastille_off)';
                            ]]]
                      icon:
                        - color: |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state < 1 || states['sensor.plante_hum_pied_elephant'].state < 1 || states['sensor.plante_hum_dracaena'].state < 1) return 'var(--custom-icon-color-red)'
                              else return 'var(--icon_off)';
                            ]]]
                        - animation: |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state < 1 || states['sensor.plante_hum_pied_elephant'].state < 1 || states['sensor.plante_hum_dracaena'].state < 1) return 'blink 1s ease infinite'
                              else return 'var(--icon_off)';
                            ]]]
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.plante_hum_dracaena
                              name: Dracaena
                              template:
                                - carte_systeme_info
                                - carte_systeme_info_plante_state
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states["sensor.plante_hum_dracaena"].state > 5) 
                                          return 'lightgrey'
                                        return 'var(--custom-icon-color-red)'
                                      ]]]
                            - type: custom:button-card
                              entity: sensor.plante_hum_pied_elephant
                              name: Pied Eleph
                              template:
                                - carte_systeme_info
                                - carte_systeme_info_plante_state
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states["sensor.plante_hum_pied_elephant"].state > 5) 
                                          return 'lightgrey'
                                        return 'var(--custom-icon-color-red)'
                                      ]]]
                            - type: custom:button-card
                              entity: sensor.plante_citro_humidite
                              name: Citronnier
                              template:
                                - carte_systeme_info
                                - carte_systeme_info_plante_state
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states["sensor.plante_citro_humidite"].state > 5) 
                                          return 'lightgrey'
                                        return 'var(--custom-icon-color-red)'
                                      ]]]              
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(30,144,255,0.5)
                              entity: sensor.plante_hum_dracaena
                          height: 250
                          line_width: 4
                          lower_bound: 10
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Plantes
                  - type: custom:button-card
                    entity: sensor.grdf_consommation_gaz
                    name: Gaz
                    icon: mdi:gas-burner
                    template:
                      - base
                      - base_tres_large
                      - carte_systeme
                    show_state: false
                    label: |
                      [[[
                        if (states["sensor.grdf_consommation_gaz"].state == "unavailable" ) 
                          return 'En attente'
                        return states["sensor.grdf_consommation_gaz"].state +" kWh<br>" +states["sensor.gaz_cout_jour_avec_abo"].state +" €"
                      ]]]
                    styles:
                      img_cell:
                        - background-color: |
                            [[[
                              if (entity.state == "unavailable") return 'var(--pastille_off)'
                              if (entity.state < 50) return 'var(--custom-img-cell-color-blue)';
                              if (entity.state >= 50 ) return 'var(--custom-img-cell-color-red)';
                              else return 'var(--custom-img-cell-color-red)'; 
                            ]]]
                      icon:
                        - color: |
                            [[[
                              if (entity.state == "unavailable") return 'var(--icon_off)'
                              if (entity.state < 50) return 'var(--custom-icon-color-blue)';
                              if (entity.state >= 50) return 'var(--custom-icon-color-red)';
                              else return 'var(--custom-icon-color-red)';
                            ]]]
                    state:
                      - value: unavailable
                        styles:
                          label:
                            - color: var(--custom-icon-color-red)
                          state:
                            - color: var(--custom-icon-color-red)
                    custom_fields:
                      reload:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: automation.grdf_get_data
                              icon: mdi:reload-alert
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon_off)
                                  - width: 70%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                              tap_action:
                                action: more-info
                      graph_bar:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - entity: sensor.grdf_consommation_gaz
                              color: rgba(128,128,128,0.4)
                          group_by: date
                          height: 250
                          hours_to_show: 240
                          points_per_hour: 1
                          min_bound_range: 10
                          font_size: 40
                          align_state: center
                          show:
                            graph: bar
                            fill: false
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: true
                            labels: false
                          style:
                            .: |
                              ha-card {
                                  font-family: Avenir
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Conso
            type: vertical-stack
        layout:
          width: 280
  - theme: Backend-selected
    title: Lumières
    path: Lumières
    icon: mdi:lightbulb-group
    visible:
      - user: d8316597eafd4333b737464a5b4c62d0
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: 2f0040afe95a4514ade3c049a0b5d479
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: false
    badges:
      - entity: sensor.plante_lum_dracaena
        name: Dracaena
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.plante_lum_dracaena') | float < 90 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}      
      - entity: sensor.plante_lum_pied_elephant
        name: Pied d'Elephant
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.plante_lum_pied_elephant') | float < 90 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}    
      - entity: sensor.salle_a_manger_luminosite
        name: SaM
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.salle_a_manger_luminosite') | float < 90 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}         
      - entity: sensor.mouv_tom_luminosite
        name: Tom
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.mouv_tom_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %} 
      - entity: sensor.mouv_manon_luminosite
        name: Manon
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}   
      - entity: sensor.mouv_leane_luminosite
        name: Léane
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}               
      - entity: sensor.mouv_nina_luminosite
        name: Nina
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %} 
      - entity: sensor.mouv_palier_lum
        name: Palier
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.mouv_palier_lum') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %} 
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:sofa
                    layout: icon|name
                    name: Séjour
                    entity: light.sejour
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                    tap_action:
                      action: call-service
                      service: input_boolean.toggle
                      target:
                        entity_id: input_boolean.carte_lumiere_sejour
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
                styles:
                  name:
                    - font-size: 17px
              - type: custom:vertical-stack-in-card
                cards:
                  - type: conditional
                    conditions:
                      - entity: input_boolean.carte_lumiere_sejour
                        state: 'on'
                    card:
                      type: entities
                      entities:
                        - entity: light.sejour
                          name: Toutes les lampes
                          icon: mdi:sofa
                        - type: custom:vertical-stack-in-card
                          horizontal: true
                          style: |
                            ha-card {
                              box-shadow: none;
                            }
                          cards:
                            - type: grid
                              square: false
                              columns: 4
                              cards:
                                - type: custom:button-card
                                  entity: light.lampe_de_bureau
                                  name: Bureau
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.bandeau_led
                                  name: Meuble TV
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.lampe_tv_salon
                                  name: Lampe TV
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.lampe_canape
                                  name: Canapé
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.buffet
                                  name: Buffet
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.lampadaire
                                  name: Lampadaire
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.lustre_salon
                                  name: Lustre salon
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.lustre_salle_a_manger
                                  name: Lustre SaM
                                  template:
                                    - carte_lumiere
                        - type: custom:light-entity-card
                          entity: light.sejour
                          shorten_cards: true
                          consolidate_entities: true
                          child_card: true
                          hide_header: true
                          header: Toutes les lampes
                          color_wheel: true
                          persist_features: true
                          brightness: true
                          color_temp: true
                          white_value: false
                          color_picker: false
                          smooth_color_wheel: true
                          speed: false
                          intensity: false
                          force_features: false
                          show_slider_percent: true
                          full_width_sliders: false
                          brightness_icon: weather-sunny
                          white_icon: file-word-box
                          temperature_icon: thermometer
                          speed_icon: speedometer
                          intensity_icon: transit-connection-horizontal
                          effects_list: false
                          style: >
                            ha-card {
                              margin: 25px 2px !important;
                            } ha-card > div.light-entity-card__header >
                            div.light-entity-card__title {
                              font-size: 14px !important;
                              font-weight: 500;
                            }
                        - type: custom:rgb-light-card
                          entity: light.sejour
                          justify: around
                          size: 18
                          colors:
                            - color_temp: 153
                              brightness: 255
                              icon_color: white
                            - color_temp: 357
                              brightness: 255
                            - color_temp: 451
                              brightness: 255
                            - rgb_color:
                                - 255
                                - 170
                                - 0
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(255,170,0),
                                rgb(255,225,165))
                            - rgb_color:
                                - 255
                                - 0
                                - 0
                              brightness: 255
                              icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                            - rgb_color:
                                - 244
                                - 38
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(244,38,255),
                                rgb(255,138,255))
                            - rgb_color:
                                - 0
                                - 222
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(0,222,255),
                                rgb(140,240,255))
                            - rgb_color:
                                - 0
                                - 0
                                - 255
                              brightness: 255
                              icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                          style: |
                            * {
                              margin-bottom: 6px !important;
                            }
            state_color: true
            show_header_toggle: false
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: phu:rooms-hallway
                    layout: icon|name
                    entity: light.entree_et_couloir
                    name: Entrée
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                    tap_action:
                      action: call-service
                      service: input_boolean.toggle
                      target:
                        entity_id: input_boolean.carte_lumiere_entree
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
                styles:
                  name:
                    - font-size: 17px
              - type: custom:vertical-stack-in-card
                cards:
                  - type: conditional
                    conditions:
                      - entity: input_boolean.carte_lumiere_entree
                        state: 'on'
                    card:
                      type: entities
                      entities:
                        - entity: light.entree_et_couloir
                          name: Toutes les lampes
                        - type: custom:vertical-stack-in-card
                          horizontal: true
                          style: |
                            ha-card {
                              box-shadow: none;
                            }
                          cards:
                            - type: grid
                              square: false
                              columns: 4
                              cards:
                                - type: custom:button-card
                                  entity: light.entree
                                  name: Entrée
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.couloir
                                  name: Couloir
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.aqara_hub_54e1
                                  name: Veilleuse
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.veranda
                                  name: Véranda
                                  template:
                                    - carte_lumiere
                        - type: custom:light-entity-card
                          entity: light.entree_et_couloir
                          shorten_cards: false
                          consolidate_entities: true
                          child_card: true
                          hide_header: true
                          header: Toutes les lampes
                          color_wheel: true
                          persist_features: true
                          brightness: true
                          color_temp: true
                          white_value: false
                          color_picker: false
                          smooth_color_wheel: true
                          speed: false
                          intensity: false
                          force_features: false
                          show_slider_percent: true
                          full_width_sliders: false
                          brightness_icon: weather-sunny
                          white_icon: file-word-box
                          temperature_icon: thermometer
                          speed_icon: speedometer
                          intensity_icon: transit-connection-horizontal
                          effects_list: false
                          style: >
                            ha-card {
                              margin: 25px 2px !important;
                            } ha-card > div.light-entity-card__header >
                            div.light-entity-card__title {
                              font-size: 14px !important;
                              font-weight: 500;
                            }
                        - type: custom:rgb-light-card
                          entity: light.entree_et_couloir
                          justify: around
                          size: 18
                          colors:
                            - color_temp: 153
                              brightness: 255
                              icon_color: white
                            - color_temp: 357
                              brightness: 255
                            - color_temp: 451
                              brightness: 255
                            - rgb_color:
                                - 255
                                - 170
                                - 0
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(255,170,0),
                                rgb(255,225,165))
                            - rgb_color:
                                - 255
                                - 0
                                - 0
                              brightness: 255
                              icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                            - rgb_color:
                                - 244
                                - 38
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(244,38,255),
                                rgb(255,138,255))
                            - rgb_color:
                                - 0
                                - 222
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(0,222,255),
                                rgb(140,240,255))
                            - rgb_color:
                                - 0
                                - 0
                                - 255
                              brightness: 255
                              icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                          style: |
                            * {
                              margin-bottom: 6px !important;
                            }
            state_color: true
            show_header_toggle: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: phu:rooms-bedroom
                    layout: icon|name
                    entity: light.parents
                    name: Parents
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                    tap_action:
                      action: call-service
                      service: input_boolean.toggle
                      target:
                        entity_id: input_boolean.carte_lumiere_parents
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
                styles:
                  name:
                    - font-size: 17px
              - type: custom:vertical-stack-in-card
                cards:
                  - type: conditional
                    conditions:
                      - entity: input_boolean.carte_lumiere_parents
                        state: 'on'
                    card:
                      type: entities
                      entities:
                        - entity: light.parents
                          name: Toutes les lampes
                        - type: custom:vertical-stack-in-card
                          horizontal: true
                          style: |
                            ha-card {
                              box-shadow: none;
                            }
                          cards:
                            - type: custom:button-card
                              entity: light.lustre_parents
                              name: Lustre
                              template:
                                - carte_lumiere
                            - type: custom:button-card
                              entity: light.chevet
                              name: Chevet
                              template:
                                - carte_lumiere
                        - type: custom:light-entity-card
                          entity: light.parents
                          shorten_cards: false
                          consolidate_entities: true
                          child_card: true
                          hide_header: true
                          header: Toutes les lampes
                          color_wheel: true
                          persist_features: true
                          brightness: true
                          color_temp: true
                          white_value: false
                          color_picker: false
                          smooth_color_wheel: true
                          speed: false
                          intensity: false
                          force_features: false
                          show_slider_percent: true
                          full_width_sliders: false
                          brightness_icon: weather-sunny
                          white_icon: file-word-box
                          temperature_icon: thermometer
                          speed_icon: speedometer
                          intensity_icon: transit-connection-horizontal
                          effects_list: false
                          style: >
                            ha-card {
                              margin: 25px 2px !important;
                            } ha-card > div.light-entity-card__header >
                            div.light-entity-card__title {
                              font-size: 14px !important;
                              font-weight: 500;
                            }
                        - type: custom:rgb-light-card
                          entity: light.parents
                          justify: around
                          size: 18
                          colors:
                            - color_temp: 153
                              brightness: 255
                              icon_color: white
                            - color_temp: 357
                              brightness: 255
                            - color_temp: 451
                              brightness: 255
                            - rgb_color:
                                - 255
                                - 170
                                - 0
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(255,170,0),
                                rgb(255,225,165))
                            - rgb_color:
                                - 255
                                - 0
                                - 0
                              brightness: 255
                              icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                            - rgb_color:
                                - 244
                                - 38
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(244,38,255),
                                rgb(255,138,255))
                            - rgb_color:
                                - 0
                                - 222
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(0,222,255),
                                rgb(140,240,255))
                            - rgb_color:
                                - 0
                                - 0
                                - 255
                              brightness: 255
                              icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                          style: |
                            * {
                              margin-bottom: 6px !important;
                            }
            state_color: true
            show_header_toggle: false
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:bat
                    layout: icon|name
                    entity: light.tom
                    name: Tom
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                    tap_action:
                      action: call-service
                      service: input_boolean.toggle
                      target:
                        entity_id: input_boolean.carte_lumiere_tom
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
                styles:
                  name:
                    - font-size: 17px
              - type: custom:vertical-stack-in-card
                cards:
                  - type: conditional
                    conditions:
                      - entity: input_boolean.carte_lumiere_tom
                        state: 'on'
                    card:
                      type: entities
                      entities:
                        - entity: light.tom
                          name: Toutes les lampes
                        - type: custom:vertical-stack-in-card
                          horizontal: true
                          style: |
                            ha-card {
                              box-shadow: none;
                            }
                          cards:
                            - type: custom:button-card
                              entity: light.lustre_tom
                              name: Lustre
                              template:
                                - carte_lumiere
                            - type: custom:button-card
                              entity: light.chevet_tom
                              name: Chevet
                              template:
                                - carte_lumiere
                            - type: custom:button-card
                              entity: light.lampe_de_bureau_tom
                              name: Lampe
                              template:
                                - carte_lumiere
                            - type: custom:button-card
                              entity: light.sonoff_10013f6d7e
                              name: Bureau
                              template:
                                - carte_lumiere
                        - type: custom:light-entity-card
                          entity: light.tom
                          shorten_cards: false
                          consolidate_entities: true
                          child_card: true
                          hide_header: true
                          header: Toutes les lampes
                          color_wheel: true
                          persist_features: true
                          brightness: true
                          color_temp: true
                          white_value: false
                          color_picker: false
                          smooth_color_wheel: true
                          speed: false
                          intensity: false
                          force_features: false
                          show_slider_percent: true
                          full_width_sliders: false
                          brightness_icon: weather-sunny
                          white_icon: file-word-box
                          temperature_icon: thermometer
                          speed_icon: speedometer
                          intensity_icon: transit-connection-horizontal
                          effects_list: false
                          style: >
                            ha-card {
                              margin: 25px 2px !important;
                            } ha-card > div.light-entity-card__header >
                            div.light-entity-card__title {
                              font-size: 14px !important;
                              font-weight: 500;
                            }
                        - type: custom:rgb-light-card
                          entity: light.tom
                          justify: around
                          size: 18
                          colors:
                            - color_temp: 153
                              brightness: 255
                              icon_color: white
                            - color_temp: 357
                              brightness: 255
                            - color_temp: 451
                              brightness: 255
                            - rgb_color:
                                - 255
                                - 170
                                - 0
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(255,170,0),
                                rgb(255,225,165))
                            - rgb_color:
                                - 255
                                - 0
                                - 0
                              brightness: 255
                              icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                            - rgb_color:
                                - 244
                                - 38
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(244,38,255),
                                rgb(255,138,255))
                            - rgb_color:
                                - 0
                                - 222
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(0,222,255),
                                rgb(140,240,255))
                            - rgb_color:
                                - 0
                                - 0
                                - 255
                              brightness: 255
                              icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                          style: |
                            * {
                              margin-bottom: 6px !important;
                            }
            state_color: true
            show_header_toggle: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:death-star-variant
                    layout: icon|name
                    entity: light.manon_et_leane
                    name: Manon & Léane
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                    tap_action:
                      action: call-service
                      service: input_boolean.toggle
                      target:
                        entity_id: input_boolean.carte_lumiere_manon_et_leane
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
                styles:
                  name:
                    - font-size: 17px
              - type: custom:vertical-stack-in-card
                cards:
                  - type: conditional
                    conditions:
                      - entity: input_boolean.carte_lumiere_manon_et_leane
                        state: 'on'
                    card:
                      type: entities
                      entities:
                        - entity: light.manon_et_leane
                          name: Toutes les lampes
                        - type: custom:vertical-stack-in-card
                          horizontal: true
                          style: |
                            ha-card {
                              box-shadow: none;
                            }
                          cards:
                            - type: grid
                              square: false
                              columns: 3
                              cards:
                                - type: custom:button-card
                                  entity: light.lustre_manon_et_leane
                                  name: Lustre
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.chevet_manon
                                  name: Chevet Manon
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.lampe_de_bureau_manon
                                  name: Lampe
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.lampe_manon_et_leane
                                  name: Lampadaire
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.chevet_leane
                                  name: Chevet Léane
                                  template:
                                    - carte_lumiere
                                - type: custom:button-card
                                  entity: light.arbre_lumineux
                                  name: Arbre
                                  template:
                                    - carte_lumiere
                        - type: custom:light-entity-card
                          entity: light.manon_et_leane
                          shorten_cards: false
                          consolidate_entities: true
                          child_card: true
                          hide_header: true
                          header: Toutes les lampes
                          color_wheel: true
                          persist_features: true
                          brightness: true
                          color_temp: true
                          white_value: false
                          color_picker: false
                          smooth_color_wheel: true
                          speed: false
                          intensity: false
                          force_features: false
                          show_slider_percent: true
                          full_width_sliders: false
                          brightness_icon: weather-sunny
                          white_icon: file-word-box
                          temperature_icon: thermometer
                          speed_icon: speedometer
                          intensity_icon: transit-connection-horizontal
                          effects_list: false
                          style: >
                            ha-card {
                              margin: 25px 2px !important;
                            } ha-card > div.light-entity-card__header >
                            div.light-entity-card__title {
                              font-size: 14px !important;
                              font-weight: 500;
                            }
                        - type: custom:rgb-light-card
                          entity: light.manon_et_leane
                          justify: around
                          size: 18
                          colors:
                            - color_temp: 153
                              brightness: 255
                              icon_color: white
                            - color_temp: 357
                              brightness: 255
                            - color_temp: 451
                              brightness: 255
                            - rgb_color:
                                - 255
                                - 170
                                - 0
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(255,170,0),
                                rgb(255,225,165))
                            - rgb_color:
                                - 255
                                - 0
                                - 0
                              brightness: 255
                              icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                            - rgb_color:
                                - 244
                                - 38
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(244,38,255),
                                rgb(255,138,255))
                            - rgb_color:
                                - 0
                                - 222
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(0,222,255),
                                rgb(140,240,255))
                            - rgb_color:
                                - 0
                                - 0
                                - 255
                              brightness: 255
                              icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                          style: |
                            * {
                              margin-bottom: 6px !important;
                            }
            state_color: true
            show_header_toggle: false
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:owl
                    layout: icon|name
                    entity: light.nina
                    name: Nina
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                    tap_action:
                      action: call-service
                      service: input_boolean.toggle
                      target:
                        entity_id: input_boolean.carte_lumiere_nina
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
                styles:
                  name:
                    - font-size: 17px
              - type: custom:vertical-stack-in-card
                cards:
                  - type: conditional
                    conditions:
                      - entity: input_boolean.carte_lumiere_nina
                        state: 'on'
                    card:
                      type: entities
                      entities:
                        - entity: light.nina
                          name: Toutes les lampes
                        - type: custom:vertical-stack-in-card
                          horizontal: true
                          style: |
                            ha-card {
                              box-shadow: none;
                            }
                          cards:
                            - type: custom:button-card
                              entity: light.lustre_nina
                              name: Lustre
                              template:
                                - carte_lumiere
                            - type: custom:button-card
                              entity: light.lampadaire_nina
                              name: Lampadaire
                              template:
                                - carte_lumiere
                            - type: custom:button-card
                              entity: light.chevet_nina
                              name: Chevet
                              template:
                                - carte_lumiere
                            - type: custom:button-card
                              entity: light.lampe_de_bureau_nina
                              name: Bureau
                              template:
                                - carte_lumiere
                        - type: custom:light-entity-card
                          entity: light.nina
                          shorten_cards: false
                          consolidate_entities: true
                          child_card: true
                          hide_header: true
                          header: Toutes les lampes
                          color_wheel: true
                          persist_features: true
                          brightness: true
                          color_temp: true
                          white_value: false
                          color_picker: false
                          smooth_color_wheel: true
                          speed: false
                          intensity: false
                          force_features: false
                          show_slider_percent: true
                          full_width_sliders: false
                          brightness_icon: weather-sunny
                          white_icon: file-word-box
                          temperature_icon: thermometer
                          speed_icon: speedometer
                          intensity_icon: transit-connection-horizontal
                          effects_list: false
                          style: >
                            ha-card {
                              margin: 25px 2px !important;
                            } ha-card > div.light-entity-card__header >
                            div.light-entity-card__title {
                              font-size: 14px !important;
                              font-weight: 500;
                            }
                        - type: custom:rgb-light-card
                          entity: light.nina
                          justify: around
                          size: 18
                          colors:
                            - color_temp: 153
                              brightness: 255
                              icon_color: white
                            - color_temp: 357
                              brightness: 255
                            - color_temp: 451
                              brightness: 255
                            - rgb_color:
                                - 255
                                - 170
                                - 0
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(255,170,0),
                                rgb(255,225,165))
                            - rgb_color:
                                - 255
                                - 0
                                - 0
                              brightness: 255
                              icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                            - rgb_color:
                                - 244
                                - 38
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(244,38,255),
                                rgb(255,138,255))
                            - rgb_color:
                                - 0
                                - 222
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(0,222,255),
                                rgb(140,240,255))
                            - rgb_color:
                                - 0
                                - 0
                                - 255
                              brightness: 255
                              icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                          style: |
                            * {
                              margin-bottom: 6px !important;
                            }
            state_color: true
            show_header_toggle: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:stairs
                    layout: icon|name
                    entity: light.escaliers
                    name: Escalier & palier
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                    tap_action:
                      action: call-service
                      service: input_boolean.toggle
                      target:
                        entity_id: input_boolean.carte_lumiere_escaliers_palier
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
                styles:
                  name:
                    - font-size: 17px
              - type: custom:vertical-stack-in-card
                cards:
                  - type: conditional
                    conditions:
                      - entity: input_boolean.carte_lumiere_escaliers_palier
                        state: 'on'
                    card:
                      type: entities
                      entities:
                        - entity: light.escaliers
                          name: Toutes les lampes
                        - type: custom:vertical-stack-in-card
                          horizontal: true
                          style: |
                            ha-card {
                              box-shadow: none;
                            }
                          cards:
                            - type: custom:button-card
                              entity: light.escalier
                              name: Escalier
                              icon: mdi:stairs-up
                              template:
                                - carte_lumiere
                            - type: custom:button-card
                              entity: light.palier
                              name: Palier
                              icon: mdi:home
                              template:
                                - carte_lumiere
                        - type: custom:light-entity-card
                          entity: light.escaliers
                          shorten_cards: false
                          consolidate_entities: true
                          child_card: true
                          hide_header: true
                          header: Toutes les lampes
                          color_wheel: true
                          persist_features: true
                          brightness: true
                          color_temp: true
                          white_value: false
                          color_picker: false
                          smooth_color_wheel: true
                          speed: false
                          intensity: false
                          force_features: false
                          show_slider_percent: true
                          full_width_sliders: false
                          brightness_icon: weather-sunny
                          white_icon: file-word-box
                          temperature_icon: thermometer
                          speed_icon: speedometer
                          intensity_icon: transit-connection-horizontal
                          effects_list: false
                          style: >
                            ha-card {
                              margin: 25px 2px !important;
                            } ha-card > div.light-entity-card__header >
                            div.light-entity-card__title {
                              font-size: 14px !important;
                              font-weight: 500;
                            }
                        - type: custom:rgb-light-card
                          entity: light.escaliers
                          justify: around
                          size: 18
                          colors:
                            - color_temp: 153
                              brightness: 255
                              icon_color: white
                            - color_temp: 357
                              brightness: 255
                            - color_temp: 451
                              brightness: 255
                            - rgb_color:
                                - 255
                                - 170
                                - 0
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(255,170,0),
                                rgb(255,225,165))
                            - rgb_color:
                                - 255
                                - 0
                                - 0
                              brightness: 255
                              icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                            - rgb_color:
                                - 244
                                - 38
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(244,38,255),
                                rgb(255,138,255))
                            - rgb_color:
                                - 0
                                - 222
                                - 255
                              brightness: 255
                              icon_color: >-
                                linear-gradient(15deg, rgb(0,222,255),
                                rgb(140,240,255))
                            - rgb_color:
                                - 0
                                - 0
                                - 255
                              brightness: 255
                              icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                          style: |
                            * {
                              margin-bottom: 6px !important;
                            }
            state_color: true
            show_header_toggle: false
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:toilet
                    layout: icon|name
                    entity: light.lavabo
                    name: Lavabo
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                    tap_action:
                      action: call-service
                      service: input_boolean.toggle
                      target:
                        entity_id: input_boolean.carte_lumiere_lavabo
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
                styles:
                  name:
                    - font-size: 17px
              - type: custom:vertical-stack-in-card
                cards:
                  - type: conditional
                    conditions:
                      - entity: input_boolean.carte_lumiere_lavabo
                        state: 'on'
                    card:
                      type: entities
                      entities:
                        - entity: light.lavabo
                          name: Toutes les lampes
                        - type: custom:vertical-stack-in-card
                          horizontal: true
                          style: |
                            ha-card {
                              box-shadow: none;
                            }
                          cards:
                            - type: custom:button-card
                              entity: light.wc_gauche
                              name: Gauche
                              template:
                                - carte_lumiere
                            - type: custom:button-card
                              entity: light.wc_droit
                              name: Droit
                              template:
                                - carte_lumiere
                        - type: custom:light-entity-card
                          entity: light.lavabo
                          shorten_cards: false
                          consolidate_entities: true
                          child_card: true
                          hide_header: true
                          header: Toutes les lampes
                          color_wheel: true
                          persist_features: true
                          brightness: true
                          color_temp: true
                          white_value: false
                          color_picker: false
                          smooth_color_wheel: true
                          speed: false
                          intensity: false
                          force_features: false
                          show_slider_percent: true
                          full_width_sliders: false
                          brightness_icon: weather-sunny
                          white_icon: file-word-box
                          temperature_icon: thermometer
                          speed_icon: speedometer
                          intensity_icon: transit-connection-horizontal
                          effects_list: false
                          style: >
                            ha-card {
                              margin: 25px 2px !important;
                            } ha-card > div.light-entity-card__header >
                            div.light-entity-card__title {
                              font-size: 14px !important;
                              font-weight: 500;
                            }
            state_color: true
            show_header_toggle: false
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:garage
                    layout: icon|name
                    name: garage
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                    tap_action:
                      action: call-service
                      service: input_boolean.toggle
                      target:
                        entity_id: input_boolean.carte_lumiere_garage
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
                styles:
                  name:
                    - font-size: 17px
              - type: custom:vertical-stack-in-card
                cards:
                  - type: conditional
                    conditions:
                      - entity: input_boolean.carte_lumiere_garage
                        state: 'on'
                    card:
                      type: entities
                      entities:
                        - type: custom:vertical-stack-in-card
                          horizontal: true
                          style: |
                            ha-card {
                              box-shadow: none;
                            }
                          cards:
                            - type: custom:button-card
                              entity: light.cagibi
                              template:
                                - carte_lumiere
                        - type: custom:light-entity-card
                          entity: light.cagibi
                          shorten_cards: false
                          consolidate_entities: true
                          child_card: true
                          hide_header: true
                          header: Toutes les lampes
                          color_wheel: true
                          persist_features: true
                          brightness: true
                          color_temp: true
                          white_value: false
                          color_picker: false
                          smooth_color_wheel: true
                          speed: false
                          intensity: false
                          force_features: false
                          show_slider_percent: true
                          full_width_sliders: false
                          brightness_icon: weather-sunny
                          white_icon: file-word-box
                          temperature_icon: thermometer
                          speed_icon: speedometer
                          intensity_icon: transit-connection-horizontal
                          effects_list: false
                          style: >
                            ha-card {
                              margin: 25px 2px !important;
                            } ha-card > div.light-entity-card__header >
                            div.light-entity-card__title {
                              font-size: 14px !important;
                              font-weight: 500;
                            }
            state_color: true
            show_header_toggle: false
  - theme: Backend-selected
    icon: mdi:broom
    path: Aspis
    title: Aspis
    visible:
      - user: 2f0040afe95a4514ade3c049a0b5d479
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: d8316597eafd4333b737464a5b4c62d0
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: false
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 380
        cards:
          - type: entities
            entities:
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:xiaomi-vacuum-card
                    entity: vacuum.wall_e
                    image: /local/aspis/walle.jpeg
                    name: Wall-E
                    attributes:
                      main_brush:
                        label: 'Brosse '
                        unit: ' h'
                      side_brush:
                        label: 'Brosette '
                        unit: ' h'
                      filter:
                        label: 'Filtre '
                      sensor:
                        label: 'Capteurs '
                    shortcuts:
                      spot:
                        show: true
                        label: Nettoyage localisé
                    buttons:
                      new_button:
                        icon: mdi:flag-variant
                        label: Custom button!
                        service: script.turn_on
                        service_data:
                          entity_id: script.sortir_l_aspi
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card {
                        box-shadow: none;
                        padding: 20px 0px 20px 0px;
                      }
                    cards:
                      - type: custom:button-card
                        entity: script.aspi_walle_sejour
                        name: Séjour
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_salle_a_manger
                        name: SàM
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_walle_salon
                        name: Salon
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_walle_chambre_parents
                        name: Parents
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_walle_cuisine
                        name: Cuisine
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_walle_entree
                        name: Entrée
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_walle_tapis
                        name: Tapis
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_walle_couloir
                        name: Couloir
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                  - type: custom:button-card
                    template:
                      - base
                      - state_bleu
                      - state_unavailable
                    show_state: false
                    show_last_changed: false
                    label: |
                      [[[ 
                        if (states['input_boolean.vacances'].state == 'off')
                          return "Désactivé"
                        return "Prochain nettoyage : "+states['sensor.aspi_mode_vacances'].state
                      ]]]
                    entity: schedule.mode_absent_calendrier_aspi
                    name: Planning pednant vacances
                  - type: custom:xiaomi-vacuum-map-card
                    entity: vacuum.wall_e
                    map_source:
                      camera: camera.roborock_s6
                    calibration_source:
                      camera: true
                    language: fr
                    debug: false
                    map_modes:
                      - template: vacuum_clean_zone
                      - template: vacuum_goto
                      - template: vacuum_clean_zone_predefined
                        predefined_selections:
                          - zones:
                              - - 25027
                                - 24933
                                - 28549
                                - 28632
                          - zones:
                              - - 28625
                                - 25085
                                - 31969
                                - 28683
                          - zones:
                              - - 31944
                                - 24883
                                - 33895
                                - 28683
                          - zones:
                              - - 23761
                                - 28734
                                - 27308
                                - 31571
                          - zones:
                              - - 28777
                                - 28759
                                - 32603
                                - 30507
                          - zones:
                              - - 32628
                                - 28835
                                - 33768
                                - 30532
                          - zones:
                              - - 27308
                                - 28759
                                - 28802
                                - 33522
                          - zones:
                              - - 28828
                                - 30608
                                - 29740
                                - 33547
                          - zones:
                              - - 23659
                                - 31672
                                - 27282
                                - 35118
                          - zones:
                              - - 30150
                                - 30550
                                - 33050
                                - 34300
                    map_locked: true
                    two_finger_pan: false
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card {
                    box-shadow: none;
                  }
                cards:
                  - type: custom:button-card
                    entity: script.aspi_walle_reset_brosse_principale
                    name: Brosse principale
                    icon: mdi:robot-vacuum-variant
                    template:
                      - carte_badge
                    confirmation:
                      text: '[[[ return `Wall-E Reset de la brosse principale ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_walle_reset_brosse_principale
                  - type: custom:button-card
                    entity: script.aspi_walle_reset_brosse_laterale
                    name: Brosse latérale
                    icon: mdi:broom
                    template:
                      - carte_badge
                    confirmation:
                      text: '[[[ return `Wall-E Reset de la brosse latérale ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_walle_reset_brosse_laterale
                  - type: custom:button-card
                    entity: script.aspi_walle_reset_capteurs
                    icon: mdi:state-machine
                    template:
                      - carte_badge
                    name: Capteurs
                    confirmation:
                      text: '[[[ return `Wall-E Reset des capteurs ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_walle_reset_capteurs
                  - type: custom:button-card
                    entity: script.aspi_walle_reset_filtre
                    name: Filtre
                    icon: mdi:air-filter
                    template:
                      - carte_badge
                    confirmation:
                      text: '[[[ return `Wall-E Reset du filtre ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_walle_reset_filtre
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 380
        cards:
          - type: entities
            entities:
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:xiaomi-vacuum-card
                    entity: vacuum.r2d2
                    image: /local/aspis/r2d22.jpg
                    name: R2D2
                    vendor: xiaomi
                    attributes:
                      main_brush:
                        label: 'Brosse '
                        unit: ' h'
                      side_brush:
                        label: 'Brossette '
                        unit: ' h'
                      filter:
                        label: 'Filtre: '
                      sensor:
                        label: 'Capteurs: '
                    buttons:
                      spot:
                        show: true
                        label: Nettoyage localisé
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card {
                        box-shadow: none;
                        padding: 20px 0px 20px 0px;
                      }
                    cards:
                      - type: custom:button-card
                        entity: script.aspi_r2d2_chambre_tom
                        name: Tom
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_r2d2_chambre_manon_leane
                        name: Manon
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_r2d2_chambre_nina
                        name: Nina
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_r2d2_salle_de_bain
                        name: SdB
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_r2d2_palier
                        name: Palier
                        show_label: false
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                  - type: custom:xiaomi-vacuum-map-card
                    entity: vacuum.r2d2
                    map_source:
                      camera: camera.roborock_s50
                    calibration_source:
                      camera: true
                    language: fr
                    debug: false
                    map_modes:
                      - template: vacuum_clean_zone
                      - template: vacuum_goto
                      - template: vacuum_clean_zone_predefined
                        predefined_selections:
                          - zones:
                              - - 27589
                                - 24459
                                - 30627
                                - 27454
                          - zones:
                              - - 22780
                                - 21316
                                - 26598
                                - 24332
                          - zones:
                              - - 27589
                                - 21505
                                - 31217
                                - 24374
                          - zones:
                              - - 22864
                                - 17730
                                - 31112
                                - 21231
                          - zones:
                              - - 25227
                                - 24501
                                - 27526
                                - 25809
                          - zones:
                              - - 26661
                                - 21442
                                - 27547
                                - 24501
                    map_locked: true
                    two_finger_pan: false
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card {
                    box-shadow: none;
                  }
                cards:
                  - type: custom:button-card
                    entity: script.aspi_r2d2_reset_brosse_principale
                    name: Brosse principale
                    icon: mdi:robot-vacuum-variant
                    template:
                      - carte_badge
                    confirmation:
                      text: '[[[ return `R2D2 Reset de la brosse principale ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_r2d2_reset_brosse_principale
                  - type: custom:button-card
                    entity: script.aspi_r2d2_reset_brosse_laterale
                    name: Brosse latérale
                    icon: mdi:broom
                    template:
                      - carte_badge
                    confirmation:
                      text: '[[[ return `R2D2 Reset de la brosse latérale ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_r2d2_reset_brosse_laterale
                  - type: custom:button-card
                    entity: script.aspi_r2d2_reset_capteurs
                    icon: mdi:state-machine
                    name: Capteurs
                    template:
                      - carte_badge
                    confirmation:
                      text: '[[[ return `R2D2 Reset des capteurs ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_r2d2_reset_capteurs
                  - type: custom:button-card
                    entity: script.aspi_r2d2_reset_filtre
                    name: Filtre
                    icon: mdi:air-filter
                    template:
                      - carte_badge
                    confirmation:
                      text: '[[[ return `R2D2 Reset du filtre ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_r2d2_reset_filtre
  - theme: Backend-selected
    title: Temperature
    path: Temp
    icon: mdi:thermometer
    subview: false
    layout:
      width: 350
      max_cols: 3
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:home-floor-0
                        layout: icon|name
                        name: Rez-de-chaussée
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.temp_sejour
                    variables:
                      var_label: |
                        [[[ 
                          if (states['sensor.hum_sejour'].state == 'unavailable')
                            return "?"
                          return states['sensor.hum_sejour'].state
                        ]]]
                    template:
                      - carte_thermo
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.temp_sejour
                      gauge_hum:
                        card:
                          entity: sensor.hum_sejour
                  - type: custom:button-card
                    entity: sensor.temp_couloir_rdc
                    template:
                      - carte_thermo
                    variables:
                      var_label: |
                        [[[ 
                          if (states['sensor.hum_couloir_rdc'].state == 'unavailable')
                            return "?"
                          return states['sensor.hum_couloir_rdc'].state
                        ]]]
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.temp_couloir_rdc
                      gauge_hum:
                        card:
                          entity: sensor.hum_couloir_rdc
                  - type: custom:button-card
                    entity: sensor.temp_cuisine
                    template:
                      - carte_thermo
                    variables:
                      var_label: |
                        [[[ 
                          if (states['sensor.hum_cuisine'].state == 'unavailable')
                            return "?"
                          return states['sensor.hum_cuisine'].state
                        ]]]
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.temp_cuisine
                      gauge_hum:
                        card:
                          entity: sensor.hum_cuisine
                  - type: custom:button-card
                    entity: sensor.moniteur_qualite_air_temperature
                    name: Air
                    template:
                      - carte_thermo
                    variables:
                      var_label: |
                        [[[ 
                          if (states['sensor.moniteur_qualite_air_humidite'].state == 'unavailable')
                            return "?"
                          return states['sensor.moniteur_qualite_air_humidite'].state
                        ]]]
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.moniteur_qualite_air_temperature
                      gauge_hum:
                        card:
                          entity: sensor.moniteur_qualite_air_humidite
                  - type: custom:button-card
                    entity: sensor.temp_parents
                    name: Parents
                    template:
                      - carte_thermo
                    variables:
                      var_label: |
                        [[[ 
                          if (states['sensor.hum_parents'].state == 'unavailable')
                            return "?"
                          return states['sensor.hum_parents'].state
                        ]]]
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.temp_parents
                      gauge_hum:
                        card:
                          entity: sensor.hum_parents
                  - type: custom:button-card
                    entity: sensor.sonde_garage_temperature
                    name: Garage
                    template:
                      - carte_thermo
                    variables:
                      var_label: |
                        [[[ 
                          if (states['sensor.sonde_garage_humidite'].state == 'unavailable')
                            return "?"
                          return states['sensor.sonde_garage_humidite'].state
                        ]]]
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.sonde_garage_temperature
                      gauge_hum:
                        card:
                          entity: sensor.sonde_garage_humidite
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:home-floor-1
                        layout: icon|name
                        name: Etage
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.temp_tom
                    name: Tom
                    template:
                      - carte_thermo
                    variables:
                      var_label: |
                        [[[ 
                          if (states['sensor.hum_tom'].state == 'unavailable')
                            return "?"
                          return states['sensor.hum_tom'].state
                        ]]]
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.temp_tom
                      gauge_hum:
                        card:
                          entity: sensor.hum_tom
                  - type: custom:button-card
                    entity: sensor.temp_manon
                    name: Filles
                    template:
                      - carte_thermo
                    variables:
                      var_label: |
                        [[[ 
                          if (states['sensor.hum_manon'].state == 'unavailable')
                            return "?"
                          return states['sensor.hum_manon'].state
                        ]]]
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.temp_manon
                      gauge_hum:
                        card:
                          entity: sensor.hum_manon
                  - type: custom:button-card
                    entity: sensor.temp_nina
                    name: Nina
                    template:
                      - carte_thermo
                    variables:
                      var_label: |
                        [[[ 
                          if (states['sensor.hum_nina'].state == 'unavailable')
                            return "?"
                          return states['sensor.hum_nina'].state
                        ]]]
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.temp_nina
                      gauge_hum:
                        card:
                          entity: sensor.hum_nina
                  - type: custom:button-card
                    entity: sensor.temp_salle_de_bain
                    name: S. de bain
                    template:
                      - carte_thermo
                    variables:
                      var_label: |
                        [[[ 
                          if (states['sensor.hum_salle_de_bain'].state == 'unavailable')
                            return "?"
                          return states['sensor.hum_salle_de_bain'].state
                        ]]]
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.temp_salle_de_bain
                      gauge_hum:
                        card:
                          entity: sensor.hum_salle_de_bain
  - theme: Backend-selected
    subview: false
    title: Conso Enedis et GRDF
    path: Conso
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:flash
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: custom:vertical-stack-in-card
            style: |
              ha-card { 
                padding: 5px;
                border-color: rgba(12, 12, 14, 0.2);
                border-style: outset;
                border-width: 1px;
                box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3);
              }
            cards:
              - type: custom:button-card
                entity: sensor.myenedis_09397539765420
                name: Électricité
                icon: mdi:flash
                template:
                  - base
                show_state: false
                label: |
                  [[[
                    if (states["sensor.electricite_conso_veille"].state == "-1.0" ) 
                      return 'En attente'
                    return states["sensor.electricite_cout_jour_avec_abo"].state +" € abo inclus"
                  ]]]
                styles:
                  img_cell:
                    - background-color: |
                        [[[
                          if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'var(--pastille_off)'
                          if (states["sensor.electricite_cout_jour_avec_abo"].state < 3) return 'var(--custom-img-cell-color-blue)';
                          if (states["sensor.electricite_cout_jour_avec_abo"].state >= 3 && states["sensor.electricite_cout_jour_avec_abo"].state < 4) return 'var(--custom-img-cell-color-red)';
                          else return 'var(--custom-img-cell-color-red)';
                        ]]]
                  icon:
                    - color: |
                        [[[
                          if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'var(--icon_off)'
                          if (states["sensor.electricite_cout_jour_avec_abo"].state < 3) return 'var(--custom-icon-color-blue)';
                          if (states["sensor.electricite_cout_jour_avec_abo"].state >= 3 && states["sensor.electricite_cout_jour_avec_abo"].state < 4) return 'var(--custom-icon-color-red)';
                          else return 'var(--custom-icon-color-red)';
                        ]]]
                  label:
                    - color: |
                        [[[
                          if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'red'
                          else return 'darkgrey'
                        ]]]
                state:
                  - value: unavailable
                    styles:
                      label:
                        - color: red
                      state:
                        - color: red
              - type: custom:content-card-linky
                entity: sensor.myenedis_09397539765420
                titleName: Électricité (hors abo)
                nbJoursAffichage: '7'
                showDayName: short
                showInTableUnit: false
                showPeakOffPeak: false
                showHistory: true
                showDayPrice: true
                showDayPriceHCHP: false
                showDayHCHP: false
                showIcon: false
                kWhPrice: false
                showtitle: true
                showEcoWatt: true
                showTitle: false
                showPrice: true
                showTitreLigne: true
                showError: true
                showYesterdayRatio: true
                showWeekRatio: false
                showCurrentMonthRatio: false
                style: |
                  ha-card {
                    color: lightgrey ;
                    font-size: 12px;
                    font-family: Avenir;
              - type: custom:apexcharts-card
                graph_span: 7d
                span:
                  offset: '-1day'
                experimental:
                  color_threshold: true
                apex_config:
                  legend:
                    show: false
                  stroke:
                    width: 1
                  xaxis:
                    labels:
                      hideOverlappingLabels: true
                      showDuplicatges: true
                      show: true
                  dataLabels:
                    offsetY: -5
                    background:
                      enabled: true
                    style:
                      colors:
                        - rgba(0,0,0,0.4)
                  plotOptions:
                    bar:
                      borderRadius: 5
                      dataLabels:
                        position: top
                header:
                  show: true
                  title: Électricité
                  show_states: true
                  standard_format: false
                  colorize_states: true
                yaxis:
                  - id: first
                    decimals: 0
                    apex_config:
                      tickAmount: 4
                    min: ~0
                  - id: second
                    opposite: true
                    decimals: 0
                    apex_config:
                      tickAmount: 4
                    min: ~0
                series:
                  - entity: sensor.electricite_conso_veille
                    yaxis_id: first
                    type: column
                    offset: +1day
                    show:
                      name_in_header: false
                      datalabels: true
                      legend_value: false
                      header_color_threshold: true
                    group_by:
                      func: max
                      duration: 1d
                    opacity: 0.8
                    float_precision: 2
                    color_threshold:
                      - value: 0
                        color: rgb(176, 196, 222)
                      - value: 5
                        color: rgb(70, 130, 180)
                      - value: 10
                        color: orange
                      - value: 15
                        color: rgb(180, 70, 70)
                      - value: 20
                        color: firebrick
                  - entity: sensor.electricite_cout_jour_avec_abo
                    yaxis_id: second
                    offset: +1day
                    show:
                      name_in_header: false
                      datalabels: false
                      legend_value: false
                      header_color_threshold: true
                    unit: €
                    type: area
                    curve: smooth
                    fill_raw: last
                    color: rgb(0,191,255)
                    opacity: 0.2
                    float_precision: 2
                    name: Cout
                    group_by:
                      func: max
                      duration: 1d
                style: |
                  ha-card {
                    font-family: Avenir;
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: custom:vertical-stack-in-card
            style: |
              ha-card { 
                padding: 5px;
                border-color: rgba(12, 12, 14, 0.2);
                border-style: outset;
                border-width: 1px;
                box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3);
              }
            cards:
              - type: custom:button-card
                entity: sensor.grdf_consommation_gaz
                name: Gaz
                icon: mdi:gas-burner
                template:
                  - base
                show_state: false
                label: |
                  [[[
                    if (states["sensor.grdf_consommation_gaz"].state == "unavailable" ) 
                      return 'En attente'
                    return states["sensor.gaz_cout_jour_avec_abo"].state +" € abo inclus"
                  ]]]
                styles:
                  img_cell:
                    - background-color: |
                        [[[
                          if (entity.state == "unavailable") return 'var(--pastille_off)'
                          if (entity.state < 50) return 'var(--custom-img-cell-color-blue)';
                          if (entity.state >= 50 ) return 'var(--custom-img-cell-color-red)';
                          else return 'var(--custom-img-cell-color-red)'; 
                        ]]]
                  icon:
                    - color: |
                        [[[
                          if (entity.state == "unavailable") return 'var(--icon_off)'
                          if (entity.state < 50) return 'var(--custom-icon-color-blue)';
                          if (entity.state >= 50) return 'var(--custom-icon-color-red)';
                          else return 'var(--custom-icon-color-red)';
                        ]]]
                state:
                  - value: unavailable
                    styles:
                      label:
                        - color: red
                      state:
                        - color: red
              - type: custom:gazpar-card
                entity: sensor.gazpar
                title: GAZ (hors abo)
                showTitle: false
                showIcon: false
                showCost: true
                showDailyHistory: true
                showMonthlyHistory: false
                showHistoryHeader: false
                showEnergyHistory: true
                showVolumeHistory: false
                showCostHistory: true
                showTrendRatioHistory: true
                showMonthlyCostHistoryChart: false
                showMonthlyEnergyHistoryChart: false
                showYearlyEnergyHistoryChart: false
                showYearlyCostHistoryChart: false
                showError: true
                pricePerKWh: '0.0580'
                showMainBar: true
                showVersion: true
                showWeeklyCostHistoryChart: false
                showDailyCostHistoryChart: false
                showWeeklyEnergyHistoryChart: false
                showDailyEnergyHistoryChart: false
                style: |
                  ha-card {
                    color: lightgrey ;
                    font-family: Avenir;
                    font-size: 12px;
                  }
              - type: custom:apexcharts-card
                graph_span: 7d
                span:
                  offset: '-2day'
                experimental:
                  color_threshold: true
                apex_config:
                  legend:
                    show: false
                  stroke:
                    width: 1
                  xaxis:
                    labels:
                      hideOverlappingLabels: true
                      showDuplicatges: true
                      show: true
                  dataLabels:
                    offsetY: -5
                    background:
                      enabled: true
                    style:
                      colors:
                        - rgba(0,0,0,0.4)
                  plotOptions:
                    bar:
                      borderRadius: 5
                      dataLabels:
                        position: top
                header:
                  show: true
                  title: Gaz
                  show_states: true
                  standard_format: false
                  colorize_states: true
                yaxis:
                  - id: first
                    decimals: 0
                    apex_config:
                      tickAmount: 4
                    min: ~0
                  - id: second
                    opposite: true
                    decimals: 0
                    apex_config:
                      tickAmount: 4
                    min: ~0
                series:
                  - entity: sensor.grdf_consommation_gaz
                    yaxis_id: first
                    type: column
                    offset: +2day
                    float_precision: 2
                    show:
                      name_in_header: false
                      datalabels: true
                      legend_value: false
                      header_color_threshold: true
                    group_by:
                      func: max
                      duration: 1d
                    opacity: 0.8
                    color_threshold:
                      - value: 0
                        color: rgb(176, 196, 222)
                      - value: 20
                        color: rgb(70, 130, 180)
                      - value: 50
                        color: orange
                      - value: 80
                        color: rgb(180, 70, 70)
                      - value: 100
                        color: firebrick
                  - entity: sensor.gaz_cout_jour_avec_abo
                    yaxis_id: second
                    offset: +2day
                    show:
                      name_in_header: false
                      datalabels: false
                      legend_value: false
                      header_color_threshold: true
                    unit: €
                    type: area
                    curve: smooth
                    fill_raw: last
                    color: rgb(0,191,255)
                    opacity: 0.2
                    float_precision: 2
                    name: Cout
                    group_by:
                      func: max
                      duration: 1d
                style: |
                  ha-card {
                    font-size: 95%;
                    font-family: Avenir;
                  }
          - type: custom:button-card
            name: Afficher les détails
            template:
              - base
            styles:
              name:
                - justify-self: center
              card:
                - height: 65px
              custom_fields:
                bouton:
                  - top: 35px
            custom_fields:
              bouton:
                card:
                  type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: input_boolean.gaz_detail_kwh
                      template:
                        - carte_bouton
                        - carte_bouton_state
                      tap_action:
                        action: call-service
                        service: input_boolean.toggle
                        service_data:
                          entity_id: input_boolean.gaz_detail_kwh
                    - type: custom:button-card
                      entity: input_boolean.gaz_detail_euro
                      template:
                        - carte_bouton
                        - carte_bouton_state
                      tap_action:
                        action: call-service
                        service: input_boolean.toggle
                        service_data:
                          entity_id: input_boolean.gaz_detail_euro
          - type: conditional
            conditions:
              - entity: input_boolean.gaz_detail_kwh
                state: 'on'
            card:
              type: custom:gazpar-card
              entity: sensor.gazpar
              title: GAZ (hors abo)
              showTitle: false
              showIcon: false
              showCost: false
              showDailyHistory: false
              showMonthlyHistory: false
              showHistoryHeader: false
              showEnergyHistory: false
              showVolumeHistory: false
              showCostHistory: false
              showTrendRatioHistory: false
              showMonthlyCostHistoryChart: false
              showMonthlyEnergyHistoryChart: true
              showYearlyEnergyHistoryChart: true
              showYearlyCostHistoryChart: false
              showError: false
              pricePerKWh: '0.0580'
              showMainBar: false
              showVersion: false
              showWeeklyCostHistoryChart: false
              showDailyCostHistoryChart: false
              showWeeklyEnergyHistoryChart: true
              showDailyEnergyHistoryChart: true
              style: |
                ha-card {
                  color: lightgrey ;
                  font-family: Avenir;
                }
          - type: conditional
            conditions:
              - entity: input_boolean.gaz_detail_euro
                state: 'on'
            card:
              type: custom:gazpar-card
              entity: sensor.gazpar
              title: GAZ (hors abo)
              showTitle: false
              showIcon: false
              showCost: false
              showDailyHistory: false
              showMonthlyHistory: false
              showHistoryHeader: false
              showEnergyHistory: false
              showVolumeHistory: false
              showCostHistory: false
              showTrendRatioHistory: false
              showMonthlyCostHistoryChart: true
              showMonthlyEnergyHistoryChart: false
              showYearlyEnergyHistoryChart: false
              showYearlyCostHistoryChart: true
              showError: false
              pricePerKWh: '0.0580'
              showMainBar: false
              showVersion: false
              showWeeklyCostHistoryChart: true
              showDailyCostHistoryChart: true
              showWeeklyEnergyHistoryChart: false
              showDailyEnergyHistoryChart: false
              style: |
                ha-card {
                  color: lightgrey ;
                  font-family: Avenir;
                }
  - theme: Backend-selected
    title: Batteries
    path: batteries
    icon: mdi:battery-60
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:cellphone-charging
                        layout: icon|name
                        name: Tel, tablette et ordi
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        padding: 5px;
                      }
                    cards:
                      - type: grid
                        square: false
                        columns: 5
                        cards:
                          - type: custom:button-card
                            entity: sensor.iphone_aurel_battery_level
                            name: Aurel
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                          - type: custom:button-card
                            entity: sensor.ipad_aurel_battery_level
                            name: iPad
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                          - type: custom:button-card
                            entity: sensor.macbook_aurel_internal_battery_level
                            name: Mac Aurel
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                          - type: custom:button-card
                            entity: sensor.alex_iphone_battery_level_ha
                            name: Alex
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                          - type: custom:button-card
                            entity: sensor.macbook_alex_internal_battery_level
                            name: Mac Alex
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:home-battery
                        layout: icon|name
                        name: Appareils
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - type: grid
                        square: false
                        columns: 3
                        cards:
                          - type: custom:button-card
                            entity: sensor.serrure_entree_batterie
                            name: Serrure entrée
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                          - type: custom:button-card
                            entity: sensor.lock_2c8e_battery
                            name: Serrure garage
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                          - type: custom:button-card
                            entity: sensor.aarlo_battery_level_sonnette
                            name: Sonnette
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                          - type: custom:button-card
                            entity: sensor.moniteur_qualite_air_batterie
                            name: Air
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                          - type: custom:button-card
                            entity: sensor.cube_aqara_batterie
                            name: Cube
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                          - type: custom:button-card
                            entity: sensor.vibrations_batterie
                            name: Vibrations
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:thermometer-lines
                        layout: icon|name
                        name: Thermomètres
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - type: grid
                        square: false
                        columns: 4
                        cards:
                          - type: custom:button-card
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.sejour_thermo_batterie
                            name: Séjour
                            show_label: false
                          - type: custom:button-card
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.couloir_thermo_batterie
                            name: Couloir
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.parents_thermo_batterie
                            name: Parents
                          - type: custom:button-card
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.cuisine_thermo_batterie
                            name: Cuisine
                            show_label: false
                          - type: custom:button-card
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.temp_sdb_battery_level
                            name: SDB
                            show_label: false
                          - type: custom:button-card
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.tom_thermo_batterie
                            name: Tom
                            show_label: false
                          - type: custom:button-card
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.manon_thermo_batterie
                            name: Manon
                            show_label: false
                          - type: custom:button-card
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.nina_thermo_batterie
                            name: Nina
                            show_label: false
                          - type: custom:button-card
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.sonde_garage_batterie
                            name: Garage
                            show_label: false
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:run-fast
                        layout: icon|name
                        name: Détecteurs mouvements
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        padding: 5px;
                      }
                    cards:
                      - type: grid
                        square: false
                        columns: 4
                        cards:
                          - type: custom:button-card
                            entity: sensor.mouv_salon_batterie
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            name: Salon
                          - type: custom:button-card
                            entity: sensor.mouv_salle_a_manger_batterie
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            name: S. à M
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.mouv_couloir_batterie
                            name: Couloir
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.mouv_garage_batterie
                            name: Garage
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.mouv_salle_d_eau_batterie
                            name: Lavabo
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.mouv_escalier_batterie
                            name: Escalier
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.mouv_palier_batterie
                            name: Palier
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.mouv_tom_batterie
                            name: Tom
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.mouv_manon_batterie
                            name: Manon
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.mouv_leane_batterie
                            name: Léane
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.mouv_nina_batterie
                            name: Nina
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:door-open
                    layout: icon|name
                    name: Capteurs portes & fenêtres
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 5px;
                  }
                cards:
                  - type: grid
                    square: false
                    columns: 4
                    cards:
                      - type: custom:button-card
                        entity: sensor.porte_entree_batterie
                        name: Entrée
                        show_label: false
                        template:
                          - carte_badge
                          - state_batterie
                      - type: custom:button-card
                        entity: sensor.porte_salle_a_manger_batterie
                        name: S. à M
                        show_label: false
                        template:
                          - carte_badge
                          - state_batterie
                      - type: custom:button-card
                        entity: sensor.porte_cagibi_batterie
                        name: Cagibi
                        show_label: false
                        template:
                          - carte_badge
                          - state_batterie
                      - type: custom:button-card
                        entity: sensor.porte_garage_batterie
                        name: Garage
                        show_label: false
                        template:
                          - carte_badge
                          - state_batterie
                      - type: custom:button-card
                        entity: sensor.porte_cuisine_batterie
                        name: Cuisine
                        show_label: false
                        template:
                          - carte_badge
                          - state_batterie
                      - type: custom:button-card
                        entity: sensor.porte_chambre_parents_batterie
                        name: Parents
                        show_label: false
                        template:
                          - carte_badge
                          - state_batterie
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:light-switch
                        layout: icon|name
                        name: Interrupteurs
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        padding: 5px;
                      }
                    cards:
                      - type: grid
                        square: false
                        columns: 4
                        cards:
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_ambiances_sejour_batterie
                            name: Ambiances
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_salon_batterie
                            name: Salon
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_salle_a_manger_batterie
                            name: S. à M
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_entree_batterie
                            name: Entrée
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_couloir_batterie
                            name: Couloir
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_salle_d_eau_batterie
                            name: Lavabo
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_chambre_parents_batterie
                            name: Parents
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_palier_batterie
                            name: Palier
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_chambre_tom_batterie
                            name: Tom
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_chevet_tom_batterie
                            name: Tom chevet
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_chambre_nina_batterie
                            name: Nina
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_chevet_nina_batterie
                            name: Nina chevet
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_grande_chambre_batterie
                            name: Filles
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_chevet_manon_batterie
                            name: Manon chevet
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.inter_chevet_leane_batterie
                            name: Léane chevet
                          - type: custom:button-card
                            show_label: false
                            template:
                              - carte_badge
                              - state_batterie
                            entity: sensor.shellybutton1_98cdac2d5312_battery
                            name: Shelly
  - theme: Backend-selected
    title: Alarmes
    path: Alarmes
    icon: mdi:shield-lock-open-outline
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: true
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:shield-home
                    layout: icon|name
                    name: Sécurité
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 5px;
                  }
                cards:
                  - type: custom:button-card
                    entity: alarm_control_panel.alarme
                    name: Maison
                    icon: |
                      [[[
                        if (entity.state == "disarmed" )
                          return "mdi:shield-off";
                        if (entity.state == "armed_away" )
                          return "mdi:shield-lock";
                        if (entity.state == "armed_home" )
                          return "mdi:shield-home";
                        if (entity.state == "armed_night" )
                          return "mdi:shield-moon";
                        if (entity.state == "arming" )
                          return "mdi:shield-half-full";
                        if (entity.state == "triggered" )
                          return "mdi:shield-alert";
                        return "mdi:shield-off";
                      ]]]
                    template:
                      - carte_badge
                      - state_rouge
                      - style_off
                    show_label: true
                    show_name: true
                  - type: custom:button-card
                    entity: alarm_control_panel.aarlo_sonnette
                    name: Sonnette
                    icon: phu:arlo-video-doorbell
                    template:
                      - carte_badge
                      - state_rouge
                      - style_off
                    show_label: true
                    show_name: true
                  - type: custom:button-card
                    entity: sensor.compteur_home
                    icon: mdi:face-man
                    name: Précense
                    template:
                      - carte_badge
                      - state_rouge
                      - style_off
                    show_label: true
                    show_name: false
                    show_state: true
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Personnes
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                label: |
                  [[[ return "Appareils" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 5px;
                  }
                cards:
                  - type: grid
                    square: false
                    columns: 3
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouvements
                        name: Mouvements
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/porte_mouv_serrure
                      - type: custom:button-card
                        entity: binary_sensor.portes
                        name: Portes
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/porte_mouv_serrure
                      - type: custom:button-card
                        entity: lock.serrure_entree
                        name: >
                          [[[ return "Entrée" + "
                          "+states['sensor.serrure_entree_batterie'].state+"%"
                          ]]]
                        template:
                          - carte_badge
                          - state_bleu_rouge
                          - style_off
                        show_label: true
                        show_name: true
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/porte_mouv_serrure
                        double_tap_action:
                          action: call-service
                          service: script.entree_serrure_toggle
                          service_data: null
                      - type: custom:button-card
                        entity: lock.garage
                        name: >
                          [[[ return "Garage" + "
                          "+states['sensor.lock_2c8e_battery'].state+"%" ]]]
                        template:
                          - carte_badge
                          - state_bleu_rouge
                          - style_off
                        show_label: true
                        show_name: true
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/porte_mouv_serrure
                        double_tap_action:
                          action: call-service
                          service: script.garage_serrure_toggle
                          service_data: null
                      - type: custom:button-card
                        entity: siren.sirene_heiman
                        name: Salon
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: siren.frient
                        name: Garage
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:video
                    layout: icon|name
                    name: Direct
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - show_state: false
                    show_name: false
                    camera_view: auto
                    type: picture-entity
                    entity: camera.camera_entree
                    style: |
                      ha-card > div.box {
                        background: none;
                      }
                      ha-card { 
                        margin: 5px 0px 5px 0px;
                        border-radius: 15px !important;
                      }
                  - type: picture-glance
                    title: Salon
                    camera_image: camera.camera_sejour
                    camera_view: live
                    aspect_ratio: 60%
                    entities:
                      - entity: binary_sensor.camera_sejour_mouv
                      - entity: alarm_control_panel.camera_sejour_security_system
                    style: |
                      ha-card > div.box {
                        background: none;
                        --mdc-icon-size: 20px;
                        font-size: 0px;
                        width: 40%;
                      }
                      ha-card { 
                        margin: 5px 0px 5px 0px;
                        border-radius: 15px !important;
                      }
                  - type: picture-glance
                    title: Garage
                    camera_image: camera.camera_g2hpro
                    camera_view: live
                    aspect_ratio: 60%
                    entities:
                      - entity: binary_sensor.mouv_camera_g2hpro
                      - entity: alarm_control_panel.camera_g2hpro
                    style: |
                      ha-card > div.box {
                        font-family: Avenir;
                        background: none;
                        --mdc-icon-size: 20px;
                        font-size: 0px;
                        width: 40%;
                      }
                      ha-card { 
                        margin: 5px 0px 5px 0px;
                        border-radius: 15px !important;
                      }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:filmstrip
                    layout: icon|name
                    name: Enregistrements
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                    tap_action:
                      action: navigate
                      navigation_path: /media-browser
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Alarme activée" ]]]
              - type: custom:vertical-stack-in-card
                cards:
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - show_state: false
                        show_name: false
                        camera_view: live
                        type: picture-entity
                        entity: camera.entreealarme_verifiee
                        style: |
                          ha-card { 
                            border-radius: 15px !important;
                          }
                          ha-card > div.box {
                            display: none;
                          }
                      - show_state: false
                        show_name: false
                        camera_view: live
                        type: picture-entity
                        entity: camera.sejouralarme_verifiee
                        style: |
                          ha-card { 
                            border-radius: 15px !important;
                          }
                          ha-card > div.box {
                            display: none;
                          }
                      - type: custom:button-card
                        entity: input_text.horodatage_cam_entree_alarme
                        template:
                          - horodatage
                      - type: custom:button-card
                        entity: input_text.horodatage_cam_sejour_alarme
                        template:
                          - horodatage
                      - show_state: false
                        show_name: false
                        camera_view: live
                        type: picture-entity
                        entity: camera.sonnettealarme_detection
                        style: |
                          ha-card { 
                            margin-bottom: 20px;
                            border-radius: 15px !important;
                          }
                          ha-card > div.box {
                            display: none;
                          }
                      - show_state: false
                        show_name: false
                        camera_view: live
                        type: picture-entity
                        entity: camera.garagealarme_verifiee
                        style: |
                          ha-card { 
                            border-radius: 15px !important;
                          }
                          ha-card > div.box {
                            display: none;
                          }
                      - type: custom:button-card
                        entity: input_text.horodatage_cam_sonnette_alarme
                        template:
                          - horodatage
                      - type: custom:button-card
                        entity: input_text.horodatage_cam_garage_alarme
                        template:
                          - horodatage
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Alarme désactivée" ]]]
              - type: custom:vertical-stack-in-card
                cards:
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - show_state: false
                        show_name: false
                        camera_view: live
                        type: picture-entity
                        entity: camera.entree_verifiee
                        style: |
                          ha-card { 
                            border-radius: 15px !important;
                          }
                          ha-card > div.box {
                            display: none;
                          }
                      - show_state: false
                        show_name: false
                        camera_view: live
                        type: picture-entity
                        entity: camera.sejour_verifiee
                        style: |
                          ha-card { 
                            border-radius: 15px !important;
                          }
                          ha-card > div.box {
                            display: none;
                          }
                      - type: custom:button-card
                        entity: input_text.horodatage_cam_entree
                        template:
                          - horodatage
                      - type: custom:button-card
                        entity: input_text.horodatage_cam_sejour
                        template:
                          - horodatage
                      - show_state: false
                        show_name: false
                        camera_view: live
                        type: picture-entity
                        entity: camera.sonnette_detection
                        style: |
                          ha-card { 
                            margin-top: 0px;
                            margin-bottom: 20px;
                            border-radius: 15px !important;
                          }
                          ha-card > div.box {
                            display: none;
                          }
                      - show_state: false
                        show_name: false
                        camera_view: live
                        type: picture-entity
                        entity: camera.garage_verifiee
                        style: |
                          ha-card { 
                            border-radius: 15px !important;
                          }
                          ha-card > div.box {
                            display: none;
                          }
                      - type: custom:button-card
                        entity: input_text.horodatage_cam_sonnette
                        template:
                          - horodatage
                      - type: custom:button-card
                        entity: input_text.horodatage_cam_garage
                        template:
                          - horodatage
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:doorbell-video
                    layout: icon|name
                    name: Sonnette
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - entity: camera.aarlo_sonnette
                title: Sonnette
                hide:
                  - date
                global: small
                image_click: play
                image_view: arlo-stream
                show:
                  - motion
                  - sound
                  - image_date
                  - signal_strength
                  - captured_today
                  - image_date
                  - on_off
                  - snapshot
                  - battery_level
                top_date: true
                top_status: false
                top_title: false
                type: custom:aarlo-glance
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: grid
                    square: false
                    columns: 3
                    cards:
                      - type: custom:button-card
                        template:
                          - carte_badge
                          - state_batterie
                        show_label: false
                        entity: sensor.aarlo_battery_level_sonnette
                        name: Batterie
                      - type: custom:button-card
                        template:
                          - carte_badge
                        entity: sensor.aarlo_signal_strength_sonnette
                        name: Signal
                        show_state: true
                        show_label: false
                        state:
                          - value: 3
                            operator: <
                            icon: mdi:signal-cellular-outline
                            styles:
                              card:
                                - background-color: var(--custom-card-color-red)
                              img_cell:
                                - background-color: var(--custom-img-cell-color-red)
                              icon:
                                - color: var(--custom-icon-color-red)
                      - type: custom:button-card
                        template:
                          - carte_badge
                          - state_rouge
                        entity: binary_sensor.aarlo_motion_sonnette
                        name: Mouvement
                      - type: custom:button-card
                        template:
                          - carte_badge
                          - state_bleu
                        show_state: true
                        show_label: false
                        entity: sensor.aarlo_last_sonnette
                        name: Dernier
                      - type: custom:button-card
                        template:
                          - carte_badge
                          - state_bleu
                        entity: binary_sensor.aarlo_ding_sonnette
                        name: Ding !
                      - type: custom:button-card
                        template:
                          - carte_badge
                          - state_bleu
                        entity: switch.aarlo_snapshot_sonnette
                        name: Capture
                      - type: custom:button-card
                        template:
                          - carte_badge
                          - state_bleu
                        show_label: false
                        show_state: true
                        entity: sensor.aarlo_captured_today_sonnette
                        name: Aujourd'hui
                      - type: custom:button-card
                        template:
                          - carte_badge
                          - state_bleu
                        entity: camera.aarlo_sonnette
                        name: Caméra
                      - type: custom:button-card
                        template:
                          - carte_badge
                          - state_bleu
                        entity: switch.aarlo_siren_sonnette
                        name: Sirène
                      - type: custom:button-card
                        template:
                          - carte_badge
                          - state_bleu_rouge
                        show_label: false
                        show_state: true
                        entity: binary_sensor.aarlo_connected_sonnette
                        name: Statut
  - theme: Backend-selected
    subview: true
    icon: mdi:sofa
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    title: Sejour
    path: Séjour
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:sofa
                        layout: icon|name
                        name: Séjour
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Capteurs" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        padding: 4px;
                        border-color: rgba(12, 12, 14, 0.2);
                        border-style: outset;
                        border-width: 1px;
                        box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3);
                      }
                    cards:
                      - type: custom:button-card
                        entity: sensor.temp_sejour
                        name: Température
                        template:
                          - carte_badge
                          - state_temp
                        label: |
                          [[[
                            return entity.state+"°"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: sensor.hum_sejour
                        name: Humidité
                        template:
                          - carte_badge
                          - state_humidite
                        label: |
                          [[[
                            return entity.state+"%"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: sensor.plante_lum_dracaena
                        name: Lum salon
                        template:
                          - carte_badge
                          - state_luminosite
                        label: |
                          [[[
                            return entity.state+"lx"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: sensor.plante_lum_pied_elephant
                        name: Lum SàM
                        template:
                          - carte_badge
                          - state_luminosite
                        label: |
                          [[[
                            return entity.state+"lx"
                          ]]]
                        tap_action:
                          action: more-info
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        padding: 4px;
                        border-color: rgba(12, 12, 14, 0.2);
                        border-style: outset;
                        border-width: 1px;
                        box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3);
                      }
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.porte_salle_a_manger
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_salon
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_salle_a_manger
                        name: SàM
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.camera_sejour_mouv
                        name: Caméra
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Scènes" ]]]
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card {
                        box-shadow: none;
                        border-color: none;
                        border-style: none;
                        background-color: transparent;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        horizontal: true
                        cards:
                          - type: custom:button-card
                            entity: scene.ambiance_normale
                            template:
                              - carte_scene
                            styles:
                              icon:
                                - color: |
                                    [[[
                                       if( states['sensor.ambiances_sejour'].state == "Normale")
                                         return "var(--custom-icon-color-gold)"
                                       return "var(--custom-icon-color-gold)"
                                    ]]]
                              img_cell:
                                - background-color: |
                                    [[[
                                       if( states['sensor.ambiances_sejour'].state == "Normale")
                                         return "var(--custom-img-cell-color-gold)"
                                       return "var(--pastille_off)"
                                    ]]]         
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.ambiance_normale
                          - type: custom:button-card
                            entity: scene.zen
                            name: Doux
                            template:
                              - carte_scene
                            styles:
                              icon:
                                - color: var(--custom-icon-color-blue)
                              img_cell:
                                - background-color: |
                                    [[[
                                       if( states['sensor.ambiances_sejour'].state == "Doux")
                                         return "var(--custom-img-cell-color-blue)"
                                       return "var(--pastille_off)"
                                    ]]] 
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.zen
                          - type: custom:button-card
                            entity: scene.repas_devant_tv
                            name: Repas
                            template:
                              - carte_scene
                            styles:
                              icon:
                                - color: var(--custom-icon-color-orange)
                              img_cell:
                                - background-color: |
                                    [[[
                                       if( states['sensor.ambiances_sejour'].state == "Repas TV")
                                         return "var(--custom-img-cell-color-orange)"
                                       return "var(--pastille_off)"
                                    ]]] 
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.repas_devant_tv
                          - type: custom:button-card
                            entity: scene.tv
                            name: TV
                            icon: mdi:television-play
                            template:
                              - carte_scene
                            styles:
                              icon:
                                - color: var(--custom-icon-color-red)
                              img_cell:
                                - background-color: |
                                    [[[
                                       if( states['sensor.ambiances_sejour'].state == "TV")
                                         return "var(--custom-img-cell-color-red)"
                                       return "var(--pastille_off)"
                                    ]]] 
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.tv
                          - type: custom:button-card
                            entity: light.sejour
                            name: 'OFF'
                            icon: mdi:lightbulb-off
                            template:
                              - carte_scene
                            tap_action:
                              action: call-service
                              service: light.turn_off
                              service_data:
                                entity_id: light.sejour
                          - type: custom:button-card
                            entity: group.scenes_sejour
                            name: Autres
                            icon: mdi:plus
                            template:
                              - carte_scene
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Lampes" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card {
                        box-shadow: none;
                        border-color: none;
                        border-style: none;
                        background-color: transparent;
                      }
                    cards:
                      - type: grid
                        square: false
                        columns: 4
                        cards:
                          - type: custom:button-card
                            entity: light.lampe_de_bureau
                            name: Bureau
                            template:
                              - carte_lumiere
                          - type: custom:button-card
                            entity: light.bandeau_led
                            name: Meuble TV
                            template:
                              - carte_lumiere
                          - type: custom:button-card
                            entity: switch.lampe_tv_salon
                            name: Lampe TV
                            template:
                              - carte_lumiere
                          - type: custom:button-card
                            entity: light.lampe_canape
                            name: Canapé
                            template:
                              - carte_lumiere
                          - type: custom:button-card
                            entity: light.lustre_salon
                            name: Lustre salon
                            template:
                              - carte_lumiere
                          - type: custom:button-card
                            entity: light.lustre_salle_a_manger
                            name: Lustre SaM
                            template:
                              - carte_lumiere
                          - type: custom:button-card
                            entity: light.buffet
                            name: Buffet
                            template:
                              - carte_lumiere
                          - type: custom:button-card
                            entity: light.lampadaire
                            name: Lampadaire
                            template:
                              - carte_lumiere
                  - type: custom:light-entity-card
                    entity: light.sejour
                    shorten_cards: false
                    consolidate_entities: true
                    child_card: true
                    hide_header: true
                    header: Toutes les lampes
                    color_wheel: true
                    persist_features: true
                    brightness: true
                    color_temp: true
                    white_value: false
                    color_picker: false
                    smooth_color_wheel: true
                    speed: false
                    intensity: false
                    force_features: false
                    show_slider_percent: true
                    full_width_sliders: false
                    brightness_icon: weather-sunny
                    white_icon: file-word-box
                    temperature_icon: thermometer
                    speed_icon: speedometer
                    intensity_icon: transit-connection-horizontal
                    effects_list: false
                    style: >
                      ha-card {
                        margin: 25px 2px !important;
                      } ha-card > div.light-entity-card__header >
                      div.light-entity-card__title {
                        font-size: 14px !important;
                        font-weight: 500;
                      }
                  - type: custom:rgb-light-card
                    entity: light.sejour
                    justify: around
                    size: 20
                    colors:
                      - color_temp: 153
                        brightness: 255
                        icon_color: white
                      - color_temp: 357
                        brightness: 255
                      - color_temp: 451
                        brightness: 255
                      - rgb_color:
                          - 255
                          - 170
                          - 0
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(255,170,0),
                          rgb(255,225,165))
                      - rgb_color:
                          - 255
                          - 0
                          - 0
                        brightness: 255
                        icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                      - rgb_color:
                          - 244
                          - 38
                          - 255
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(244,38,255),
                          rgb(255,138,255))
                      - rgb_color:
                          - 0
                          - 222
                          - 255
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(0,222,255),
                          rgb(140,240,255))
                      - rgb_color:
                          - 0
                          - 0
                          - 255
                        brightness: 255
                        icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                    style: |
                      * {
                        margin-bottom: 6px !important;
                      }
                state_color: false
                show_header_toggle: false
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "TV" ]]]
              - type: custom:button-card
                entity: media_player.tv_salon
                name: TV Salon
                variables:
                  var_source: |
                    [[[ 
                      return states['sensor.tv_salon_vol'].state+ "% - "+states['sensor.tv_salon_source'].state 
                    ]]]
                template:
                  - base
                  - carte_tv
                  - state_carte
                  - state_unavailable
                custom_fields:
                  bouton2:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - carte_bouton
                            - carte_bouton_state_tv_salon
                          icon: |
                            [[[
                              if (states['media_player.tv_salon'].state == 'on' && states['sensor.tv_salon_sortie_audio'].state == 'Casque')
                              return "mdi-headphones"
                              if (states['media_player.tv_salon'].state == 'on' && states['sensor.tv_salon_sortie_audio'].state == 'TV')
                              return "mdi:television"
                              if (states['media_player.tv_salon'].state == 'on' && states['sensor.tv_salon_sortie_audio'].state == 'Barre de son')
                                return "mdi:speaker-bluetooth"
                              return "mdi:television"
                            ]]]
                        - type: custom:button-card
                          entity: script.tv_salon_chaine_bas
                          template:
                            - carte_bouton
                            - carte_bouton_state_tv_salon
                        - type: custom:button-card
                          entity: script.tv_salon_chaine_haut
                          template:
                            - carte_bouton
                            - carte_bouton_state_tv_salon
                  bouton:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: script.tv_salon_volume_mute
                          template: carte_bouton
                          styles:
                            icon:
                              - color: |
                                  [[[
                                    if (states['media_player.tv_salon'].attributes.is_volume_muted == true)
                                      return 'red';
                                    return "grey"
                                  ]]]
                        - type: custom:button-card
                          entity: script.tv_salon_volume_bas
                          template:
                            - carte_bouton
                            - carte_bouton_state_tv_salon
                        - type: custom:button-card
                          entity: script.tv_salon_volume_haut
                          template:
                            - carte_bouton
                            - carte_bouton_state_tv_salon
                double_tap_action:
                  action: call-service
                  service: script.tv_salon_on_off
                  service_data: null
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Musique" ]]]
              - type: custom:mini-media-player
                entity: media_player.sejour
                artwork: material
                icon: mdi:speaker
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Annonce" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_sejour
                        name: Message à envoyer dans le séjour
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_sejour
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Caméra" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - camera_view: live
                    type: picture-glance
                    title: []
                    entities: []
                    camera_image: camera.camera_sejour
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - square: false
            columns: 1
            type: grid
            cards:
              - type: custom:apexcharts-card
                header:
                  show: true
                  title: Séjour
                  show_states: true
                  colorize_states: true
                experimental:
                  brush: true
                graph_span: 3d
                brush:
                  selection_span: 24h
                apex_config:
                  grid:
                    show: true
                  legend:
                    fontSize: 12px
                    height: 40
                  dataLabels:
                    enabled: false
                  stroke:
                    width: 3
                    curve: smooth
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                yaxis:
                  - id: first
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                  - id: second
                    opposite: true
                    decimals: 0
                    apex_config:
                      tickAmount: 4
                all_series_config:
                  stroke_width: 2
                series:
                  - entity: sensor.temp_sejour
                    yaxis_id: first
                    name: température
                    unit: °C
                    color: orange
                    type: area
                    show:
                      extremas: true
                      in_brush: true
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
                  - entity: sensor.hum_sejour
                    yaxis_id: second
                    name: humidité
                    unit: '%'
                    color: dodgerblue
                    type: area
                    show:
                      extremas: true
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
        layout:
          width: 280
  - theme: Backend-selected
    subview: true
    icon: mdi:account
    title: Personnes
    path: Personnes
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:human-male
                    layout: icon|name
                    name: Aurel
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - entity: person.herve
                    type: custom:button-card
                    show_state: false
                    show_name: false
                    show_entity_picture: true
                    label: >
                      [[[return states["sensor.aurel_gps"].state +"<br> depuis
                      "+states["sensor.aurel_duree"].state]]]
                    template:
                      - base
                      - state_person
                      - state_unavailable
                    styles:
                      entity_picture:
                        - width: 100%
              - entity: sensor.aurel_trajet
                type: custom:button-card
                icon: mdi:car
                name: Temps de trajet
                show_state: true
                template:
                  - base
                  - state_unavailable
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 4px;
                    box-shadow: none;
                  }
                cards:
                  - type: custom:button-card
                    entity: sensor.aurel_activite
                    name: Activité
                    template:
                      - carte_badge
                      - style_off
                    show_label: false
                    show_state: true
                    icon: |
                      [[[
                        if (entity.state == 'Mouvement')
                          return "mdi:human-handsdown"
                        if (entity.state == 'Stationnaire')
                          return "mdi:human-male"
                        if (entity.state == 'Conduite')
                          return "mdi:car"
                        if (entity.state == 'Marche')
                          return "mdi:walk"
                        if (entity.state == 'Course')
                          return "mdi:run-fast"
                        if (entity.state == 'Vélo')
                          return "mdi:bike"
                        return ""
                      ]]]
                    styles:
                      icon:
                        - color: |
                            [[[
                              if (entity.state == 'Stationnaire')
                                return ""
                              if (entity.state == 'Conduite')
                                return "var(--custom-icon-color-red)"
                              return 'var(--custom-icon-color-blue)'
                            ]]]
                      img_cell:
                        - background-color: |
                            [[[
                              if (entity.state == 'Stationnaire')
                                return "var(--pastille_off)"
                              if (entity.state == 'Conduite')
                                return "var(--custom-img-cell-color-red)"
                              return 'var(--custom-img-cell-color-blue)'
                            ]]]        
                  - type: custom:button-card
                    entity: sensor.iphone_aurel_battery_level
                    name: iPhone
                    template:
                      - carte_badge
                      - state_batterie
                      - style_off
                    show_label: false
                    show_name: true
                  - type: custom:button-card
                    entity: sensor.macbook_aurel_internal_battery_level
                    name: MacBook
                    template:
                      - carte_badge
                      - state_batterie
                      - style_off
                    show_label: false
                    show_name: true
                  - type: custom:button-card
                    entity: sensor.ipad_aurel_battery_level
                    name: iPad
                    template:
                      - carte_badge
                      - state_batterie
                      - style_off
                    show_label: false
                    show_name: true
              - type: custom:vertical-stack-in-card
                cards:
                  - type: history-graph
                    entities:
                      - entity: sensor.aurel_gps
                        name: []
                    hours_to_show: 24
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        margin: -10px -10px 6px;
                      }
                  - type: map
                    entities:
                      - entity: person.herve
                    dark_mode: false
                    aspect_ratio: '1.5'
            show_header_toggle: true
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:human-female
                    layout: icon|name
                    name: Alex
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - entity: person.alex
                    type: custom:button-card
                    show_state: false
                    show_name: false
                    show_entity_picture: true
                    label: >
                      [[[return states["sensor.alex_gps"].state +"<br> depuis
                      "+states["sensor.alex_duree"].state]]]
                    template:
                      - base
                      - state_person
                      - state_unavailable
                    styles:
                      entity_picture:
                        - width: 100%
              - entity: sensor.alex_trajet
                type: custom:button-card
                icon: mdi:car
                name: Temps de trajet
                show_state: true
                template:
                  - base
                  - state_unavailable
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 4px;
                    box-shadow: none;
                  }
                cards:
                  - type: custom:button-card
                    entity: sensor.alex_activite
                    name: Activité
                    template:
                      - carte_badge
                      - style_off
                    show_label: false
                    show_state: true
                    icon: |
                      [[[
                          if (entity.state == 'Mouvement')
                            return "mdi:human-handsdown"
                          if (entity.state == 'Stationnaire')
                            return "mdi:human-male"
                          if (entity.state == 'Conduite')
                            return "mdi:car"
                          if (entity.state == 'Marche')
                            return "mdi:walk"
                          if (entity.state == 'Course')
                            return "mdi:run-fast"
                          if (entity.state == 'Vélo')
                            return "mdi:bike"
                          return ""
                      ]]]
                    styles:
                      icon:
                        - color: |
                            [[[
                              if (entity.state == 'Stationnaire')
                                return ""
                              if (entity.state == 'Conduite')
                                return "var(--custom-icon-color-red)"
                              return 'var(--custom-icon-color-blue)'
                            ]]]
                      img_cell:
                        - background-color: |
                            [[[
                              if (entity.state == 'Stationnaire')
                                return "var(--pastille_off)"
                              if (entity.state == 'Conduite')
                                return "var(--custom-img-cell-color-red)"
                              return 'var(--custom-img-cell-color-blue)'
                            ]]]         
                  - type: custom:button-card
                    entity: sensor.alex_iphone_battery_level_ha
                    name: iPhone
                    template:
                      - carte_badge
                      - state_batterie
                      - style_off
                    show_label: false
                    show_name: true
                  - type: custom:button-card
                    entity: sensor.macbook_alex_internal_battery_level
                    name: MacBook
                    template:
                      - carte_badge
                      - state_batterie
                      - style_off
                    show_label: false
                    show_name: true
              - type: custom:vertical-stack-in-card
                cards:
                  - type: history-graph
                    entities:
                      - entity: sensor.alex_gps
                        name: []
                    hours_to_show: 24
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        margin: -10px -10px 6px;
                      }
                  - type: map
                    entities:
                      - entity: person.alex
                    dark_mode: false
                    aspect_ratio: '1.5'
            show_header_toggle: true
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:human-child
                    layout: icon|name
                    name: Tom
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - entity: person.tom
                    name: Tom
                    type: custom:button-card
                    show_state: false
                    show_name: false
                    show_entity_picture: true
                    label: >
                      [[[return states["sensor.tom_gps"].state +"<br> depuis
                      "+states["sensor.tom_duree"].state]]]
                    template:
                      - base
                      - state_person
                      - state_unavailable
                    styles:
                      entity_picture:
                        - width: 100%
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 4px;
                    box-shadow: none;
                  }
                cards:
                  - type: custom:button-card
                    entity: device_tracker.iphone_tom
                    icon: mdi:cellphone
                    name: iPhone
                    template:
                      - carte_badge
                      - state_bleu
                      - style_off
                    show_label: false
                    show_state: true
                  - type: custom:button-card
                    entity: device_tracker.tom_mac_ping
                    icon: mdi:laptop
                    name: MacBook
                    template:
                      - carte_badge
                      - state_bleu
                      - style_off
                    show_label: false
                    show_state: true
              - type: custom:vertical-stack-in-card
                cards:
                  - type: history-graph
                    entities:
                      - entity: sensor.tom_gps
                        name: []
                    hours_to_show: 48
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        margin: -10px -10px 6px;
                      }
            show_header_toggle: true
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:tablet
                    layout: icon|name
                    name: Tablettes filles
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Manon" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - entity: person.manon
                    name: Manon (tablette)
                    type: custom:button-card
                    show_state: false
                    show_name: false
                    show_entity_picture: true
                    label: |
                      [[[
                        if (entity.state == 'home')
                          return "Allumée"+"<br> depuis "+states["sensor.manon_duree"].state
                        return "Eteint"+"<br> depuis "+states["sensor.manon_duree"].state
                      ]]]
                    template:
                      - base
                      - state_person
                      - state_unavailable
                    styles:
                      entity_picture:
                        - width: 100%
              - type: custom:vertical-stack-in-card
                cards:
                  - type: history-graph
                    entities:
                      - entity: person.manon
                        name: []
                    hours_to_show: 48
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        margin: -10px -10px 6px;
                      }
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Léane" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - entity: person.leane
                    name: Léane (tablette)
                    type: custom:button-card
                    show_state: false
                    show_name: false
                    show_entity_picture: true
                    label: |
                      [[[
                        if (states['device_tracker.leane_tab_ping'].state == 'home')
                          return "Allumée"+"<br> depuis "+states["sensor.leane_duree"].state
                        return "Eteint"+"<br> depuis "+states["sensor.leane_duree"].state
                      ]]]
                    template:
                      - base
                      - state_person
                      - state_unavailable
                    styles:
                      entity_picture:
                        - width: 100%
              - type: custom:vertical-stack-in-card
                cards:
                  - type: history-graph
                    entities:
                      - entity: person.leane
                        name: []
                    hours_to_show: 48
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        margin: -10px -10px 6px;
                      }
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Nina" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - entity: person.nina
                    name: Nina (tablette)
                    type: custom:button-card
                    show_state: false
                    show_name: false
                    show_entity_picture: true
                    label: |
                      [[[
                        if (states['device_tracker.nina_tab_ping'].state == 'home')
                          return "Allumée"+"<br> depuis "+states["sensor.nina_duree"].state
                        return "Eteint"+"<br> depuis "+states["sensor.nina_duree"].state
                      ]]]
                    template:
                      - base
                      - state_person
                      - state_unavailable
                    styles:
                      entity_picture:
                        - width: 100%
              - type: custom:vertical-stack-in-card
                cards:
                  - type: history-graph
                    entities:
                      - entity: person.nina
                        name: []
                    hours_to_show: 48
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        margin: -10px -10px 6px;
                      }
            show_header_toggle: true
  - theme: Backend-selected
    subview: true
    icon: mdi:door-open
    path: porte_mouv_serrure
    title: Portes mouv serrures
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:home-alert
                    layout: icon|name
                    name: Capteurs
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Portes" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 5px;
                  }
                cards:
                  - type: grid
                    square: false
                    columns: 3
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.porte_entree
                        name: Entrée
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.porte_garage
                        name: Garage
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.porte_cagibi
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.porte_salle_a_manger
                        name: S. à M
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.porte_cuisine
                        name: Cuisine
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.porte_chambre_parents
                        name: Parents
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Mouvements" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 5px;
                  }
                cards:
                  - type: grid
                    square: false
                    columns: 4
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_salon
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_salle_a_manger
                        name: S. à M
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_garage
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_salle_d_eau
                        name: S. d'eau
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_couloir
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_escalier
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_palier
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_tom
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_manon
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_leane
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_nina
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
            state_color: false
            show_header_toggle: false
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:lock
                    layout: icon|name
                    name: Serrures
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Entrée" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - entity: lock.serrure_entree
                    type: custom:button-card
                    show_state: true
                    show_name: false
                    show_entity_picture: true
                    template:
                      - base
                      - last_changed
                      - state_bleu_rouge
                      - state_unavailable
                    styles:
                      entity_picture:
                        - width: 100%
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 4px;
                    box-shadow: none;
                  }
                cards:
                  - type: custom:button-card
                    entity: script.entree_serrure_toggle
                    name: ON/OFF
                    template:
                      - carte_badge
                      - last_changed
                      - state_bleu
                      - style_off
                    show_label: true
                    show_state: false
                  - type: custom:button-card
                    entity: input_boolean.serrure_entree_verrouillage_automatique
                    name: OFF Auto
                    template:
                      - carte_badge
                      - last_changed
                      - state_bleu
                      - style_off
                    show_label: true
                    show_state: false
                  - type: custom:button-card
                    entity: binary_sensor.serrure_entree_porte
                    name: Porte
                    template:
                      - carte_badge
                      - state_rouge
                      - style_off
                    show_label: false
                    show_state: true
                  - type: custom:button-card
                    entity: sensor.serrure_entree_batterie
                    name: Pile
                    template:
                      - carte_badge
                      - state_batterie
                      - style_off
                    show_label: false
                    show_name: true
                  - type: custom:button-card
                    entity: binary_sensor.lock_fcfb_calibration
                    name: Calibration
                    template:
                      - carte_badge
                      - state_bleu
                      - style_off
                    show_label: false
                    show_state: true
                    show_name: true
              - type: custom:vertical-stack-in-card
                cards:
                  - type: history-graph
                    entities:
                      - entity: lock.serrure_entree
                        name: []
                    hours_to_show: 24
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        margin: -10px -10px 6px;
                      }
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Garage" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - entity: lock.garage
                    type: custom:button-card
                    show_state: true
                    show_name: false
                    show_entity_picture: true
                    template:
                      - base
                      - last_changed
                      - state_bleu_rouge
                      - state_unavailable
                    styles:
                      entity_picture:
                        - width: 100%
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 4px;
                    box-shadow: none;
                  }
                cards:
                  - type: custom:button-card
                    entity: script.garage_serrure_toggle
                    name: ON/OFF
                    template:
                      - carte_badge
                      - last_changed
                      - state_bleu
                      - style_off
                    show_label: true
                    show_state: false
                  - type: custom:button-card
                    entity: input_boolean.serrure_garage_verrouillage_automatique
                    name: OFF auto
                    template:
                      - carte_badge
                      - last_changed
                      - state_bleu
                      - style_off
                    show_label: true
                    show_state: false
                  - type: custom:button-card
                    entity: binary_sensor.lock_2c8e_door_status
                    name: Porte
                    template:
                      - carte_badge
                      - state_rouge
                      - style_off
                    show_label: false
                    show_state: true
                  - type: custom:button-card
                    entity: sensor.lock_2c8e_battery
                    name: Pile
                    template:
                      - carte_badge
                      - state_batterie
                      - style_off
                    show_label: false
                    show_name: true
                  - type: custom:button-card
                    entity: binary_sensor.lock_2c8e_calibration
                    name: Calibration
                    template:
                      - carte_badge
                      - state_bleu
                      - style_off
                    show_label: false
                    show_state: true
                    show_name: true
              - type: custom:vertical-stack-in-card
                cards:
                  - type: history-graph
                    entities:
                      - entity: lock.garage
                        name: []
                    hours_to_show: 24
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        margin: -10px -10px 6px;
                      }
            show_header_toggle: true
  - theme: Backend-selected
    icon: mdi:speaker-multiple
    title: Musique
    subview: true
    path: Musique
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: custom:button-card
            template:
              - titre_section
            name: |
              [[[ return "Rez-de-chaussée" ]]]
          - square: false
            columns: 2
            type: grid
            cards:
              - type: custom:button-card
                entity: media_player.sejour
                name: Séjour
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.sejour
                          state: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.sejour
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
              - type: custom:button-card
                entity: media_player.la_cuisine
                name: Cuisine
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.la_cuisine
                          state: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.la_cuisine
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
              - type: custom:button-card
                entity: media_player.chambre_des_parents
                name: Parents
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.chambre_des_parents
                          state: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.chambre_parents
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
              - type: custom:button-card
                entity: media_player.le_garage
                name: Garage
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.le_garage
                          state: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.le_garage
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
              - type: custom:button-card
                entity: media_player.partout
                name: Partout
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.partout
                          state: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.partout
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
              - type: custom:button-card
                entity: media_player.en_bas
                name: En bas
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.en_bas
                          state: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.en_bas
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
      - type: vertical-stack
        cards:
          - type: custom:button-card
            template:
              - titre_section
            name: |
              [[[ return "Etage " ]]]
          - square: false
            columns: 2
            type: grid
            cards:
              - type: custom:button-card
                entity: media_player.la_salle_de_bain
                name: S. de bain
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.la_salle_de_bain
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                        - entity: media_player.etage
                          state_not: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.la_salle_de_bain
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
              - type: custom:button-card
                entity: media_player.tom
                name: Tom
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.tom
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                        - entity: media_player.etage
                          state_not: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.tom
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
              - type: custom:button-card
                entity: media_player.nina
                name: Nina
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.nina
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                        - entity: media_player.etage
                          state_not: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.nina
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
              - type: custom:button-card
                entity: media_player.chambre_de_manon_et_leane
                name: Manon Léane
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.chambre_de_manon_et_leane
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.chambre_de_manon_et_leane
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
              - type: custom:button-card
                entity: media_player.leane
                name: Léane
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.leane
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                        - entity: media_player.etage
                          state_not: playing
                        - entity: media_player.chambre_de_manon_et_leane
                          state_not: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.leane
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
              - type: custom:button-card
                entity: media_player.manon
                name: Manon
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.manon
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                        - entity: media_player.etage
                          state_not: playing
                        - entity: media_player.chambre_de_manon_et_leane
                          state_not: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.manon
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
              - type: custom:button-card
                entity: media_player.etage
                name: Etage
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_bleu
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.etage
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                      card:
                        type: custom:mini-media-player
                        entity: media_player.etage
                        group: false
                        sound_mode: full
                        artwork: full-cover
                        toggle_power: false
                        source: icon
                        hide:
                          icon: true
                          name: true
                          source: true
                        style: >

                          .flex {
                            display: block;
                            {% if not is_state('media_player.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            {% else %}
                            {% endif %}
                          }  ha-card.--has-artwork .cover{
                            opacity: 0.9;
                          } .entity__info__media {
                            opacity: 1 !important;
                            padding-right: 16px;
                            overflow: hidden;
                            height: 4.4em;
                            height: 100%;
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          > div.entity__icon {
                            {% if not is_state('input_boolean.musique','off') %}
                            display: none;
                            {% endif %}
                          } ha-card > div.mmp-player > div.mmp-player__core.flex
                          { } mmp-media-controls {
                            {% if not is_state('input_boolean.musique','off') %}
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                            flex-wrap: wrap-reverse !important;
                            {% endif %}
                          } mmp-powerstrip  { } ha-card > div.mmp-player {
                            padding: 12px !important;
                            {% if not is_state('input_boolean.musique','off') %}
                            {% else %}
                            #display: none !important;
                            {% endif %}
                          } ha-card > div.mmp-player {
                            {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                            position: relative;
                            height: 20vh;
                            {% else %}
                            position: absolute;
                            align-self: flex-start;
                            height: 100%;
                            {% endif %}
                            
                            background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                            font-size: 0.9em !important;
                          } ha-card > div.mmp-player > div.mmp-player__adds {
                            position: absolute;
                            bottom: 14px;
                            padding: 0 16px 0 0;
                          } div.flex.mmp-media-controls__media {
                              margin-bottom: -5px !important;
                          }
  - theme: Backend-selected
    title: Autres
    path: Autres
    subview: true
    icon: mdi:home-search-outline
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:dishwasher
                    layout: icon|name
                    name: Machines
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - type: grid
                    cards:
                      - type: custom:button-card
                        template:
                          - carte_appareil_vaisselle
                      - type: custom:button-card
                        template:
                          - carte_appareil_linge
                    columns: 2
                    square: false
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:spray
                    layout: icon|name
                    entity: switch.moustiques
                    name: Prises anti moustiques
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      data: {}
                      target:
                        entity_id: switch.moustiques
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card {
                    box-shadow: none;
                    border-color: none;
                    border-style: none;
                    background-color: transparent;
                  }
                cards:
                  - type: custom:button-card
                    entity: switch.moustique_parents
                    name: Parents
                    template:
                      - carte_badge
                      - state_bleu
                      - style_off
                    show_label: true
                    show_name: true
                  - type: custom:button-card
                    entity: switch.moustique_tom
                    name: Tom
                    template:
                      - carte_badge
                      - state_bleu
                      - style_off
                    show_label: true
                    show_name: true
                  - type: custom:button-card
                    entity: switch.moustique_manon
                    name: Manon & Lélé
                    template:
                      - carte_badge
                      - state_bleu
                      - style_off
                    show_label: true
                    show_name: true
                  - type: custom:button-card
                    entity: switch.moustique_nina
                    name: Nina
                    template:
                      - carte_badge
                      - state_bleu
                      - style_off
                    show_label: true
                    show_name: true
  - theme: Backend-selected
    subview: true
    path: Annonces
    title: Annonces
    icon: mdi:speaker-message
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:speaker-message
                    layout: icon|name
                    name: Annonces
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card {
                    box-shadow: none;
                  }
                cards:
                  - type: grid
                    square: false
                    columns: 2
                    cards:
                      - entity: script.a_table
                        name: A table
                        type: custom:button-card
                        template:
                          - carte_scene
                          - state_bleu
                      - entity: script.gouter
                        name: Goûter
                        type: custom:button-card
                        template:
                          - carte_scene
                          - state_bleu
                      - entity: script.1590760144160
                        name: Fin écran
                        type: custom:button-card
                        template:
                          - carte_scene
                          - state_bleu
                      - entity: script.annonce_au_lit
                        name: Coucher filles
                        type: custom:button-card
                        template:
                          - carte_scene
                          - state_bleu
                      - entity: script.tom_va_se_coucher
                        name: Coucher Tom
                        type: custom:button-card
                        template:
                          - carte_scene
                          - state_bleu
                      - entity: script.reveille_tom_annonce_alexa
                        name: Réveiller Tom
                        type: custom:button-card
                        template:
                          - carte_scene
                          - state_bleu
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:message
                    layout: icon|name
                    name: Annonces personnalisées pièces
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Salle de bain" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_salle_de_bain
                        name: Message à envoyer dans la salle de bain
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_salle_de_bain
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
              - type: custom:mini-media-player
                entity: media_player.la_salle_de_bain
                artwork: none
                icon: mdi:speaker
                hide:
                  source: true
                  icon: true
                  name: true
                  power: true
                  play_pause: true
                  controls: true
                  next: true
                  prev: true
                  play_stop: true
                  progress: true
                  state_label: true
                  info: true
                toggle_power: false
                info: null
                volume_stateless: false
                group: true
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Séjour" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_sejour
                        name: Message à envoyer dans le séjour
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_sejour
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
              - type: custom:mini-media-player
                entity: media_player.sejour
                artwork: none
                icon: mdi:speaker
                hide:
                  source: true
                  icon: true
                  name: true
                  power: true
                  play_pause: true
                  controls: true
                  next: true
                  prev: true
                  play_stop: true
                  progress: true
                  state_label: true
                  info: true
                toggle_power: false
                info: null
                volume_stateless: false
                group: true
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:message
                    layout: icon|name
                    name: Annonces personnalisées chambres
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Chambre de Tom" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_chambre_de_tom
                        name: Message à envoyer dans la chambre de Tom
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_chambre_de_tom
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
              - type: custom:mini-media-player
                entity: media_player.tom
                artwork: none
                icon: mdi:speaker
                hide:
                  source: true
                  icon: true
                  name: true
                  power: true
                  play_pause: true
                  controls: true
                  next: true
                  prev: true
                  play_stop: true
                  progress: true
                  state_label: true
                  info: true
                toggle_power: false
                info: null
                volume_stateless: false
                group: true
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Chambre de Manon et Lélé" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_chambre_de_manon
                        name: Message à envoyer dans la grande chambre
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_chambre_de_manon
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
              - type: custom:mini-media-player
                entity: media_player.chambre_de_manon_et_leane
                artwork: none
                icon: mdi:speaker
                hide:
                  source: true
                  icon: true
                  name: true
                  power: true
                  play_pause: true
                  controls: true
                  next: true
                  prev: true
                  play_stop: true
                  progress: true
                  state_label: true
                  info: true
                toggle_power: false
                info: null
                volume_stateless: false
                group: true
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Chambre de Nina" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_chambre_de_nina
                        name: Message à envoyer dans la chambre de Nina
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_chambre_de_nina
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
              - type: custom:mini-media-player
                entity: media_player.nina
                artwork: none
                icon: mdi:speaker
                hide:
                  source: true
                  icon: true
                  name: true
                  power: true
                  play_pause: true
                  controls: true
                  next: true
                  prev: true
                  play_stop: true
                  progress: true
                  state_label: true
                  info: true
                toggle_power: false
                info: null
                volume_stateless: false
                group: true
            show_header_toggle: false
  - theme: Backend-selected
    title: Tom
    path: Tom
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:whistle
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:bat
                        layout: icon|name
                        name: Chambre de Tom
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Capteurs" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;      
                      }
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_tom
                        name: Mouvement
                        template:
                          - carte_badge
                          - last_changed
                          - state_rouge
                          - state_unavailable
                      - type: custom:button-card
                        entity: sensor.temp_tom
                        name: Température
                        template:
                          - carte_badge
                          - state_temp
                        label: |
                          [[[
                            return entity.state+"°"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: sensor.hum_tom
                        name: Humidité
                        template:
                          - carte_badge
                          - state_humidite
                        label: |
                          [[[
                            return entity.state+"*"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: sensor.mouv_tom_luminosite
                        name: Luminosité
                        template:
                          - carte_badge
                          - state_luminosite
                        label: |
                          [[[
                            return entity.state+"lx"
                          ]]]
                        tap_action:
                          action: more-info
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Scènes" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;      
                      }
                    cards:
                      - type: custom:button-card
                        entity: scene.tom_ambiance_normale
                        name: Normal
                        template:
                          - carte_scene
                        styles:
                          icon:
                            - color: gold
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.tom_ambiance_normale
                      - type: custom:button-card
                        entity: scene.tom_ambiance_nuit
                        name: Nuit
                        template:
                          - carte_scene
                        styles:
                          icon:
                            - color: dodgerblue
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.tom_ambiance_nuit
                      - type: custom:button-card
                        name: 'OFF'
                        entity: light.tom
                        icon: mdi:lightbulb-multiple-off
                        template:
                          - carte_scene
                        tap_action:
                          action: call-service
                          service: light.turn_off
                          service_data:
                            entity_id: light.tom
                        double_tap_action:
                          action: more-info
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Lumières" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;      
                      }
                    cards:
                      - type: custom:button-card
                        entity: light.lustre_tom
                        name: Lustre
                        template:
                          - carte_lumiere
                      - type: custom:button-card
                        entity: light.chevet_tom
                        name: Chevet
                        template:
                          - carte_lumiere
                      - type: custom:button-card
                        entity: light.lampe_de_bureau_tom
                        name: Lampe
                        template:
                          - carte_lumiere
                      - type: custom:button-card
                        entity: light.sonoff_10013f6d7e
                        name: Bureau
                        template:
                          - carte_lumiere
                  - type: custom:light-entity-card
                    entity: light.tom
                    shorten_cards: false
                    consolidate_entities: true
                    child_card: true
                    hide_header: true
                    header: Toutes les lampes
                    color_wheel: true
                    persist_features: true
                    brightness: true
                    color_temp: true
                    white_value: false
                    color_picker: false
                    smooth_color_wheel: true
                    speed: false
                    intensity: false
                    force_features: false
                    show_slider_percent: true
                    full_width_sliders: false
                    brightness_icon: weather-sunny
                    white_icon: file-word-box
                    temperature_icon: thermometer
                    speed_icon: speedometer
                    intensity_icon: transit-connection-horizontal
                    effects_list: false
                    style: >
                      ha-card {
                        margin: 25px 2px !important;
                      } ha-card > div.light-entity-card__header >
                      div.light-entity-card__title {
                        font-size: 14px !important;
                        font-weight: 500;
                      }
                  - type: custom:rgb-light-card
                    entity: light.tom
                    justify: around
                    size: 20
                    colors:
                      - color_temp: 153
                        brightness: 255
                        icon_color: white
                      - color_temp: 357
                        brightness: 255
                      - color_temp: 451
                        brightness: 255
                      - rgb_color:
                          - 255
                          - 170
                          - 0
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(255,170,0),
                          rgb(255,225,165))
                      - rgb_color:
                          - 255
                          - 0
                          - 0
                        brightness: 255
                        icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                      - rgb_color:
                          - 244
                          - 38
                          - 255
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(244,38,255),
                          rgb(255,138,255))
                      - rgb_color:
                          - 0
                          - 222
                          - 255
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(0,222,255),
                          rgb(140,240,255))
                      - rgb_color:
                          - 0
                          - 0
                          - 255
                        brightness: 255
                        icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                    style: |
                      * {
                        margin-bottom: 6px !important;
                      }
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Appareils  " ]]]
                  - type: custom:button-card
                    entity: switch.moustique_tom
                    name: Prise moustique
                    template:
                      - base
                      - last_changed
                      - state_bleu
                      - state_unavailable
                state_color: false
                show_header_toggle: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Musique" ]]]
              - type: custom:mini-media-player
                entity: media_player.tom
                artwork: material
                icon: mdi:speaker
                hide:
                  source: true
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Annonces  " ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card {
                    box-shadow: none;
                  }
                cards:
                  - entity: script.tom_va_se_coucher
                    name: Couché
                    type: custom:button-card
                    template:
                      - carte_badge
                      - style_off
                    show_label: false
                    show_name: true
                  - entity: script.reveille_tom_annonce_alexa
                    name: Réveil
                    type: custom:button-card
                    template:
                      - carte_badge
                      - style_off
                    show_label: false
                    show_name: true
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_chambre_de_tom
                        name: Message à envoyer
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_chambre_de_tom
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Réglages" ]]]
              - entity: sensor.tom_reveil
                state_color: true
                name: Réveil
                icon: mdi:alarm
              - entity: automation.reveil_tom
                state_color: true
                name: Auto réveil
                icon: mdi:progress-clock
              - entity: automation.tom_allumage_auto
                state_color: true
                name: ON auto
                icon: mdi:lightbulb-on-outline
              - entity: automation.tom_chambre_off_auto
                state_color: true
                name: OFF auto
                icon: mdi:lightbulb-multiple-off
              - entity: switch.tom_do_not_disturb_switch
                state_color: true
                name: Echo silence
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: custom:apexcharts-card
            header:
              show: true
              title: Chambre Tom
              show_states: true
              colorize_states: true
            experimental:
              brush: true
            graph_span: 3d
            brush:
              selection_span: 24h
            apex_config:
              grid:
                show: true
              legend:
                fontSize: 12px
                height: 40
              dataLabels:
                enabled: false
              stroke:
                width: 3
                curve: smooth
              fill:
                type: gradient
                gradient:
                  type: vertical
                  shadeIntensity: 0.8
                  inverseColors: false
                  opacityFrom: 0.5
                  opacityTo: 0
                  stops:
                    - - 0
                      - 50
                      - 100
            yaxis:
              - id: first
                decimals: 1
                apex_config:
                  tickAmount: 4
              - id: second
                opposite: true
                decimals: 0
                apex_config:
                  tickAmount: 4
            all_series_config:
              stroke_width: 2
            series:
              - entity: sensor.temp_tom
                yaxis_id: first
                name: température
                unit: °C
                color: orange
                type: area
                show:
                  extremas: true
                  in_brush: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
              - entity: sensor.hum_tom
                yaxis_id: second
                name: humidité
                unit: '%'
                color: dodgerblue
                type: area
                show:
                  extremas: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
  - theme: Backend-selected
    subview: true
    path: Manon Léane
    title: Manon Léane
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:cat
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:death-star-variant
                        layout: icon|name
                        name: Chambre de Manon & Lélé
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Capteurs" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - type: grid
                        square: false
                        columns: 3
                        cards:
                          - type: custom:button-card
                            entity: sensor.temp_manon
                            name: Température
                            template:
                              - carte_badge
                              - state_unavailable
                              - state_temp
                            label: |
                              [[[
                                return entity.state+"°"
                              ]]]
                            tap_action:
                              action: more-info
                          - type: custom:button-card
                            entity: sensor.hum_manon
                            name: Humidité
                            template:
                              - carte_badge
                              - state_unavailable
                              - state_humidite
                            label: |
                              [[[
                                return entity.state+"*"
                              ]]]
                            tap_action:
                              action: more-info
                          - type: custom:button-card
                            entity: sensor.mouv_manon_luminosite
                            name: Lum Manon
                            template:
                              - carte_badge
                              - state_unavailable
                              - state_luminosite
                            label: |
                              [[[
                                return entity.state+"lx"
                              ]]]
                            tap_action:
                              action: more-info
                          - type: custom:button-card
                            entity: sensor.mouv_leane_luminosite
                            name: Lum Lélé
                            template:
                              - carte_badge
                              - state_unavailable
                              - state_luminosite
                            label: |
                              [[[
                                return entity.state+"lx"
                              ]]]
                            tap_action:
                              action: more-info
                          - type: custom:button-card
                            entity: binary_sensor.mouv_manon
                            template:
                              - carte_badge
                              - state_rouge
                              - last_changed
                              - state_unavailable
                            show_label: true
                            show_name: true
                          - type: custom:button-card
                            entity: binary_sensor.mouv_leane
                            template:
                              - carte_badge
                              - state_rouge
                              - last_changed
                              - state_unavailable
                            show_label: true
                            show_name: true
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Scènes" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card {
                        box-shadow: none
                      }
                    cards:
                      - type: custom:button-card
                        entity: scene.grande_chambre_ambiance_normale
                        name: Normal
                        template:
                          - carte_scene
                        styles:
                          icon:
                            - color: gold
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.grande_chambre_ambiance_normale
                      - type: custom:button-card
                        entity: scene.grande_chambre_ambiance_nuit
                        name: Nuit
                        template:
                          - carte_scene
                        styles:
                          icon:
                            - color: dodgerblue
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.grande_chambre_ambiance_nuit
                      - type: custom:button-card
                        name: 'OFF'
                        entity: light.manon_et_leane
                        icon: mdi:lightbulb-multiple-off
                        template:
                          - carte_scene
                        tap_action:
                          action: call-service
                          service: light.turn_off
                          service_data:
                            entity_id: light.manon_et_leane
                        double_tap_action:
                          action: more-info
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Lumières" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card {
                        box-shadow: none
                      }
                    cards:
                      - type: grid
                        square: false
                        columns: 3
                        cards:
                          - type: custom:button-card
                            entity: light.chevet_manon
                            name: Chevet Manon
                            template:
                              - carte_lumiere
                          - type: custom:button-card
                            entity: light.lampe_de_bureau_manon
                            name: Bureau
                            template:
                              - carte_lumiere
                          - type: custom:button-card
                            entity: switch.arbre_lumineux
                            name: Arbre
                            template:
                              - carte_lumiere
                          - type: custom:button-card
                            entity: light.lustre_manon_et_leane
                            name: Lustre
                            template:
                              - carte_lumiere
                          - type: custom:button-card
                            entity: light.lampe_manon_et_leane
                            name: Lampadaire
                            template:
                              - carte_lumiere
                          - type: custom:button-card
                            entity: light.chevet_leane
                            name: Chevet Lélé
                            template:
                              - carte_lumiere
                  - type: custom:light-entity-card
                    entity: light.manon_et_leane
                    shorten_cards: false
                    consolidate_entities: true
                    child_card: true
                    hide_header: true
                    header: Toutes les lampes
                    color_wheel: true
                    persist_features: true
                    brightness: true
                    color_temp: true
                    white_value: false
                    color_picker: false
                    smooth_color_wheel: true
                    speed: false
                    intensity: false
                    force_features: false
                    show_slider_percent: true
                    full_width_sliders: false
                    brightness_icon: weather-sunny
                    white_icon: file-word-box
                    temperature_icon: thermometer
                    speed_icon: speedometer
                    intensity_icon: transit-connection-horizontal
                    effects_list: false
                    style: >
                      ha-card {
                        margin: 25px 2px !important;
                      } ha-card > div.light-entity-card__header >
                      div.light-entity-card__title {
                        font-size: 14px !important;
                        font-weight: 500;
                      }
                  - type: custom:rgb-light-card
                    entity: light.manon_et_leane
                    justify: around
                    size: 20
                    colors:
                      - color_temp: 153
                        brightness: 255
                        icon_color: white
                      - color_temp: 357
                        brightness: 255
                      - color_temp: 451
                        brightness: 255
                      - rgb_color:
                          - 255
                          - 170
                          - 0
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(255,170,0),
                          rgb(255,225,165))
                      - rgb_color:
                          - 255
                          - 0
                          - 0
                        brightness: 255
                        icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                      - rgb_color:
                          - 244
                          - 38
                          - 255
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(244,38,255),
                          rgb(255,138,255))
                      - rgb_color:
                          - 0
                          - 222
                          - 255
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(0,222,255),
                          rgb(140,240,255))
                      - rgb_color:
                          - 0
                          - 0
                          - 255
                        brightness: 255
                        icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                    style: |
                      * {
                        margin-bottom: 6px !important;
                      }
                state_color: false
                show_header_toggle: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Appareils" ]]]
              - type: custom:button-card
                entity: switch.moustique_manon
                name: Prise anti-moustiques
                template:
                  - base
                  - last_changed
                  - state_bleu
                  - state_unavailable
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Musique  " ]]]
              - type: custom:mini-media-player
                entity: media_player.chambre_de_manon_et_leane
                artwork: material
                icon: mdi:speaker
                hide:
                  source: true
              - type: custom:mini-media-player
                entity: media_player.manon
                artwork: material
                icon: mdi:speaker
                hide:
                  source: true
              - type: custom:mini-media-player
                entity: media_player.leane
                artwork: material
                icon: mdi:speaker
                hide:
                  source: true
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Annonce  " ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_chambre_de_manon
                        name: Message à envoyer
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_chambre_de_manon
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Réglages" ]]]
              - entity: automation.manon_leane_chambre_off_auto
                state_color: true
                name: OFF auto chambre
                icon: mdi:lightbulb-off-outline
              - entity: automation.manon_leane_chambre_allumage_auto
                state_color: true
                name: ON auto chambre
                icon: mdi:lightbulb-on-outline
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Réglages Manon" ]]]
              - entity: sensor.manon_reveil
                state_color: true
                name: Réveil Manon
                icon: mdi:alarm
              - entity: automation.reveil_manon
                state_color: true
                name: Auto réveil Manon
                icon: mdi:progress-clock
              - entity: switch.manon_do_not_disturb_switch
                state_color: true
                name: Alexa Manon silence
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Réglages Léane" ]]]
              - entity: sensor.leane_reveil
                state_color: true
                name: Réveil Lélé
                icon: mdi:alarm
              - entity: automation.reveil_leane
                state_color: true
                name: Auto réveil Lélé
                icon: mdi:progress-clock
              - entity: switch.leane_do_not_disturb_switch
                state_color: true
                name: Alexa Lélé silence
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: custom:apexcharts-card
            header:
              show: true
              title: Chambre Manon et Léane
              show_states: true
              colorize_states: true
            experimental:
              brush: true
            graph_span: 3d
            brush:
              selection_span: 24h
            apex_config:
              grid:
                show: true
              legend:
                fontSize: 12px
                height: 40
              dataLabels:
                enabled: false
              stroke:
                width: 3
                curve: smooth
              fill:
                type: gradient
                gradient:
                  type: vertical
                  shadeIntensity: 0.8
                  inverseColors: false
                  opacityFrom: 0.5
                  opacityTo: 0
                  stops:
                    - - 0
                      - 50
                      - 100
            yaxis:
              - id: first
                decimals: 1
                apex_config:
                  tickAmount: 4
              - id: second
                opposite: true
                decimals: 0
                apex_config:
                  tickAmount: 4
            all_series_config:
              stroke_width: 2
            series:
              - entity: sensor.temp_manon
                yaxis_id: first
                name: température
                unit: °C
                color: orange
                type: area
                show:
                  extremas: true
                  in_brush: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
              - entity: sensor.hum_manon
                yaxis_id: second
                name: humidité
                unit: '%'
                color: dodgerblue
                type: area
                show:
                  extremas: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
  - theme: Backend-selected
    path: Nina
    subview: true
    title: Nina
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:owl
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:owl
                        layout: icon|name
                        name: Chambre de Nina
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Capteurs" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;      
                      }
                    cards:
                      - type: custom:button-card
                        entity: sensor.temp_nina
                        name: Température
                        template:
                          - carte_badge
                          - state_unavailable
                          - state_temp
                        label: |
                          [[[
                            return entity.state+"°"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: sensor.hum_nina
                        name: Humidité
                        template:
                          - carte_badge
                          - state_unavailable
                          - state_humidite
                        label: |
                          [[[
                            return entity.state+"*"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: sensor.mouv_nina_luminosite
                        name: Luminosité
                        template:
                          - carte_badge
                          - state_unavailable
                          - state_luminosite
                        label: |
                          [[[
                            return entity.state+"lx"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: binary_sensor.mouv_nina
                        name: Mouvements
                        template:
                          - carte_badge
                          - last_changed
                          - state_rouge
                          - state_unavailable
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Scènes   " ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;      
                      }
                    cards:
                      - type: custom:button-card
                        entity: scene.nina_ambiance_normale
                        name: Normal
                        template:
                          - carte_scene
                        styles:
                          icon:
                            - color: gold
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.nina_ambiance_normale
                      - type: custom:button-card
                        entity: scene.nina_ambiance_douce
                        name: Doux
                        template:
                          - carte_scene
                        styles:
                          icon:
                            - color: pink
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.nina_ambiance_douce
                      - type: custom:button-card
                        entity: scene.nina_ambiance_nuit
                        name: Nuit
                        template:
                          - carte_scene
                        styles:
                          icon:
                            - color: dodgerblue
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.nina_ambiance_nuit
                      - type: custom:button-card
                        name: 'OFF'
                        entity: light.nina
                        icon: mdi:lightbulb-multiple-off
                        template:
                          - carte_scene
                        tap_action:
                          action: call-service
                          service: light.turn_off
                          service_data:
                            entity_id: light.nina
                        double_tap_action:
                          action: more-info
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Lumières  " ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;      
                      }
                    cards:
                      - type: custom:button-card
                        entity: light.lustre_nina
                        name: Lustre
                        template:
                          - carte_lumiere
                      - type: custom:button-card
                        entity: light.chevet_nina
                        name: Chevet
                        template:
                          - carte_lumiere
                      - type: custom:button-card
                        entity: light.lampe_de_bureau_nina
                        name: Lampe
                        template:
                          - carte_lumiere
                      - type: custom:button-card
                        entity: light.lampadaire_nina
                        name: Lampe
                        template:
                          - carte_lumiere
                  - type: custom:light-entity-card
                    entity: light.nina
                    shorten_cards: false
                    consolidate_entities: true
                    child_card: true
                    hide_header: true
                    header: Toutes les lampes
                    color_wheel: true
                    persist_features: true
                    brightness: true
                    color_temp: true
                    white_value: false
                    color_picker: false
                    smooth_color_wheel: true
                    speed: false
                    intensity: false
                    force_features: false
                    show_slider_percent: true
                    full_width_sliders: false
                    brightness_icon: weather-sunny
                    white_icon: file-word-box
                    temperature_icon: thermometer
                    speed_icon: speedometer
                    intensity_icon: transit-connection-horizontal
                    effects_list: false
                    style: >
                      ha-card {
                        margin: 25px 2px !important;
                      } ha-card > div.light-entity-card__header >
                      div.light-entity-card__title {
                        font-size: 14px !important;
                        font-weight: 500;
                      }
                  - type: custom:rgb-light-card
                    entity: light.nina
                    justify: around
                    size: 20
                    colors:
                      - color_temp: 153
                        brightness: 255
                        icon_color: white
                      - color_temp: 357
                        brightness: 255
                      - color_temp: 451
                        brightness: 255
                      - rgb_color:
                          - 255
                          - 170
                          - 0
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(255,170,0),
                          rgb(255,225,165))
                      - rgb_color:
                          - 255
                          - 0
                          - 0
                        brightness: 255
                        icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                      - rgb_color:
                          - 244
                          - 38
                          - 255
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(244,38,255),
                          rgb(255,138,255))
                      - rgb_color:
                          - 0
                          - 222
                          - 255
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(0,222,255),
                          rgb(140,240,255))
                      - rgb_color:
                          - 0
                          - 0
                          - 255
                        brightness: 255
                        icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                    style: |
                      * {
                        margin-bottom: 6px !important;
                      }
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Appareils  " ]]]
                  - type: custom:button-card
                    entity: switch.moustique_nina
                    name: Prise moustique
                    template:
                      - base
                      - last_changed
                      - state_bleu
                      - state_unavailable
                state_color: false
                show_header_toggle: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Musique  " ]]]
              - type: custom:mini-media-player
                entity: media_player.nina
                artwork: material
                icon: mdi:speaker
                hide:
                  source: true
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Annonce  " ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_chambre_de_nina
                        name: Message à envoyer
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_chambre_de_nina
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Réglages  " ]]]
              - entity: sensor.nina_reveil
                name: Réveil
                icon: mdi:alarm
                state_color: true
              - entity: automation.reveil_nina
                name: Auto réveil
                icon: mdi:progress-clock
                state_color: true
              - entity: automation.nina_chambre_allumage_auto
                name: ON auto
                icon: mdi:lightbulb-on-outline
                state_color: true
              - entity: automation.nina_chambre_off_auto
                name: OFF auto
                icon: mdi:lightbulb-group-off
                state_color: true
              - entity: switch.nina_do_not_disturb_switch
                name: Echo silence
                state_color: true
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: custom:apexcharts-card
            header:
              show: true
              title: Chambre Nina
              show_states: true
              colorize_states: true
            experimental:
              brush: true
            graph_span: 3d
            brush:
              selection_span: 24h
            apex_config:
              grid:
                show: true
              legend:
                fontSize: 12px
                height: 40
              dataLabels:
                enabled: false
              stroke:
                width: 3
                curve: smooth
              fill:
                type: gradient
                gradient:
                  type: vertical
                  shadeIntensity: 0.8
                  inverseColors: false
                  opacityFrom: 0.5
                  opacityTo: 0
                  stops:
                    - - 0
                      - 50
                      - 100
            yaxis:
              - id: first
                decimals: 1
                apex_config:
                  tickAmount: 4
              - id: second
                opposite: true
                decimals: 0
                apex_config:
                  tickAmount: 4
            all_series_config:
              stroke_width: 2
            series:
              - entity: sensor.temp_nina
                yaxis_id: first
                name: température
                unit: °C
                color: orange
                type: area
                show:
                  extremas: true
                  in_brush: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
              - entity: sensor.hum_nina
                yaxis_id: second
                name: humidité
                unit: '%'
                color: dodgerblue
                type: area
                show:
                  extremas: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
  - theme: Backend-selected
    title: Escalier
    path: Escalier
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:stairs
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:stairs-up
                    layout: icon|name
                    name: Escalier et palier
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Capteurs" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 4px;
                    border-color: rgba(12, 12, 14, 0.2);
                    border-style: outset;
                    border-width: 1px;
                    box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3);
                  }
                cards:
                  - type: custom:button-card
                    entity: sensor.mouv_palier_lum
                    name: |
                      [[[ return variables.var_name_lum]]]
                    template:
                      - carte_badge
                      - state_luminosite
                    show_state: true
                    show_label: false
                  - type: custom:button-card
                    entity: binary_sensor.mouv_escalier
                    name: Escalier
                    show_state: false
                    template:
                      - carte_badge
                      - state_rouge
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_palier
                    name: Palier
                    show_state: false
                    template:
                      - carte_badge
                      - state_rouge
                      - state_unavailable
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                entity: light.escaliers
                template:
                  - titre_section
                name: |
                  [[[ return "Lumières" ]]]
              - entity: light.escaliers
                name: Escalier et palier
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - type: custom:button-card
                    entity: light.escalier
                    name: Escalier
                    icon: mdi:stairs-up
                    template:
                      - carte_lumiere
                  - type: custom:button-card
                    entity: light.palier
                    name: Palier
                    icon: mdi:home
                    template:
                      - carte_lumiere
              - type: custom:light-entity-card
                entity: light.escaliers
                shorten_cards: false
                consolidate_entities: true
                child_card: true
                hide_header: true
                header: Toutes les lampes
                color_wheel: true
                persist_features: true
                brightness: true
                color_temp: true
                white_value: false
                color_picker: false
                smooth_color_wheel: true
                speed: false
                intensity: false
                force_features: false
                show_slider_percent: true
                full_width_sliders: false
                brightness_icon: weather-sunny
                white_icon: file-word-box
                temperature_icon: thermometer
                speed_icon: speedometer
                intensity_icon: transit-connection-horizontal
                effects_list: false
                style: >
                  ha-card {
                    margin: 25px 2px !important;
                  } ha-card > div.light-entity-card__header >
                  div.light-entity-card__title {
                    font-size: 14px !important;
                    font-weight: 500;
                  }
              - type: custom:rgb-light-card
                entity: light.escaliers
                justify: around
                size: 18
                colors:
                  - color_temp: 153
                    brightness: 255
                    icon_color: white
                  - color_temp: 357
                    brightness: 255
                  - color_temp: 451
                    brightness: 255
                  - rgb_color:
                      - 255
                      - 170
                      - 0
                    brightness: 255
                    icon_color: linear-gradient(15deg, rgb(255,170,0), rgb(255,225,165))
                  - rgb_color:
                      - 255
                      - 0
                      - 0
                    brightness: 255
                    icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                  - rgb_color:
                      - 244
                      - 38
                      - 255
                    brightness: 255
                    icon_color: linear-gradient(15deg, rgb(244,38,255), rgb(255,138,255))
                  - rgb_color:
                      - 0
                      - 222
                      - 255
                    brightness: 255
                    icon_color: linear-gradient(15deg, rgb(0,222,255), rgb(140,240,255))
                  - rgb_color:
                      - 0
                      - 0
                      - 255
                    brightness: 255
                    icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                style: |
                  * {
                    margin-bottom: 6px !important;
                  }
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Réglages" ]]]
              - entity: automation.palier_allume_sur_mouvement
                name: Allumage auto
                icon: mdi:lightbulb-on-outline
            state_color: true
            show_header_toggle: false
  - theme: Backend-selected
    subview: true
    title: SDB
    path: SDB
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:shower-head
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: phu:rooms-bathroom
                    layout: icon|name
                    name: Salle de bain
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Capteurs" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 4px;
                    border-color: rgba(12, 12, 14, 0.2);
                    border-style: outset;
                    border-width: 1px;
                    box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3);
                  }
                cards:
                  - type: custom:button-card
                    entity: sensor.temp_salle_de_bain
                    name: Température
                    template:
                      - carte_badge
                      - state_temp
                      - state_unavailable
                    show_state: true
                    show_label: false
                  - type: custom:button-card
                    entity: sensor.hum_salle_de_bain
                    name: Humidité
                    show_state: false
                    template:
                      - carte_badge
                      - state_humidite
                      - state_unavailable
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Appareils  " ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - entity: switch.radiateur
                    name: Chauffage
                    type: custom:button-card
                    show_state: false
                    template:
                      - carte_badge
                      - last_changed
                      - state_bleu
                      - state_unavailable
                  - entity: switch.radiateur
                    name: Prise conso
                    icon: mdi:flash
                    type: custom:button-card
                    show_state: false
                    show_label: true
                    template:
                      - carte_badge
                      - state_bleu
                      - state_unavailable
                    label: >
                      [[[return states['sensor.radiateur_active_power'].state+"
                      W"]]]
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Musique  " ]]]
              - type: custom:mini-media-player
                entity: media_player.la_salle_de_bain
                artwork: material
                icon: mdi:speaker
                hide:
                  source: true
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Annonce  " ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_salle_de_bain
                        name: Message à envoyer
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_salle_de_bain
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: custom:apexcharts-card
            header:
              show: true
              title: Salle de bain
              show_states: true
              colorize_states: true
            experimental:
              brush: true
            graph_span: 3d
            brush:
              selection_span: 24h
            apex_config:
              grid:
                show: true
              legend:
                fontSize: 12px
                height: 40
              dataLabels:
                enabled: false
              stroke:
                width: 3
                curve: smooth
              fill:
                type: gradient
                gradient:
                  type: vertical
                  shadeIntensity: 0.8
                  inverseColors: false
                  opacityFrom: 0.5
                  opacityTo: 0
                  stops:
                    - - 0
                      - 50
                      - 100
            yaxis:
              - id: first
                decimals: 1
                apex_config:
                  tickAmount: 4
              - id: second
                opposite: true
                decimals: 0
                apex_config:
                  tickAmount: 4
              - id: third
                opposite: true
                decimals: 0
                apex_config:
                  tickAmount: 4
            all_series_config:
              stroke_width: 2
            series:
              - entity: sensor.temp_salle_de_bain
                yaxis_id: first
                name: température
                unit: °C
                color: orange
                type: area
                show:
                  extremas: true
                  in_brush: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
              - entity: sensor.hum_salle_de_bain
                yaxis_id: second
                name: humidité
                unit: '%'
                color: dodgerblue
                type: area
                show:
                  extremas: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
              - entity: sensor.radiateur_active_power
                yaxis_id: third
                name: conso
                unit: W
                color: red
                type: column
                show:
                  extremas: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
  - theme: Backend-selected
    title: Entrée
    subview: true
    path: Entrée
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:spotlight-beam
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: phu:rooms-hallway
                        layout: icon|name
                        name: Entrée
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Capteurs" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        padding: 5px;
                      }
                    cards:
                      - type: custom:button-card
                        entity: sensor.moniteur_qualite_air_temperature
                        name: Temp
                        template:
                          - carte_badge
                          - state_temp
                          - state_unavailable
                        label: |
                          [[[
                            return entity.state+"°"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: sensor.moniteur_qualite_air_humidite
                        name: Hum
                        template:
                          - carte_badge
                          - state_humidite
                          - state_unavailable
                        label: |
                          [[[
                            return entity.state+"%"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: binary_sensor.porte_entree
                        name: Entrée
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: lock.serrure_entree
                        name: Serrure
                        template:
                          - carte_badge
                          - state_serrure
                          - style_off
                        show_label: true
                        show_name: true
                        double_tap_action:
                          action: call-service
                          service: script.entree_serrure_toggle
                          service_data: null
                      - type: custom:button-card
                        entity: binary_sensor.mouv_couloir
                        name: Couloir
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Lumières" ]]]
                  - entity: light.entree_et_couloir
                    name: Toutes les lampes
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card {
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:button-card
                        entity: light.couloir
                        name: Couloir
                        template:
                          - carte_lumiere
                      - type: custom:button-card
                        entity: light.entree
                        name: Entrée
                        template:
                          - carte_lumiere
                      - type: custom:button-card
                        entity: light.aqara_hub_54e1
                        name: Veilleuse
                        template:
                          - carte_lumiere
                      - type: custom:button-card
                        entity: light.veranda
                        name: Véranda
                        template:
                          - carte_lumiere
                  - type: custom:light-entity-card
                    entity: light.entree_et_couloir
                    shorten_cards: false
                    consolidate_entities: true
                    child_card: true
                    hide_header: true
                    header: Toutes les lampes
                    color_wheel: true
                    persist_features: true
                    brightness: true
                    color_temp: true
                    white_value: false
                    color_picker: false
                    smooth_color_wheel: true
                    speed: false
                    intensity: false
                    force_features: false
                    show_slider_percent: true
                    full_width_sliders: false
                    brightness_icon: weather-sunny
                    white_icon: file-word-box
                    temperature_icon: thermometer
                    speed_icon: speedometer
                    intensity_icon: transit-connection-horizontal
                    effects_list: false
                    style: >
                      ha-card {
                        margin: 25px 2px !important;
                      } ha-card > div.light-entity-card__header >
                      div.light-entity-card__title {
                        font-size: 14px !important;
                        font-weight: 500;
                      }
                  - type: custom:rgb-light-card
                    entity: light.entree_et_couloir
                    justify: around
                    size: 20
                    colors:
                      - color_temp: 153
                        brightness: 255
                        icon_color: white
                      - color_temp: 357
                        brightness: 255
                      - color_temp: 451
                        brightness: 255
                      - rgb_color:
                          - 255
                          - 170
                          - 0
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(255,170,0),
                          rgb(255,225,165))
                      - rgb_color:
                          - 255
                          - 0
                          - 0
                        brightness: 255
                        icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                      - rgb_color:
                          - 244
                          - 38
                          - 255
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(244,38,255),
                          rgb(255,138,255))
                      - rgb_color:
                          - 0
                          - 222
                          - 255
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(0,222,255),
                          rgb(140,240,255))
                      - rgb_color:
                          - 0
                          - 0
                          - 255
                        brightness: 255
                        icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                    style: |
                      * {
                        margin-bottom: 6px !important;
                      }
                state_color: false
                show_header_toggle: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:cctv
                    layout: icon|name
                    name: Caméras
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none; 
                    border-radius: 15px !important;
                  }
                cards:
                  - type: picture-entity
                    title: Entrée
                    entity: camera.camera_entree
                    show_name: false
                    show_state: false
                    style: |
                      ha-card > div.box {
                        font-family: Avenir;
                        background: none;
                        border-radius: 15px !important;
                      }
                        ha-card {
                        border-radius: 15px !important;
                      }
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - entity: camera.aarlo_sonnette
                title: Sonnette
                hide:
                  - date
                global: small
                image_click: play
                image_view: arlo-stream
                show:
                  - motion
                  - sound
                  - image_date
                  - signal_strength
                  - captured_today
                  - image_date
                  - on_off
                  - snapshot
                  - battery_level
                top_date: true
                top_status: false
                top_title: false
                type: custom:aarlo-glance
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: custom:apexcharts-card
            header:
              show: true
              title: Couloir
              show_states: true
              colorize_states: true
            experimental:
              brush: true
            graph_span: 3d
            brush:
              selection_span: 24h
            apex_config:
              grid:
                show: true
              legend:
                fontSize: 12px
                height: 40
              dataLabels:
                enabled: false
              stroke:
                width: 3
                curve: smooth
              fill:
                type: gradient
                gradient:
                  type: vertical
                  shadeIntensity: 0.8
                  inverseColors: false
                  opacityFrom: 0.5
                  opacityTo: 0
                  stops:
                    - - 0
                      - 50
                      - 100
            yaxis:
              - id: first
                decimals: 1
                apex_config:
                  tickAmount: 4
              - id: second
                opposite: true
                decimals: 0
                apex_config:
                  tickAmount: 4
            all_series_config:
              stroke_width: 2
            series:
              - entity: sensor.temp_couloir_rdc
                yaxis_id: first
                name: température
                unit: °C
                color: orange
                type: area
                show:
                  extremas: true
                  in_brush: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
              - entity: sensor.hum_couloir_rdc
                yaxis_id: second
                name: humidité
                unit: '%'
                color: dodgerblue
                type: area
                show:
                  extremas: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
  - theme: Backend-selected
    title: Lavabo
    subview: true
    path: Lavabo
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:faucet
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:hand-wash
                    layout: icon|name
                    name: Salle d'eau
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Capteurs" ]]]
              - type: custom:button-card
                entity: binary_sensor.mouv_salle_d_eau
                show_label: true
                template:
                  - base
                  - last_changed
                  - state_rouge
                  - state_unavailable
                show_name: true
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Lumières" ]]]
              - entity: light.lavabo
                name: Toutes les lampes
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;      
                  }
                cards:
                  - type: custom:button-card
                    entity: light.wc_gauche
                    name: Spot gauche
                    template:
                      - carte_lumiere
                  - type: custom:button-card
                    entity: light.wc_droit
                    name: Spot droit
                    template:
                      - carte_lumiere
              - type: custom:light-entity-card
                entity: light.lavabo
                shorten_cards: false
                consolidate_entities: true
                child_card: true
                hide_header: true
                header: Toutes les lampes
                color_wheel: true
                persist_features: true
                brightness: true
                color_temp: true
                white_value: false
                color_picker: true
                smooth_color_wheel: true
                speed: false
                intensity: false
                force_features: false
                show_slider_percent: true
                full_width_sliders: false
                brightness_icon: weather-sunny
                white_icon: file-word-box
                temperature_icon: thermometer
                speed_icon: speedometer
                intensity_icon: transit-connection-horizontal
                effects_list: false
                style: >
                  ha-card {
                    margin: 25px 2px !important;
                  } ha-card > div.light-entity-card__header >
                  div.light-entity-card__title {
                    font-size: 14px !important;
                    font-weight: 500;
                  }
            state_color: false
            show_header_toggle: false
  - theme: Backend-selected
    title: Parents
    path: Parents
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:bed-king
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: phu:rooms-bedroom
                        layout: icon|name
                        name: Chambre parentale
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Capteurs" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        padding: 4px;
                        border-color: rgba(12, 12, 14, 0.2);
                        border-style: outset;
                        border-width: 1px;
                        box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3);
                      }
                    cards:
                      - type: custom:button-card
                        entity: sensor.temp_parents
                        name: Température
                        template:
                          - carte_badge
                          - state_unavailable
                          - state_temp
                        label: |
                          [[[
                            return entity.state+"°"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: sensor.hum_parents
                        name: Humidité
                        template:
                          - carte_badge
                          - state_unavailable
                          - state_humidite
                        label: |
                          [[[
                            return entity.state+"%"
                          ]]]
                        tap_action:
                          action: more-info
                      - square: false
                        columns: 1
                        type: grid
                        cards:
                          - type: custom:button-card
                            template:
                              - carte_badge
                              - last_changed
                              - state_rouge
                              - state_unavailable
                            entity: binary_sensor.porte_chambre_parents
                            name: Porte-fenêtre
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Scènes" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;      
                      }
                    cards:
                      - type: custom:button-card
                        entity: scene.chambre_parents_ambiance_normale
                        template:
                          - carte_scene
                        name: Normal
                        styles:
                          icon:
                            - color: gold
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.chambre_parents_ambiance_normale
                      - type: custom:button-card
                        entity: script.ambiance_cine_chevet_parents
                        name: Ciné
                        template:
                          - carte_scene
                        styles:
                          icon:
                            - color: purple
                        tap_action:
                          action: call-service
                          service: script.turn_on
                          service_data:
                            entity_id: script.ambiance_cine_chevet_parents
                      - type: custom:button-card
                        name: 'OFF'
                        entity: light.parents
                        icon: mdi:lightbulb-multiple-off
                        template:
                          - carte_scene
                        tap_action:
                          action: call-service
                          service: light.turn_off
                          service_data:
                            entity_id: light.parents
                        double_tap_action:
                          action: more-info
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Lumières" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;      
                      }
                    cards:
                      - type: custom:button-card
                        entity: light.lustre_parents
                        name: Lustre
                        template:
                          - carte_lumiere
                      - type: custom:button-card
                        entity: light.chevet
                        name: Chevet
                        template:
                          - carte_lumiere
                  - type: custom:light-entity-card
                    entity: light.parents
                    shorten_cards: false
                    consolidate_entities: true
                    child_card: true
                    hide_header: true
                    header: Toutes les lampes
                    color_wheel: true
                    persist_features: true
                    brightness: true
                    color_temp: true
                    white_value: false
                    color_picker: false
                    smooth_color_wheel: true
                    speed: false
                    intensity: false
                    force_features: false
                    show_slider_percent: true
                    full_width_sliders: false
                    brightness_icon: weather-sunny
                    white_icon: file-word-box
                    temperature_icon: thermometer
                    speed_icon: speedometer
                    intensity_icon: transit-connection-horizontal
                    effects_list: false
                    style: >
                      ha-card {
                        margin: 25px 2px !important;
                      } ha-card > div.light-entity-card__header >
                      div.light-entity-card__title {
                        font-size: 14px !important;
                        font-weight: 500;
                      }
                  - type: custom:rgb-light-card
                    entity: light.parents
                    justify: around
                    size: 20
                    colors:
                      - color_temp: 153
                        brightness: 255
                        icon_color: white
                      - color_temp: 357
                        brightness: 255
                      - color_temp: 451
                        brightness: 255
                      - rgb_color:
                          - 255
                          - 170
                          - 0
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(255,170,0),
                          rgb(255,225,165))
                      - rgb_color:
                          - 255
                          - 0
                          - 0
                        brightness: 255
                        icon_color: linear-gradient(15deg, red, rgb(255,100,100))
                      - rgb_color:
                          - 244
                          - 38
                          - 255
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(244,38,255),
                          rgb(255,138,255))
                      - rgb_color:
                          - 0
                          - 222
                          - 255
                        brightness: 255
                        icon_color: >-
                          linear-gradient(15deg, rgb(0,222,255),
                          rgb(140,240,255))
                      - rgb_color:
                          - 0
                          - 0
                          - 255
                        brightness: 255
                        icon_color: linear-gradient(15deg, blue, rgb(100,100,255))
                    style: |
                      * {
                        margin-bottom: 6px !important;
                      }
                state_color: false
                show_header_toggle: false
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Appareils" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: custom:button-card
                    entity: switch.tele_des_parents
                    name: TV Parents
                    template:
                      - base
                      - last_changed
                      - state_bleu
                      - state_unavailable
                  - type: custom:button-card
                    entity: switch.moustique_parents
                    name: Anti-moustiques
                    template:
                      - base
                      - last_changed
                      - state_bleu
                      - state_unavailable
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Multimédias" ]]]
              - type: custom:mini-media-player
                entity: media_player.cube_tv
                artwork: material
              - type: custom:mini-media-player
                entity: media_player.chambre_des_parents
                artwork: material
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: custom:apexcharts-card
            header:
              show: true
              title: Chambre parents
              show_states: true
              colorize_states: true
            experimental:
              brush: true
            graph_span: 3d
            brush:
              selection_span: 24h
            apex_config:
              grid:
                show: true
              legend:
                fontSize: 12px
                height: 40
              dataLabels:
                enabled: false
              stroke:
                width: 3
                curve: smooth
              fill:
                type: gradient
                gradient:
                  type: vertical
                  shadeIntensity: 0.8
                  inverseColors: false
                  opacityFrom: 0.5
                  opacityTo: 0
                  stops:
                    - - 0
                      - 50
                      - 100
            yaxis:
              - id: first
                decimals: 1
                apex_config:
                  tickAmount: 4
              - id: second
                opposite: true
                decimals: 0
                apex_config:
                  tickAmount: 4
            all_series_config:
              stroke_width: 2
            series:
              - entity: sensor.temp_parents
                yaxis_id: first
                name: température
                unit: °C
                color: orange
                type: area
                show:
                  extremas: true
                  in_brush: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
              - entity: sensor.hum_parents
                yaxis_id: second
                name: humidité
                unit: '%'
                color: dodgerblue
                type: area
                show:
                  extremas: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
  - theme: Backend-selected
    subview: true
    title: Garage
    path: Garage
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:garage-open-variant
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:garage-open-variant
                        layout: icon|name
                        name: Garage
                        style:
                          name:
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                          icon:
                            '--mdc-icon-size': 20px
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Capteurs" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        padding: 4px;
                        border-color: rgba(12, 12, 14, 0.2);
                        border-style: outset;
                        border-width: 1px;
                        box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3);
                      }
                    cards:
                      - type: custom:button-card
                        entity: sensor.sonde_garage_temperature
                        name: Température
                        template:
                          - carte_badge
                          - state_unavailable
                          - state_temp
                        label: |
                          [[[
                            return entity.state+"°"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: sensor.sonde_garage_humidite
                        name: Humidité
                        template:
                          - carte_badge
                          - state_unavailable
                          - state_humidite
                        label: |
                          [[[
                            return entity.state+"%"
                          ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: sensor.sonde_garage_pression
                        name: Pression
                        template:
                          - carte_badge
                          - state_unavailable
                        label: |
                          [[[
                            return entity.state+"hPa"
                          ]]]
                        tap_action:
                          action: more-info
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        padding: 4px;
                        border-color: rgba(12, 12, 14, 0.2);
                        border-style: outset;
                        border-width: 1px;
                        box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3);
                      }
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.porte_cagibi
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.porte_garage
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                      - type: custom:button-card
                        entity: binary_sensor.mouv_garage
                        template:
                          - carte_badge
                          - state_rouge
                          - style_off
                        show_label: true
                        show_name: true
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Lumières" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - type: custom:button-card
                        entity: light.cagibi
                        name: Cagibi
                        template:
                          - base
                          - last_changed
                          - state_lumiere
                          - state_unavailable
                  - type: custom:light-entity-card
                    entity: light.cagibi
                    shorten_cards: false
                    consolidate_entities: true
                    child_card: true
                    hide_header: true
                    header: Toutes les lampes
                    color_wheel: true
                    persist_features: true
                    brightness: true
                    color_temp: true
                    white_value: false
                    color_picker: false
                    smooth_color_wheel: true
                    speed: false
                    intensity: false
                    force_features: false
                    show_slider_percent: true
                    full_width_sliders: false
                    brightness_icon: weather-sunny
                    white_icon: file-word-box
                    temperature_icon: thermometer
                    speed_icon: speedometer
                    intensity_icon: transit-connection-horizontal
                    effects_list: false
                    style: >
                      ha-card {
                        margin: 25px 2px !important;
                      } ha-card > div.light-entity-card__header >
                      div.light-entity-card__title {
                        font-size: 14px !important;
                        font-weight: 500;
                      }
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Appareils" ]]]
                  - type: custom:button-card
                    entity: lock.garage
                    name: Serrure garage
                    template:
                      - base
                      - last_changed
                      - state_alarme
                      - state_unavailable
                  - type: custom:button-card
                    entity: input_select.lave_linge
                    name: Lave linge
                    template:
                      - base
                      - last_changed
                      - state_bleu
                      - state_unavailable
                state_color: false
                show_header_toggle: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Musique" ]]]
                  - type: custom:mini-media-player
                    entity: media_player.le_garage
                    artwork: material
                    icon: mdi:speaker
                    hide:
                      source: true
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Caméra" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - camera_view: live
                        type: picture-glance
                        title: Garage
                        entities:
                          - entity: alarm_control_panel.camera_g2hpro
                          - entity: binary_sensor.mouv_camera_g2hpro
                        camera_image: camera.camera_g2hpro
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Réglages" ]]]
                  - entity: automation.cagibi_eclairage_off
                    state_color: true
                    name: Cagibi extinction auto
                    icon: mdi:lightbulb-off
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: custom:apexcharts-card
            header:
              show: true
              title: Garage
              show_states: true
              colorize_states: true
            experimental:
              brush: true
            graph_span: 3d
            brush:
              selection_span: 24h
            apex_config:
              grid:
                show: true
              legend:
                fontSize: 12px
                height: 40
              dataLabels:
                enabled: false
              stroke:
                width: 3
                curve: smooth
              fill:
                type: gradient
                gradient:
                  type: vertical
                  shadeIntensity: 0.8
                  inverseColors: false
                  opacityFrom: 0.5
                  opacityTo: 0
                  stops:
                    - - 0
                      - 50
                      - 100
            yaxis:
              - id: first
                decimals: 1
                apex_config:
                  tickAmount: 4
              - id: second
                opposite: true
                decimals: 0
                apex_config:
                  tickAmount: 4
            all_series_config:
              stroke_width: 2
            series:
              - entity: sensor.sonde_garage_temperature
                yaxis_id: first
                name: température
                unit: °C
                color: orange
                type: area
                show:
                  extremas: true
                  in_brush: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
              - entity: sensor.sonde_garage_humidite
                yaxis_id: second
                name: humidité
                unit: '%'
                color: dodgerblue
                type: area
                show:
                  extremas: true
                float_precision: 1
                group_by:
                  duration: 10min
                  func: max
  - theme: Backend-selected
    subview: true
    title: Système & RPI
    path: systeme
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:raspberry-pi
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:update
                    layout: icon|name
                    name: Mises à jour
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
          - square: false
            columns: 2
            type: grid
            cards:
              - type: custom:button-card
                entity: update.home_assistant_core_update
                name: Core
                icon: mdi:home-assistant
                template:
                  - base
                  - carte_systeme
                  - state_carte
                  - state_unavailable
                label: |
                  [[[
                    return states['update.home_assistant_core_update'].attributes.installed_version
                  ]]]
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 1
                      cards:
                        - type: custom:button-card
                          show_icon: true
                          icon: mdi:update
                          name: |
                            [[[
                              if (states['update.home_assistant_core_update'].state == "on")
                                return states['update.home_assistant_core_update'].attributes.latest_version
                              return "Aucune"
                            ]]]
                          template:
                            - carte_systeme_info
                          styles:
                            card:
                              - height: 25px
                            name:
                              - font-size: 13px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_core_update'].state == "on")
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]
                            icon:
                              - padding-top: 15px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_core_update'].state == "on")
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]
                          tap_action:
                            action: none
                        - type: custom:button-card
                          show_icon: true
                          icon: mdi:file-document
                          name: Lire la doc
                          template:
                            - carte_systeme_info
                          styles:
                            card:
                              - height: 25px
                            name:
                              - font-size: 13px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_core_update'].state == "on")
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]
                            icon:
                              - padding-top: 15px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_core_update'].state == "on")
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]
                          tap_action:
                            confirmation:
                              text: '[[[ return `Lire la doc ?` ]]]'
                            action: url
                            url_path: >-
                              https://www.home-assistant.io/latest-release-notes/
                        - type: custom:button-card
                          show_icon: true
                          icon: mdi:send-circle
                          name: Mise à jour
                          template:
                            - carte_systeme_info
                          styles:
                            card:
                              - height: 25px
                            name:
                              - font-size: 13px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_core_update'].state == "on")
                                      return "red"
                                    return "dimgrey"
                                  ]]]
                            icon:
                              - width: 22px
                              - padding-top: 15px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_core_update'].state == "on")
                                      return "red"
                                    return "dimgrey"
                                  ]]]
                              - width: 20px
                          tap_action:
                            confirmation:
                              text: >-
                                [[[ return `Attention, voulez-vous lancer la
                                mise à jour ?` ]]]
                            action: call-service
                            service: update.install
                            service_data:
                              entity_id: update.home_assistant_core_update
              - type: custom:button-card
                entity: update.home_assistant_supervisor_update
                name: Supervisor
                icon: mdi:home-assistant
                template:
                  - base
                  - carte_systeme
                  - state_carte
                  - state_unavailable
                label: |
                  [[[
                    return states['update.home_assistant_supervisor_update'].attributes.installed_version
                  ]]]
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 1
                      cards:
                        - type: custom:button-card
                          show_icon: true
                          icon: mdi:update
                          name: |
                            [[[
                              if (states['update.home_assistant_supervisor_update'].state == "on")
                                return states['update.home_assistant_supervisor_update'].attributes.latest_version
                              return "Aucune"
                            ]]]
                          template:
                            - carte_systeme_info
                          styles:
                            card:
                              - height: 25px
                            name:
                              - font-size: 13px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_supervisor_update'].state == "on")
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]
                            icon:
                              - padding-top: 15px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_supervisor_update'].state == "on")
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]
                          tap_action:
                            action: none
                        - type: custom:button-card
                          show_icon: true
                          icon: mdi:file-document
                          name: Lire la doc
                          template:
                            - carte_systeme_info
                          styles:
                            card:
                              - height: 25px
                            name:
                              - font-size: 13px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_supervisor_update'].state == "on")
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]  
                            icon:
                              - padding-top: 15px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_supervisor_update'].state == "on")
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]                    
                          tap_action:
                            confirmation:
                              text: '[[[ return `Lire la doc ?` ]]]'
                            action: url
                            url_path: >-
                              https://github.com/home-assistant/supervisor/releases
                        - type: custom:button-card
                          show_icon: true
                          icon: mdi:send-circle
                          name: Mise à jour
                          template:
                            - carte_systeme_info
                          styles:
                            card:
                              - height: 25px
                            name:
                              - font-size: 13px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_supervisor_update'].state == "on")
                                      return "red"
                                    return "dimgrey"
                                  ]]] 
                            icon:
                              - padding-top: 15px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_supervisor_update'].state == "on")
                                      return "red"
                                    return "dimgrey"
                                  ]]]  
                          tap_action:
                            confirmation:
                              text: >-
                                [[[ return `Attention, voulez-vous lancer la
                                mise à jour ?` ]]]
                            action: call-service
                            service: update.install
                            service_data:
                              entity_id: update.home_assistant_supervisor_update
              - type: custom:button-card
                entity: update.home_assistant_operating_system_update
                name: HassOS
                icon: mdi:home-assistant
                template:
                  - base
                  - carte_systeme
                  - state_carte
                  - state_unavailable
                label: |
                  [[[
                    return states['sensor.home_assistant_operating_system_version'].state
                  ]]]
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 1
                      cards:
                        - type: custom:button-card
                          show_icon: true
                          icon: mdi:update
                          name: |
                            [[[
                              if (states['update.home_assistant_operating_system_update'].state == "on")
                                return states['sensor.home_assistant_operating_system_newest_version'].state
                              return "Aucune"
                            ]]]
                          template:
                            - carte_systeme_info
                          styles:
                            card:
                              - height: 25px
                            name:
                              - font-size: 13px
                              - color: |
                                  [[[
                                   if (states['update.home_assistant_operating_system_update'].state == "on")
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]
                            icon:
                              - padding-top: 15px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_operating_system_update'].state == "on")
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]
                          tap_action:
                            action: none
                        - type: custom:button-card
                          show_icon: true
                          name: Lire la doc
                          icon: mdi:file-document
                          template:
                            - carte_systeme_info
                          styles:
                            card:
                              - height: 25px
                            name:
                              - font-size: 13px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_operating_system_update'].state == "on")
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]
                            icon:
                              - padding-top: 15px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_operating_system_update'].state == "on")
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]
                          tap_action:
                            confirmation:
                              text: '[[[ return `Lire la doc ?` ]]]'
                            action: url
                            url_path: >-
                              https://github.com/home-assistant/operating-system/releases
                        - type: custom:button-card
                          show_icon: true
                          icon: mdi:send-circle
                          name: Mise à jour
                          template:
                            - carte_systeme_info
                          styles:
                            card:
                              - height: 25px
                            name:
                              - font-size: 13px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_operating_system_update'].state == "on")
                                      return "red"
                                    return "dimgrey"
                                  ]]] 
                            icon:
                              - padding-top: 15px
                              - color: |
                                  [[[
                                    if (states['update.home_assistant_operating_system_update'].state == "on")
                                      return "red"
                                    return "dimgrey"
                                  ]]] 
                              - width: 20px
                          tap_action:
                            confirmation:
                              text: >-
                                [[[ return `Attention, voulez-vous lancer la
                                mise à jour ?` ]]]
                            action: call-service
                            service: update.install
                            service_data:
                              entity_id: update.home_assistant_operating_system_update
              - type: custom:button-card
                entity: sensor.hacs
                name: Hacs
                icon: mdi:package
                template:
                  - base
                  - carte_systeme
                  - state_unavailable
                label: |
                  [[[
                    if (states['sensor.hacs'].state > 1)
                      return states['sensor.hacs'].state+" mises à jour"
                    return '0 mise à jour'
                  ]]]
                styles:
                  icon:
                    - color: |
                        [[[
                          if (states['sensor.hacs'].state > 1)
                            return 'var(--custom-icon-color-blue)'
                          return 'var(--icon_off)'
                        ]]]
                  img_cell:
                    - background-color: |
                        [[[
                          if (states['sensor.hacs'].state > 1)
                            return 'var(--custom-img-cell-color-blue)'
                          return 'var(--pastille_off)'
                        ]]]
                  card:
                    - background-color: |
                        [[[
                          if (states['sensor.hacs'].state > 1)
                            return 'var(--custom-card-color-blue)'
                          return ''
                        ]]]
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 1
                      cards:
                        - type: custom:button-card
                          entity: input_boolean.sidecar_show_maj_hacs
                          icon: mdi:button-pointer
                          show_state: false
                          name: Détails des MàJ
                          template:
                            - carte_systeme_info
                          styles:
                            card:
                              - height: 25px
                            name:
                              - font-size: 13px
                              - color: |
                                  [[[
                                    if (states['sensor.hacs'].state > 1)
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]] 
                            icon:
                              - padding-top: 15px
                              - color: |
                                  [[[
                                    if (states['sensor.hacs'].state > 1)
                                      return "lightgrey"
                                    return "dimgrey"
                                  ]]]                  
                          tap_action:
                            service: call-service
                            action: toggle
                        - type: custom:button-card
                          icon: mdi:send-circle
                          name: Redirection hacs
                          template:
                            - carte_systeme_info
                          styles:
                            card:
                              - height: 25px
                            icon:
                              - padding-top: 15px
                              - color: red
                            name:
                              - color: red
                              - font-size: 13px
                          tap_action:
                            confirmation:
                              text: '[[[ return `Redirection vers hacs ?` ]]]'
                            action: navigate
                            navigation_path: /hacs/entry
          - type: conditional
            conditions:
              - entity: input_boolean.sidecar_show_maj_hacs
                state: 'on'
            card:
              type: markdown
              content: >-
                <b>Mise à jour Hacs :</b><br>  {% if states('sensor.hacs') |
                float == 0  %} Aucune {% elif states('sensor.hacs') | float ==
                1  %} Aucune {%- else  %} {% for repo in
                states.sensor.hacs.attributes.repositories -%}- {{
                repo.display_name }} ({{ repo["available_version"] }})<br> {%
                endfor %}  {%- endif -%}
              style: |
                ha-card {
                  font-size: 90%;
                  font-family: Avenir;
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:home-assistant
                    layout: icon|name
                    name: Système
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Raspberry" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 5px;
                  }
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.rpi_power_status
                    name: Alim RPI
                    template:
                      - carte_badge
                      - state_unavailable
                    show_state: true
                    show_label: false
                    styles:
                      img_cell:
                        - background-color: |
                            [[[
                              if (entity.state == 'off')
                                return "var(--custom-img-cell-color-blue)"
                            ]]]
                      icon:
                        - color: |
                            [[[
                              if (entity.state == 'off')
                                return "var(--custom-icon-color-blue)"
                            ]]]
                  - type: custom:button-card
                    entity: sensor.uptime_ha
                    name: Démarrage
                    icon: mdi:restart
                    show_label: false
                    show_state: true
                    template:
                      - carte_badge
                      - state_unavailable
                  - type: custom:button-card
                    entity: sensor.cpu_temperature
                    name: CPU
                    show_label: false
                    show_state: true
                    template:
                      - carte_badge
                      - state_bleu_rouge
                      - state_unavailable
                  - type: custom:button-card
                    entity: sensor.memory_use_percent
                    name: Mémoire
                    show_label: false
                    show_state: true
                    template:
                      - carte_badge
                      - state_bleu_rouge
                      - state_unavailable
                  - type: custom:button-card
                    entity: sensor.processor_use_percent
                    name: Processeur
                    show_label: false
                    show_state: true
                    template:
                      - carte_badge
                      - state_bleu_rouge
                      - state_unavailable
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Livebox & Tenda Nova" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 5px;
                  }
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.wan_status
                    name: Livebox
                    template:
                      - carte_badge
                      - state_bleu_rouge
                      - state_unavailable
                    show_state: true
                    show_label: false
                  - type: custom:button-card
                    entity: switch.tenda_naova
                    name: Prise Tenda
                    template:
                      - carte_badge
                      - state_bleu_rouge
                      - state_unavailable
                    show_state: true
                    show_label: false
                  - type: custom:button-card
                    entity: device_tracker.nova_d832141a9f50
                    icon: mdi:arrange-bring-forward
                    name: Tenda 1
                    template:
                      - carte_badge
                      - state_bleu_rouge
                      - state_unavailable
                    show_state: true
                    show_label: false
                  - type: custom:button-card
                    entity: device_tracker.nova_d832141a9f48
                    icon: mdi:arrange-send-backward
                    name: Tenda 2
                    template:
                      - carte_badge
                      - state_bleu_rouge
                      - state_unavailable
                    show_state: true
                    show_label: false
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Maintenance" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 5px;
                  }
                cards:
                  - type: custom:button-card
                    entity: script.backup_full_ha
                    name: Sauvegarde HA
                    template:
                      - carte_badge
                      - state_bleu
                      - state_unavailable
                    show_label: false
                    tap_action:
                      confirmation:
                        text: '[[[ return `Sauvegarde HA ?` ]]]'
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.backup_full_ha
                  - type: custom:button-card
                    entity: script.restart_ha
                    name: Restart HA
                    icon: mdi:reload-alert
                    template:
                      - carte_badge
                      - state_bleu
                      - state_unavailable
                    show_label: false
                    tap_action:
                      confirmation:
                        text: '[[[ return `Reboot HA ?` ]]]'
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.restart_ha
                  - type: custom:button-card
                    entity: script.redemarrer_le_pont_tenda_nova
                    name: Reboot Tenda
                    template:
                      - carte_badge
                      - state_bleu
                      - state_unavailable
                    show_label: false
                    tap_action:
                      confirmation:
                        text: '[[[ return `Reboot le pont Tenda ?` ]]]'
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.redemarrer_le_pont_tenda_nova
                    show_state: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:chart-line
                    layout: icon|name
                    name: Relevés
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:apexcharts-card
                header:
                  show: true
                  title: Raspberry
                  show_states: true
                  colorize_states: true
                graph_span: 3d
                now:
                  show: true
                  color: red
                  label: Maintenant
                apex_config:
                  chart:
                    height: 200px
                  grid:
                    show: false
                  legend:
                    fontSize: 12px
                    height: 40
                  dataLabels:
                    enabled: false
                  stroke:
                    width: 1
                    curve: smooth
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                yaxis:
                  - id: first
                    max: ~100
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                  - id: second
                    opposite: true
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                all_series_config:
                  stroke_width: 2
                series:
                  - entity: sensor.cpu_temperature
                    name: Température
                    yaxis_id: first
                    unit: '%'
                    color: tomato
                    type: area
                    fill_raw: last
                    show:
                      extremas: true
                      in_brush: false
                      header_color_threshold: true
                      legend_value: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: last
                  - entity: sensor.processor_use_percent
                    name: Processeur
                    yaxis_id: second
                    color: rgb(70, 180, 103)
                    type: area
                    fill_raw: last
                    show:
                      extremas: true
                      in_brush: false
                      header_color_threshold: true
                      legend_value: false
                    group_by:
                      duration: 10min
                      func: last
                  - entity: sensor.memory_use_percent
                    name: Mémoire
                    yaxis_id: second
                    color: dodgerblue
                    type: area
                    fill_raw: last
                    show:
                      extremas: true
                      in_brush: false
                      header_color_threshold: true
                      legend_value: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: last
  - theme: Backend-selected
    subview: true
    title: Plantes
    path: Plantes
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:flower
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "🌿 Dracaena " ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: custom:bar-card
                    name: ''
                    entity_row: true
                    direction: up
                    unit_of_measurement: null
                    positions:
                      value: outside
                      name: 'off'
                      indicator: inside
                      icon: inside
                    max: 50
                    height: 92
                    width: 70px
                    icon: mdi:thermometer
                    severity:
                      - color: rgb(176, 196, 222)
                        from: 0
                        to: 8.9
                      - color: rgb(70, 130, 180)
                        from: 9
                        to: 36
                      - color: rgb(180, 70, 70)
                        from: 36.1
                        to: 50
                    style: |-
                      bar-card-background {
                        background-color: "#223548";
                      }
                      bar-card-value {
                        font-size: 15px;
                        font-weight: bold;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                      }
                      bar-card-name {
                        margin-top: 20px;
                        font-size: 14px;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                        font-weight: bold;
                      }
                      bar-card-iconbar {
                        color: rgb(225,225,225);
                      }
                      bar-card-indicator {
                        color: rgb(225,225,225);
                      }
                    entities:
                      - entity: sensor.plante_temp_dracaena
                  - type: custom:bar-card
                    name: ''
                    entity_row: true
                    direction: up
                    unit_of_measurement: null
                    positions:
                      value: outside
                      name: 'off'
                      indicator: inside
                      icon: inside
                    max: 100
                    height: 92
                    width: 70px
                    icon: mdi:water
                    severity:
                      - color: rgb(180, 70, 70)
                        from: 0
                        to: 8.9
                      - color: rgb(70, 130, 180)
                        from: 9
                        to: 41
                      - color: rgb(180, 70, 70)
                        from: 41.1
                        to: 100
                    style: |-
                      bar-card-background {
                        background-color: "#223548";
                      }
                      bar-card-value {
                        font-size: 15px;
                        font-weight: bold;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                      }
                      bar-card-name {
                        margin-top: 20px;
                        font-size: 14px;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                        font-weight: bold;
                      }
                      bar-card-iconbar {
                        color: rgb(225,225,225);
                      }
                      bar-card-indicator {
                        color: rgb(225,225,225);
                      }
                    entities:
                      - entity: sensor.plante_hum_dracaena
                  - type: custom:bar-card
                    name: ''
                    entity_row: true
                    direction: up
                    unit_of_measurement: null
                    positions:
                      value: outside
                      name: 'off'
                      indicator: inside
                      icon: inside
                    max: 5000
                    height: 92
                    width: 70px
                    icon: mdi:brightness-5
                    severity:
                      - color: rgb(180, 70, 70)
                        from: 0
                        to: 1999
                      - color: rrgb(70, 130, 180)
                        from: 2000
                        to: 5000
                      - color: rgb(180, 70, 70)
                        from: 5001
                        to: 20000
                    style: |-
                      bar-card-background {
                        background-color: "#223548";
                      }
                      bar-card-value {
                        font-size: 15px;
                        font-weight: bold;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                      }
                      bar-card-name {
                        margin-top: 20px;
                        font-size: 14px;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                        font-weight: bold;
                      }
                      bar-card-iconbar {
                        color: rgb(225,225,225);
                      }
                      bar-card-indicator {
                        color: rgb(225,225,225);
                      }
                    entities:
                      - entity: sensor.plante_lum_dracaena
                  - type: custom:bar-card
                    name: ''
                    entity_row: true
                    direction: up
                    unit_of_measurement: null
                    positions:
                      value: outside
                      name: 'off'
                      indicator: inside
                      icon: inside
                    max: 1500
                    height: 92
                    width: 70px
                    severity:
                      - color: rgb(180, 70, 70)
                        from: 0
                        to: 199
                      - color: rgb(70, 130, 180)
                        from: 200
                        to: 1500
                      - color: rgb(180, 70, 70)
                        from: 1501
                        to: 3000
                    style: |-
                      bar-card-background {
                        background-color: "#223548";
                      }
                      bar-card-value {
                        font-size: 15px;
                        font-weight: bold;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                      }
                      bar-card-name {
                        margin-top: 20px;
                        font-size: 14px;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                        font-weight: bold;
                      }
                      bar-card-iconbar {
                        color: rgb(225,225,225);
                      }
                      bar-card-indicator {
                        color: rgb(225,225,225);
                      }
                    entities:
                      - entity: sensor.plante_fertilite_dracaena
              - type: custom:apexcharts-card
                header:
                  show: true
                  show_states: true
                  colorize_states: true
                graph_span: 7d
                apex_config:
                  grid:
                    show: false
                  legend:
                    fontSize: 12px
                    height: 40
                  dataLabels:
                    enabled: false
                  stroke:
                    width: 3
                    curve: smooth
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                yaxis:
                  - id: first
                    max: ~100
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                  - id: second
                    opposite: true
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                all_series_config:
                  stroke_width: 2
                series:
                  - entity: sensor.plante_hum_dracaena
                    name: humidité
                    yaxis_id: first
                    unit: '%'
                    color: rgb(70, 130, 180)
                    type: area
                    show:
                      extremas: true
                      in_brush: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
                  - entity: sensor.plante_fertilite_dracaena
                    name: fertilité du sol
                    yaxis_id: second
                    unit: µS/cm
                    color: rgb(70, 180, 103)
                    type: area
                    show:
                      extremas: true
                      in_brush: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "🐘 Pied d'Elephant " ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: custom:bar-card
                    name: ''
                    entity_row: true
                    direction: up
                    unit_of_measurement: null
                    positions:
                      value: outside
                      name: 'off'
                      indicator: inside
                      icon: inside
                    max: 50
                    height: 92
                    width: 70px
                    icon: mdi:thermometer
                    severity:
                      - color: rgb(180, 70, 70)
                        from: 0
                        to: 6.9
                      - color: rgb(70, 130, 180)
                        from: 7
                        to: 32
                      - color: rgb(180, 70, 70)
                        from: 32.1
                        to: 50
                    style: |-
                      bar-card-background {
                        background-color: "#223548";
                      }
                      bar-card-value {
                        font-size: 15px;
                        font-weight: bold;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                      }
                      bar-card-name {
                        margin-top: 20px;
                        font-size: 14px;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                        font-weight: bold;
                      }
                      bar-card-iconbar {
                        color: rgb(225,225,225);
                      }
                      bar-card-indicator {
                        color: rgb(225,225,225);
                      }
                    entities:
                      - entity: sensor.plante_temp_pied_elephant
                  - type: custom:bar-card
                    name: ''
                    entity_row: true
                    direction: up
                    unit_of_measurement: null
                    positions:
                      value: outside
                      name: 'off'
                      indicator: inside
                      icon: inside
                    max: 100
                    height: 92
                    width: 70px
                    icon: mdi:water
                    severity:
                      - color: rgb(180, 70, 70)
                        from: 0
                        to: 8.9
                      - color: rgb(70, 130, 180)
                        from: 9
                        to: 40
                      - color: rgb(180, 70, 70)
                        from: 41.1
                        to: 100
                    style: |-
                      bar-card-background {
                        background-color: "#223548";
                      }
                      bar-card-value {
                        font-size: 15px;
                        font-weight: bold;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                      }
                      bar-card-name {
                        margin-top: 20px;
                        font-size: 14px;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                        font-weight: bold;
                      }
                      bar-card-iconbar {
                        color: rgb(225,225,225);
                      }
                      bar-card-indicator {
                        color: rgb(225,225,225);
                      }
                    entities:
                      - entity: sensor.plante_hum_pied_elephant
                  - type: custom:bar-card
                    name: ''
                    entity_row: true
                    direction: up
                    unit_of_measurement: null
                    positions:
                      value: outside
                      name: 'off'
                      indicator: inside
                      icon: inside
                    max: 5000
                    height: 92
                    width: 70px
                    icon: mdi:brightness-5
                    severity:
                      - color: rgb(180, 70, 70)
                        from: 0
                        to: 2999
                      - color: rgb(70, 130, 180)
                        from: 3000
                        to: 10000
                      - color: rgb(180, 70, 70)
                        from: 10001
                        to: 20000
                    style: |-
                      bar-card-background {
                        background-color: "#223548";
                      }
                      bar-card-value {
                        font-size: 15px;
                        font-weight: bold;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                      }
                      bar-card-name {
                        margin-top: 20px;
                        font-size: 14px;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                        font-weight: bold;
                      }
                      bar-card-iconbar {
                        color: rgb(225,225,225);
                      }
                      bar-card-indicator {
                        color: rgb(225,225,225);
                      }
                    entities:
                      - entity: sensor.plante_lum_pied_elephant
                  - type: custom:bar-card
                    name: ''
                    entity_row: true
                    direction: up
                    unit_of_measurement: null
                    positions:
                      value: outside
                      name: 'off'
                      indicator: inside
                      icon: inside
                    max: 2000
                    height: 92
                    width: 70px
                    severity:
                      - color: rgb(180, 70, 70)
                        from: 0
                        to: 349
                      - color: rgb(70, 130, 180)
                        from: 350
                        to: 2000
                      - color: rgb(180, 70, 70)
                        from: 2001
                        to: 3000
                    style: |-
                      bar-card-background {
                        background-color: "#223548";
                      }
                      bar-card-value {
                        font-size: 15px;
                        font-weight: bold;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                      }
                      bar-card-name {
                        margin-top: 20px;
                        font-size: 14px;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                        font-weight: bold;
                      }
                      bar-card-iconbar {
                        color: rgb(225,225,225);
                      }
                      bar-card-indicator {
                        color: rgb(225,225,225);
                      }
                    entities:
                      - entity: sensor.plante_fertilite_pied_elephant
              - type: custom:apexcharts-card
                header:
                  show: true
                  show_states: true
                  colorize_states: true
                graph_span: 7d
                apex_config:
                  grid:
                    show: false
                  legend:
                    fontSize: 12px
                    height: 40
                  dataLabels:
                    enabled: false
                  stroke:
                    width: 3
                    curve: smooth
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                yaxis:
                  - id: first
                    max: ~100
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                  - id: second
                    opposite: true
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                all_series_config:
                  stroke_width: 2
                series:
                  - entity: sensor.plante_hum_pied_elephant
                    name: humidité
                    yaxis_id: first
                    unit: '%'
                    color: rgb(70, 130, 180)
                    type: area
                    show:
                      extremas: true
                      in_brush: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
                  - entity: sensor.plante_fertilite_pied_elephant
                    name: fertilité du sol
                    yaxis_id: second
                    unit: µS/cm
                    color: rgb(70, 180, 103)
                    type: area
                    show:
                      extremas: true
                      in_brush: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "🍋 Citronnier " ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: custom:bar-card
                    name: ''
                    entity_row: true
                    direction: up
                    unit_of_measurement: null
                    positions:
                      value: outside
                      name: 'off'
                      indicator: inside
                      icon: inside
                    max: 50
                    height: 92
                    width: 70px
                    icon: mdi:thermometer
                    severity:
                      - color: rgb(180, 70, 70)
                        from: 0
                        to: 4.9
                      - color: rgb(70, 130, 180)
                        from: 5
                        to: 36
                      - color: rgb(180, 70, 70)
                        from: 36.1
                        to: 50
                    style: |-
                      bar-card-background {
                        background-color: "#223548";
                      }
                      bar-card-value {
                        font-size: 15px;
                        font-weight: bold;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                      }
                      bar-card-name {
                        margin-top: 20px;
                        font-size: 14px;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                        font-weight: bold;
                      }
                      bar-card-iconbar {
                        color: rgb(225,225,225);
                      }
                      bar-card-indicator {
                        color: rgb(225,225,225);
                      }
                    entities:
                      - entity: sensor.plante_citro_temp
                  - type: custom:bar-card
                    name: ''
                    entity_row: true
                    direction: up
                    unit_of_measurement: null
                    positions:
                      value: outside
                      name: 'off'
                      indicator: inside
                      icon: inside
                    max: 100
                    height: 92
                    width: 70px
                    icon: mdi:water
                    severity:
                      - color: rgb(180, 70, 70)
                        from: 0
                        to: 13.9
                      - color: rgb(70, 130, 180)
                        from: 14
                        to: 61
                      - color: rgb(180, 70, 70)
                        from: 61.1
                        to: 100
                    style: |-
                      bar-card-background {
                        background-color: "#223548";
                      }
                      bar-card-value {
                        font-size: 15px;
                        font-weight: bold;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                      }
                      bar-card-name {
                        margin-top: 20px;
                        font-size: 14px;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                        font-weight: bold;
                      }
                      bar-card-iconbar {
                        color: rgb(225,225,225);
                      }
                      bar-card-indicator {
                        color: rgb(225,225,225);
                      }
                    entities:
                      - entity: sensor.plante_citro_humidite
                  - type: custom:bar-card
                    name: ''
                    entity_row: true
                    direction: up
                    unit_of_measurement: null
                    positions:
                      value: outside
                      name: 'off'
                      indicator: inside
                      icon: inside
                    max: 5000
                    height: 92
                    width: 70px
                    icon: mdi:brightness-5
                    severity:
                      - color: rgb(180, 70, 70)
                        from: 0
                        to: 3699
                      - color: rgb(70, 130, 180)
                        from: 3700
                        to: 70000
                      - color: rgb(180, 70, 70)
                        from: 70001
                        to: 10000
                    style: |-
                      bar-card-background {
                        background-color: "#223548";
                      }
                      bar-card-value {
                        font-size: 15px;
                        font-weight: bold;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                      }
                      bar-card-name {
                        margin-top: 20px;
                        font-size: 14px;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                        font-weight: bold;
                      }
                      bar-card-iconbar {
                        color: rgb(225,225,225);
                      }
                      bar-card-indicator {
                        color: rgb(225,225,225);
                      }
                    entities:
                      - entity: sensor.plante_citro_lum
                  - type: custom:bar-card
                    name: ''
                    entity_row: true
                    direction: up
                    unit_of_measurement: null
                    positions:
                      value: outside
                      name: 'off'
                      indicator: inside
                      icon: inside
                    max: 1500
                    height: 92
                    width: 70px
                    severity:
                      - color: rgb(180, 70, 70)
                        from: 0
                        to: 199
                      - color: rgb(70, 130, 180)
                        from: 200
                        to: 1500
                      - color: rgb(180, 70, 70)
                        from: 1501
                        to: 2000
                    style: |-
                      bar-card-background {
                        background-color: "#223548";
                      }
                      bar-card-value {
                        font-size: 15px;
                        font-weight: bold;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                      }
                      bar-card-name {
                        margin-top: 20px;
                        font-size: 14px;
                        color: rgb(225,225,225);
                        text-shadow: 1px 1px #0005;
                        font-weight: bold;
                      }
                      bar-card-iconbar {
                        color: rgb(225,225,225);
                      }
                      bar-card-indicator {
                        color: rgb(225,225,225);
                      }
                    entities:
                      - entity: sensor.plante_citro_fertilite
              - type: custom:apexcharts-card
                header:
                  show: true
                  show_states: true
                  colorize_states: true
                graph_span: 7d
                apex_config:
                  grid:
                    show: false
                  legend:
                    fontSize: 12px
                    height: 40
                  dataLabels:
                    enabled: false
                  stroke:
                    width: 3
                    curve: smooth
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                yaxis:
                  - id: first
                    max: ~100
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                  - id: second
                    opposite: true
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                all_series_config:
                  stroke_width: 2
                series:
                  - entity: sensor.plante_citro_humidite
                    name: humidité
                    yaxis_id: first
                    unit: '%'
                    color: rgb(70, 130, 180)
                    type: area
                    show:
                      extremas: true
                      in_brush: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
                  - entity: sensor.plante_citro_fertilite
                    name: fertilité du sol
                    yaxis_id: second
                    unit: µS/cm
                    color: rgb(70, 180, 103)
                    type: area
                    show:
                      extremas: true
                      in_brush: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
  - theme: Backend-selected
    subview: true
    title: Agenda
    path: Agenda
    icon: mdi:weather-partly-cloudy
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: custom:vertical-stack-in-card
            cards:
              - type: custom:button-card
                entity: weather.ta_ville
                show_entity_picture: true
                show_icon: true
                show_name: false
                show_state: false
                show_label: false
                template:
                  - police
                  - style
                entity_picture: |
                  [[[
                    if ((entity.state == 'sunny') && (states['sun.sun'].state == 'above_horizon'))
                      return "/local/weather/icones animes/clear-day.svg"
                    if ((entity.state == 'sunny') || (entity.state == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
                      return "/local/weather/icones animes/clear-night.svg"  

                    if ((entity.state == 'lightning-rainy') && (states['sun.sun'].state == 'above_horizon'))
                      return "/local/weather/icones animes/thunderstorms-day-rain.svg"
                    if ((entity.state == 'lightning-rainy') || (entity.state == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
                      return "/local/weather/icones animes/thunderstorms-night-rain.svg"

                    if ((entity.state == 'fog') && (states['sun.sun'].state == 'above_horizon'))
                      return "/local/weather/icones animes/fog-day.svg"             
                    if ((entity.state == 'fog') && (states['sun.sun'].state == 'below_horizon'))
                      return "/local/weather/icones animes/fog-night.svg"

                    if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'above_horizon'))
                      return "/local/weather/icones animes/partly-cloudy-day.svg"                    
                    if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'below_horizon'))
                      return "/local/weather/icones animes/partly-cloudy-night.svg"  

                    if ((entity.state == 'rainy') && (states['sun.sun'].state == 'above_horizon'))
                      return "/local/weather/icones animes/partly-cloudy-day-rain.svg"                      
                    if ((entity.state == 'rainy') && (states['sun.sun'].state == 'below_horizon'))
                      return "/local/weather/icones animes/partly-cloudy-night-rain.svg" 

                    if ((entity.state == 'lightning') && (states['sun.sun'].state == 'above_horizon'))
                      return "/local/weather/icones animes/thunderstorms-day.svg"                      
                    if ((entity.state == 'lightning') && (states['sun.sun'].state == 'below_horizon'))
                      return "/local/weather/icones animes/thunderstorms-night.svg" 

                    if (entity.state == 'clear-night')
                      return "/local/weather/icones animes/clear-night.svg";

                    if (entity.state == 'sleet')
                      return "/local/weather/icones animes/sleet.svg";  

                    if (entity.state == 'pouring')
                      return "/local/weather/icones animes/umbrella.svg"; 

                    if (entity.state == 'snowy-rainy')
                      return "/local/weather/icones animes/sleet.svg";  

                    if (entity.state == 'snow')
                      return "/local/weather/icones animes/snow.svg"; 

                    if (entity.state == 'snowy')
                      return "/local/weather/icones animes/snow.svg"; 

                    if (entity.state == 'cloudy')
                      return "/local/weather/icones animes/cloudy.svg"; 

                    if (entity.state == 'wind')
                      return "/local/weather/icones animes/wind.svg"; 

                    if (entity.state == 'hail')
                      return "/local/weather/icones animes/hail.svg"; 
                  ]]]
                styles:
                  img_cell:
                    - border-radius: 0%
                    - width: 70px
                    - height: 70px
                    - position: absolute
                    - top: 0%
                    - left: 15%
                    - background-color: transparent
                    - color: transparent
                    - border-color: transparent
                    - box-shadow: transparent
                  entity_picture:
                    - width: 90%
                  grid:
                    - grid-template-areas: |
                        "date"
                        "meteo"
                        "temp"        
                        "bouton"        
                        "jauge"
                        "alerte"
                    - grid-template-columns: 1fr
                    - grid-template-rows: >-
                        min-content min-content min-content min-content 
                        min-content 1fr
                    - gap: 0%
                    - overflow: hidden
                  card:
                    - padding: 3% 0% 2% 0%
                    - font-size: 13px
                  custom_fields:
                    date:
                      - padding: 0px 0px 0px 20px
                      - font-weight: bold
                      - font-size: 13px
                      - color: lightgrey
                      - text-align: center
                      - white-space: normal
                    meteo:
                      - padding: 0px 0px 0px 20px
                      - font-weight: bold
                      - font-size: 13px
                      - color: lightgrey
                      - text-align: center
                    temp:
                      - padding: 0px 0px 0px 20px
                      - font-weight: bold
                      - font-size: 25px
                      - color: lightgrey
                      - text-align: center
                    alerte:
                      - padding: 10px 0px 0px 0px
                      - white-space: normal
                      - width: calc(100% + 1px)
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)
                      - '--ha-card-box-shadow': none
                      - '--ha-card-border-width': 0px
                    bouton:
                      - padding: 10px 0px 0px 10px
                      - white-space: normal
                      - width: calc(100% + 1px)
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)
                      - '--ha-card-box-shadow': none
                      - '--ha-card-border-width': 0px
                    jauge:
                      - padding: 10px 0px 0px 0px
                      - width: calc(100% + 0px)
                      - '--ha-card-border-width': 0px
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)
                      - '--ha-card-box-shadow': none
                custom_fields:
                  date: |
                    [[[ return states['sensor.date_simple'].state ]]]
                  meteo: |
                    [[[ return states['sensor.weather_conditions'].state ]]]
                  temp: >
                    [[[ return states['sensor.weather_temperature_v2'].state +"°
                    " ]]]
                  alerte:
                    card:
                      type: custom:vertical-stack-in-card
                      horizontal: true
                      cards:
                        - type: custom:button-card
                          entity: sensor.weather_alert_vent_violent
                          name: Vent violent
                          icon: mdi:weather-windy
                          template:
                            - carte_scene
                          styles:
                            icon:
                              - color: |
                                  [[[
                                     if( states['sensor.weather_alert_vent_violent'].state == "Jaune")
                                       return "gold"
                                     if( states['sensor.weather_alert_vent_violent'].state == "Orange")
                                       return "orange" 
                                     if( states['sensor.weather_alert_vent_violent'].state == "Rouge")
                                       return "red"                          
                                     return ""
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                     if( states['sensor.weather_alert_vent_violent'].state == "Jaune")
                                       return "var(--custom-img-cell-color-gold)" 
                                     if( states['sensor.weather_alert_vent_violent'].state == "Orange")
                                       return "var(--custom-img-cell-color-orange)" 
                                     if( states['sensor.weather_alert_vent_violent'].state == "Rouge")
                                       return "var(--custom-img-cell-color-red)"                          
                                     return "var(--pastille_off)"
                                  ]]]
                        - type: custom:button-card
                          entity: sensor.49_weather_alert
                          name: Inondation
                          icon: mdi:waves
                          template:
                            - carte_scene
                          styles:
                            icon:
                              - color: |
                                  [[[
                                     if( states['sensor.49_weather_alert'].attributes.Inondation == "Jaune")
                                       return "gold"
                                     if( states['sensor.49_weather_alert'].attributes.Inondation == "Orange")
                                       return "orange" 
                                     if( states['sensor.49_weather_alert'].attributes.Inondation == "Rouge")
                                       return "red"                          
                                     return ""
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                     if( states['sensor.49_weather_alert'].attributes.Inondation == "Jaune")
                                       return "var(--custom-img-cell-color-gold)" 
                                     if( states['sensor.49_weather_alert'].attributes.Inondation == "Orange")
                                       return "var(--custom-img-cell-color-orange)" 
                                     if( states['sensor.49_weather_alert'].attributes.Inondation == "Rouge")
                                       return "var(--custom-img-cell-color-red)"                          
                                     return "var(--pastille_off)"
                                  ]]]
                        - type: custom:button-card
                          entity: sensor.49_weather_alert
                          name: Orages
                          icon: mdi:weather-lightning
                          template:
                            - carte_scene
                          styles:
                            icon:
                              - color: |
                                  [[[
                                     if( states['sensor.49_weather_alert'].attributes.Orages == "Jaune")
                                       return "gold"
                                     if( states['sensor.49_weather_alert'].attributes.Orages == "Orange")
                                       return "orange" 
                                     if( states['sensor.49_weather_alert'].attributes.Orages == "Rouge")
                                       return "red"                          
                                     return ""
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                     if( states['sensor.49_weather_alert'].attributes.Orages == "Jaune")
                                       return "var(--custom-img-cell-color-gold)" 
                                     if( states['sensor.49_weather_alert'].attributes.Orages == "Orange")
                                       return "var(--custom-img-cell-color-orange)" 
                                     if( states['sensor.49_weather_alert'].attributes.Orages == "Rouge")
                                       return "var(--custom-img-cell-color-red)"                          
                                     return "var(--pastille_off)"
                                  ]]]
                        - type: custom:button-card
                          entity: sensor.weather_alert_pluie_inondation
                          name: Pluie
                          icon: mdi:weather-pouring
                          template:
                            - carte_scene
                          styles:
                            icon:
                              - color: |
                                  [[[
                                     if( states['sensor.weather_alert_pluie_inondation'].state == "Jaune")
                                       return "gold"
                                     if(states['sensor.weather_alert_pluie_inondation'].state == "Orange")
                                       return "orange" 
                                     if( states['sensor.weather_alert_pluie_inondation'].state == "Rouge")
                                       return "red"                          
                                     return ""
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                     if( states['sensor.weather_alert_pluie_inondation'].state == "Jaune")
                                       return "var(--custom-img-cell-color-gold)" 
                                     if( states['sensor.weather_alert_pluie_inondation'].state== "Orange")
                                       return "var(--custom-img-cell-color-orange)" 
                                     if( states['sensor.weather_alert_pluie_inondation'].state == "Rouge")
                                       return "var(--custom-img-cell-color-red)"                          
                                     return "var(--pastille_off)"
                                  ]]]
                        - type: custom:button-card
                          entity: sensor.weather_alert_neige_verglas
                          name: Neige Verglas
                          icon: mdi:weather-snowy-heavy
                          template:
                            - carte_scene
                          styles:
                            icon:
                              - color: |
                                  [[[
                                     if( states['sensor.weather_alert_neige_verglas'].state == "Jaune")
                                       return "gold"
                                     if(states['sensor.weather_alert_neige_verglas'].state == "Orange")
                                       return "orange" 
                                     if( states['sensor.weather_alert_neige_verglas'].state == "Rouge")
                                       return "red"                          
                                     return ""
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                     if( states['sensor.weather_alert_neige_verglas'].state == "Jaune")
                                       return "var(--custom-img-cell-color-gold)" 
                                     if( states['sensor.weather_alert_neige_verglas'].state== "Orange")
                                       return "var(--custom-img-cell-color-orange)" 
                                     if( states['sensor.weather_alert_neige_verglas'].state == "Rouge")
                                       return "var(--custom-img-cell-color-red)"                          
                                     return "var(--pastille_off)"
                                  ]]]
                        - type: custom:button-card
                          entity: sensor.weather_alert_grand_froid
                          name: Grand froid
                          icon: mdi:thermometer-minus
                          template:
                            - carte_scene
                          styles:
                            icon:
                              - color: |
                                  [[[
                                     if( states['sensor.weather_alert_grand_froid'].state == "Jaune")
                                       return "gold"
                                     if(states['sensor.weather_alert_grand_froid'].state == "Orange")
                                       return "orange" 
                                     if( states['sensor.weather_alert_grand_froid'].state == "Rouge")
                                       return "red"                          
                                     return ""
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                     if( states['sensor.weather_alert_grand_froid'].state == "Jaune")
                                       return "var(--custom-img-cell-color-gold)" 
                                     if( states['sensor.weather_alert_grand_froid'].state == "Orange")
                                       return "var(--custom-img-cell-color-orange)" 
                                     if( states['sensor.weather_alert_grand_froid'].state == "Rouge")
                                       return "var(--custom-img-cell-color-red)"                          
                                     return "var(--pastille_off)"
                                  ]]]
                  bouton:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.saison
                          show_state: true
                          show_label: false
                          template:
                            - police
                            - base
                          name: Saison
                          icon: |
                            [[[
                              if (states['sensor.saison'].state == 'Printemps')
                                return 'mdi:flower'
                              if (states['sensor.saison'].state == 'Été')
                                return 'mdi:weather-sunny'
                              if (states['sensor.saison'].state == 'Automne')
                                return 'mdi:leaf'
                              if (states['sensor.saison'].state == 'Hiver')
                                return 'mdi:snowflake'                    
                                  ]]]
                          styles:
                            icon:
                              - color: |
                                  [[[
                                    if (states['sensor.saison'].state == 'Printemps')
                                      return 'rgb(154,205,50)'
                                    if (states['sensor.saison'].state == 'Été')
                                      return 'rgb(255,215,0)'
                                    if (states['sensor.saison'].state == 'Automne')
                                      return 'grey'
                                    if (states['sensor.saison'].state == 'Hiver')
                                      return 'rgb(0,191,255)'                          
                                  ]]]
                        - type: custom:button-card
                          entity: sensor.weather_soleil_v2
                          show_state: true
                          show_label: false
                          template:
                            - police
                            - base
                          name: |
                            [[[
                              if (states['sun.sun'].state == 'below_horizon')
                                return 'Levé'
                              return 'Couché'
                                  ]]]
                          icon: |
                            [[[
                              if (states['sun.sun'].state == 'below_horizon')
                                return 'mdi:weather-sunset'
                              return 'mdi:moon-waning-crescent'
                                  ]]]
                          styles:
                            icon:
                              - color: |
                                  [[[
                                    if (states['sun.sun'].state == 'below_horizon')
                                      return 'orange'
                                    return 'rgb(123,104,238)'
                                  ]]]
                        - type: custom:button-card
                          entity: sensor.weather_temp_min_max
                          name: Demain
                          icon: mdi:thermometer
                          show_state: true
                          show_label: false
                          template:
                            - police
                            - base
                          styles:
                            img_cell:
                              - background-color: |
                                  [[[
                                    if (states['sensor.weather_temp_max_v2'].state > 20)
                                      return 'var(--custom-img-cell-color-red)'
                                    if (states['sensor.weather_temp_max_v2'].state < 10)
                                      return 'var(--custom-img-cell-color-blue)'
                                    return 'var(--pastille_off)'
                                  ]]]
                            icon:
                              - color: |
                                  [[[
                                    if (states['sensor.weather_temp_max_v2'].state > 20)
                                      return 'var(--custom-icon-color-red)'
                                    if (states['sensor.weather_temp_max_v2'].state < 10)
                                      return 'var(--custom-icon-color-blue)'
                                    return 'var(--icon_off)'
                                  ]]]
                  jauge:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - base_moyenne
                          styles:
                            custom_fields:
                              bouton:
                                - position: absolute
                                - top: 40%
                                - left: 50%
                                - width: calc(98% + 0px)
                                - transform: translate(-50%, calc(-50% + 10px))
                                - '--ha-card-border-width': 0px
                          custom_fields:
                            bouton:
                              card:
                                square: false
                                columns: 6
                                type: grid
                                cards:
                                  - type: custom:button-card
                                    entity: sensor.weather_temperature_v2
                                    name: 🌡️
                                    units: °C
                                    template:
                                      - carte_jauge
                                      - state_unavailable
                                    styles:
                                      name:
                                        - font-size: 11px
                                      state:
                                        - font-size: 11px
                                      custom_fields:
                                        gauge:
                                          - width: calc(125% + 0px)
                                    custom_fields:
                                      gauge:
                                        card:
                                          entity: sensor.weather_temperature_v2
                                          gauge:
                                            max_value: 50
                                            min_value: -10
                                            severity:
                                              - color: rgb(176, 196, 222)
                                                from: 0
                                                to: 14.9
                                              - color: rgb(70, 130, 180)
                                                from: 15
                                                to: 26
                                              - color: rgb(180, 70, 70)
                                                from: 26.1
                                                to: 50
                                  - type: custom:button-card
                                    entity: sensor.weather_conditions_vent
                                    name: 💨
                                    units: km/h
                                    template:
                                      - carte_jauge
                                      - state_unavailable
                                    styles:
                                      name:
                                        - font-size: 11px
                                      state:
                                        - font-size: 10px
                                      custom_fields:
                                        gauge:
                                          - width: calc(125% + 0px)
                                    custom_fields:
                                      gauge:
                                        card:
                                          entity: sensor.weather_conditions_vent
                                          gauge:
                                            max_value: 100
                                            min_value: 0
                                            severity:
                                              - color: rgb(70, 130, 180)
                                                from: 0
                                                to: 40
                                              - color: rgb(180, 70, 70)
                                                from: 41.1
                                                to: 100
                                  - type: custom:button-card
                                    entity: sensor.weather_conditions_ciel
                                    name: ☁️
                                    units: '%'
                                    template:
                                      - carte_jauge
                                      - state_unavailable
                                    styles:
                                      name:
                                        - font-size: 11px
                                      state:
                                        - font-size: 11px
                                      custom_fields:
                                        gauge:
                                          - width: calc(125% + 0px)
                                    custom_fields:
                                      gauge:
                                        card:
                                          entity: sensor.weather_conditions_ciel
                                          gauge:
                                            max_value: 100
                                            min_value: 0
                                            severity:
                                              - color: rgb(70, 130, 180)
                                                from: 0
                                                to: 60
                                              - color: rgb(180, 70, 70)
                                                from: 60.1
                                                to: 100
                                  - type: custom:button-card
                                    entity: sensor.weather_conditions_pluie
                                    name: ☔️
                                    units: '%'
                                    template:
                                      - carte_jauge
                                      - state_unavailable
                                    styles:
                                      name:
                                        - font-size: 11px
                                      state:
                                        - font-size: 11px
                                      custom_fields:
                                        gauge:
                                          - width: calc(125% + 0px)
                                    custom_fields:
                                      gauge:
                                        card:
                                          entity: sensor.weather_conditions_pluie
                                          gauge:
                                            max_value: 100
                                            min_value: 0
                                            severity:
                                              - color: rgb(70, 130, 180)
                                                from: 0
                                                to: 30
                                              - color: rgb(180, 70, 70)
                                                from: 30.1
                                                to: 100
                                  - type: custom:button-card
                                    entity: sensor.weather_conditions_uv
                                    name: ☀️
                                    template:
                                      - carte_jauge
                                      - state_unavailable
                                    styles:
                                      name:
                                        - font-size: 11px
                                      state:
                                        - font-size: 11px
                                      custom_fields:
                                        gauge:
                                          - width: calc(125% + 0px)
                                    custom_fields:
                                      gauge:
                                        card:
                                          entity: sensor.weather_conditions_uv
                                          gauge:
                                            max_value: 12
                                            min_value: 0
                                            severity:
                                              - color: rgb(70, 130, 180)
                                                from: 0
                                                to: 5
                                              - color: rgb(180, 70, 70)
                                                from: 6
                                                to: 12
                                  - type: custom:button-card
                                    entity: sensor.weather_conditions_neige
                                    name: ❄️
                                    units: '%'
                                    template:
                                      - carte_jauge
                                      - state_unavailable
                                    styles:
                                      name:
                                        - font-size: 11px
                                      state:
                                        - font-size: 11px
                                      custom_fields:
                                        gauge:
                                          - width: calc(125% + 0px)
                                    custom_fields:
                                      gauge:
                                        card:
                                          entity: sensor.weather_conditions_neige
                                          gauge:
                                            max_value: 100
                                            min_value: 0
                                            severity:
                                              - color: rgb(70, 130, 180)
                                                from: 0
                                                to: 10
                                              - color: rgb(180, 70, 70)
                                                from: 10.1
                                                to: 100
              - type: custom:clock-weather-card
                entity: weather.ta_ville
                title: ''
                sun_entity: sun.sun
                weather_icon_type: fill
                animated_icon: true
                forecast_days: 7
                locale: fr
                time_format: 24
                date_pattern: d MMMM y
                hide_today_section: true
                hide_forecast_section: false
                style: |
                  ha-card {
                    font-size: 90%;
                    font-family: Avenir;
              - type: custom:meteofrance-weather-card
                entity: weather.maison
                number_of_forecasts: '5'
                current: false
                details: false
                one_hour_forecast: true
                alert_forecast: true
                style: |
                  ha-card {
                    font-size: 80%;
                    font-family: Avenir;
        layout:
          width: 300
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - initial_view: dayGridMonth
            type: calendar
            entities:
              - calendar.famille_famille
              - calendar.calendrier_calendrier
              - calendar.poubelles_poubelles
        layout:
          width: 300
  - theme: Backend-selected
    title: Air
    path: air
    type: custom:horizontal-layout
    layout:
      width: 350
    subview: true
    icon: mdi:air-filter
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: sensor.moniteur_qualite_air
                icon: mdi:virus
                show_state: false
                show_label: true
                template:
                  - base
                  - state_jauge_air
                label: |
                  [[[
                    if (states['sensor.moniteur_qualite_air'].state < 65  )
                      return 'Excellent ! Rien à signaler'
                    if (states['sensor.moniteur_qualite_air'].state >= 65 && states['sensor.moniteur_qualite_air'].state < 220 )
                      return 'Correct : Aération ou ventilation recommandée'
                    if (states['sensor.moniteur_qualite_air'].state >= 220 && states['sensor.moniteur_qualite_air'].state < 660 )
                      return 'Moyen : Ventilation intensifiée recommandée'
                    if (states['sensor.moniteur_qualite_air'].state >= 660 && states['sensor.moniteur_qualite_air'].state < 2200 )
                      return 'Mauvais : Aération ou ventilation nécessaire'
                    if (states['sensor.moniteur_qualite_air'].state >= 2200  )
                      return 'Danger : Ventilation intensifiée nécessaire'
                    return ''
                  ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.moniteur_qualite_air
                    name: Particules
                    template:
                      - carte_jauge
                      - state_jauge_air
                      - state_unavailable
                      - last_changed
                    styles:
                      label:
                        - font-size: 12px
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.moniteur_qualite_air
                          gauge:
                            max_value: 5500
                            unit_of_measurement: ppb
                            severity:
                              - color: darkgrey
                              - color: var(--custom-icon-color-blue)
                                from: 65
                                to: 220
                              - color: orange
                                from: 221
                                to: 660
                              - color: orange
                                from: 661
                                to: 2200
                              - color: red
                                from: 2201
                                to: 5500
                  - type: custom:button-card
                    entity: sensor.qualite_air_pourcentage
                    name: Qualité
                    template:
                      - carte_jauge
                      - state_jauge_air_pourcentage
                      - state_unavailable
                    label: |
                      [[[
                        if (states['sensor.qualite_air_pourcentage'].state > 98.8  )
                          return 'Excellent'
                        if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                          return 'Correct'
                        if (states['sensor.qualite_air_pourcentage'].state < 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                          return 'Moyen'
                        if (states['sensor.qualite_air_pourcentage'].state < 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                          return 'Mauvais'
                        if (states['sensor.qualite_air_pourcentage'].state < 60  )
                          return 'Danger'
                        return ''
                      ]]]
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.qualite_air_pourcentage
                          gauge:
                            max_value: 100
                            severity:
                              - color: darkgrey
                              - color: var(--custom-icon-color-blue)
                                from: 96.1
                                to: 98.7
                              - color: yellow
                                from: 88.1
                                to: 96
                              - color: orange
                                from: 60.1
                                to: 88
                              - color: red
                                from: 0
                                to: 60
                  - type: custom:button-card
                    entity: sensor.moniteur_qualite_air_temperature
                    name: Moniteur
                    template:
                      - carte_thermo
                      - state_unavailable
                    variables:
                      var_label: |
                        [[[
                          if( states['sensor.moniteur_qualite_air_humidite'].state == "unavailable")
                            return "HS"
                          return states['sensor.moniteur_qualite_air_humidite'].state 
                        ]]]
                    custom_fields:
                      gauge:
                        card:
                          entity: sensor.moniteur_qualite_air_temperature
                      gauge_hum:
                        card:
                          entity: sensor.moniteur_qualite_air_humidite
              - type: custom:apexcharts-card
                experimental:
                  color_threshold: true
                header:
                  title: ''
                  show: true
                  show_states: true
                  colorize_states: true
                now:
                  show: true
                  color: red
                  label: Maintenant
                graph_span: 7d
                apex_config:
                  tooltip:
                    enabled: true
                  yaxis:
                    labels:
                      style:
                        fontSize: 10px
                        fontFamily: Avenir
                  xaxis:
                    axisBorder:
                      show: false
                    labels:
                      style:
                        fontSize: 10px
                        fontFamily: Avenir
                  legend:
                    show: false
                  grid:
                    show: true
                    borderColor: '#303030'
                    strokeDashArray: 3
                    position: back
                  dataLabels:
                    enabled: true
                  stroke:
                    width: 2
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.6
                      opacityTo: 0
                      stops:
                        - 0
                        - 50
                        - 100
                series:
                  - entity: sensor.moniteur_qualite_air
                    name: Particules
                    type: area
                    curve: smooth
                    fill_raw: last
                    float_precision: 1
                    show:
                      extremas: true
                    color_threshold:
                      - value: 0
                        color: darkgrey
                      - value: 65
                        color: dodgerblue
                      - value: 220
                        color: gold
                      - value: 660
                        color: orange
                      - value: 2200
                        color: red
                style: |
                  ha-card {
                     --ha-card-background: rgba(0, 0, 0, 0.2);
                     box-shadow: none;
                     font-family: Avenir;
                   }
  - theme: Backend-selected
    title: reglages
    path: reglages
    icon: mdi:cog
    subview: true
    type: custom:horizontal-layout
    layout:
      width: 350
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:cog
                    layout: icon|name
                    name: Réglages
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Afficher dans la carte activité" ]]]
              - type: custom:vertical-stack-in-card
                cards:
                  - type: grid
                    square: false
                    columns: 4
                    cards:
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidecar_show_mode
                        name: Modes
                      - type: custom:button-card
                        name: Serrures
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidebar_show_serrures
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidecar_show_autre
                        name: Appareils
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidecar_show_air
                        name: Air
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidecar_show_connecte
                        name: Connectés
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidecar_show_lumiere
                        name: Lumières
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidecar_show_porte
                        name: Portes
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidecar_show_mouvement
                        name: Mouvements
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidecar_show_maj
                        name: MàJ
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidecar_show_appareils_charges
                        name: Chargés
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidecar_show_courrier
                        name: Courrier
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidebar_show_meteo
                        name: Météo
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidecar_show_electricite
                        name: Électricité
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.sidecar_show_info
                        name: Savoir
              - type: divider
                style:
                  height: 1px
                  width: 80%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 20px
                  margin-bottom: 20px
                  background: '#62717b'
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Modes" ]]]
              - type: custom:vertical-stack-in-card
                cards:
                  - type: grid
                    square: false
                    columns: 5
                    cards:
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.nilemato
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: automation.annonce_ecole
                        name: École
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.vacances
                        name: Vacances
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.noel
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: input_boolean.halloween
                        tap_action:
                          action: toggle
              - type: divider
                style:
                  height: 1px
                  width: 80%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 20px
                  margin-bottom: 20px
                  background: '#62717b'
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Thèmes" ]]]
              - type: custom:vertical-stack-in-card
                cards:
                  - type: grid
                    square: false
                    columns: 3
                    cards:
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: script.theme_jour
                        name: Mad Geek
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: script.theme_nuit
                        name: Mad Night
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        show_label: false
                        template:
                          - carte_badge
                          - state_bleu
                          - state_unavailable
                        entity: script.theme_reload
                        name: Refresh
                        tap_action:
                          action: toggle
  - theme: Backend-selected
    title: Invités
    path: invités
    subview: true
    icon: mdi:qrcode-scan
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:home-account
                    layout: icon|name
                    name: Invités
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                      icon:
                        '--mdc-icon-size': 20px
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Wifi" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    border-color: rgba(12, 12, 14, 0.2);
                    border-style: outset;
                    border-width: 1px;
                    box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3);
                  }
                cards:
                  - type: picture
                    image: /local/qr code wifi.PNG
                    tap_action:
                      action: navigate
                      navigation_path: /
                    hold_action:
                      action: none

